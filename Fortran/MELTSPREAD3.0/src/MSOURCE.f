C...................................................................... 
C.....SUBROUTINE MSOURCE PERFORMS THREE FUNCTIONS: 1) CALCULATES THE 
C.....MELT POUR MASS SOURCE TERM FROM THE RPV, 2) CALCULATES MASS SOURCE
C.....TERM INTO EACH NODALIZATION CELL USING THE MULTAPLICATIVE MAPPING
C.....FACTOR XFACMS(-), AND ALSO DOES THE JET BREAKUP CALCULATION IF 
C.....THAT MODELING OPTION HAS BEEN SELECTED.
C......................................................................
      SUBROUTINE MSOURCE(IFAILJ)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      REAL(8) KL,KV
      DIMENSION HSEND(28)
      DIMENSION XSEND(999),YSEND(999)
      COMMON /WATVARS/FCRUST(999),VLW(999),VLWOLD(999),DWAT(999),
     1DWATOLD(999),EWAT(999),EWATOLD(999),TWAT(999),CORDDC(999),
     2DSRDC(999),DHDC(999),TSRDC,TINTDC,HWATB(999),TSURFW(999),XMS(999),
     3XMST,XINTS,ESRDTW(999),TSRDTW(999),DSRDTW(999),TSRDW,TINTDW,
     4TWATI,ELDCO(999),ELDCX(999,99),CRDCX(999,99),TIMINJ(999,99),
     5XDTINJ(999,99),TDTINJ(999,99),ELWATI,XMWAT,XMWATO,XBALW,
     6HDRY(999),EINTW,XMCT(199),XMCDT(16,999),TMPCDT(999),CMPCDT(999),
     7FDC(999),FCOV(999),FBED(999),FHEAT(999),XFACJ(999),
     8XMBEDJ(16,999),XMBEDJT(999),PBED,QBED(999),QWATER(999),
     9QSURFACE(999),QWATERT(999),HBED(999),POROSBED,XMCRDT(16,999),
     1XMCRT(999),XMBDINT(999),XMT(999)
      COMMON /WATINT/NDOWNC,NDC(999),NPTDC(999),NINJ,NINJP(999),
     1NPTINJ(999)
      COMMON/CATCHR/A(999),B(999),C(999),D(999),P(999),Q(999),
     1RECON(999),DELVEL(999),DSRDT(999),DELHTS(999),EMAX(999,999),
     2DBLKEN(999),DELHIT(16,999),SOURCE(16,999),SRCTOT(999),
     3HCROLD(16,999),DCDOT(999),HCRUST(16,999),DFILM(16,999),
     4DFMOLD(16,999),DENOLD(999),SIGOX(999),SIGCON(999),BET(999),
     5TFZX(999),TFZC(999),TKX(999),TKM(999),THETO(999,999),
     6THET1(999,999),OMEG0(4,999),OMEG1(4,999),TAO0(999),TAO1(999),
     7SIG0(999),SIG1(999),TARGB(999),DADOT(999),DADOTG(999),
     8XLOLD(4,999),VISREX(999),TATMS(999),HTMP(999),DHTMP(999),
     9HTMOLD(999)
      COMMON/PRINTB/ELEVAT(999),ELOLD(999),XDIST(999,999),XBTW(999,999),
     1TEMP(999,999),ENTHP(999,999),EOLD(999,999),ENBLK(999),EBKOLD(999),
     2TBULK(999),HITE(16,999),HITOLD(16,999),HTOT(999),HTOLD(999),
     3HTCFT(999),HTCOEF(999),QFLUXT(999),QFLUXB(999),VEL(999),ELO(999),
     4VELOLD(999),SRSCOR(16),AREA(999),RAD(999),ARC(999),VOLCN(16),
     5VOID(999),VGJ(999),ZABLAT(999),ZABOLD(999),DCRUST(999),
     6DCROLD(999),DABCON(999),DABOLD(999),DFILMT(999),DFOLT(999),
     7SMFLX(4,999),XLSMF(4,999),TOTVOL,XFACMS(999),XMFLXA,XMCORT,
     8VCORT,TOTOX,TOTMET,QFLXT,QFLXB,TIME,DTIME,XMCOR(16),VCOR(16),
     9TCONI,RSAND,HDOWNC,TBOUND,EMISCN,PDRYWL,XDISTO(999),QOXT(999),
     1XLENSH,XBTWO(999),RCOMP,WDOOR,RSUMP,RSHELL,RPED,TPED,ELSMP,
     1TENDP(10,999),TFRZSH,TDEBRS,TKDEBR,PDEBR,CPDEBR,ENENDP(10,999),
     2ENOLDP(10,999),DXVERT,DXSNK,XDSTE(10,999),XBTE(10,999),HXLA(999),
     3HXLB(999),TSFEB(999),DCRS(999),DCRSLD(999),HCRS(16,999),
     4HCRSLD(16,999),THETE0(10,999),THETE1(10,999),QSHELL,QSHELE,TSHELI,
     5SIGOXE(999),FKOXE(999),RINJC,XLSEC,ANGSEC,ANINJC,XLCHAN,WCHNL,
     6TEFZX(999),TIMSPC(999),DXNODE(999),TNORM(999),FRCSOL(999),
     7ALPSPR(999),CRAMCON,HINTF,TSHLMX,XFRMX(999),XFROX(999),XFRTX(999),
     8XMLMX(999),XMLOX(999),XMLTX(999),XTOTX(999),TIMEO,TMAX,EDOWN(999),
     9HCP(999)
      COMMON/PROPI/ NMATC,NMATFI,NMATFF,ICAOH2,ICACO3,IMCCO3,IFH2O,     
     1IVH2O,ICK2O,IVK2O,INA2O,ITIO2,ISIO2,ICAO,IMGO,IAL2O3,IFEO,IFE2O3, 
     2IFE3O4,IFE,ICR,INI,IZR,IU,IB4C,IB,ICR2O3,INIO,IUO2,IZRO2,IB2O3,   
     3NBCINT(999),NODES(999),NUMNOD,IMOX(28),IBAS,ILCS,ILL,NACTIV(999),     
     4NBFRZM,NBFRZO,NABLFM,NDRNFM,NTYPMT(999,999),NDOOR,NBMADJ,NUMSHV,   
     5NBSHL(999),NCRSTS(999),NUMSHH,NSKIPE,NACSH,NWAT,NPEND,NBCBOT,
     6NCRTOP,NBFZOE,NBFZME,NGEOM,NL(999,999),NFRSCT,NLOGSH,NADAB,NINVIS,
     7NSIMST,NSTEEL,NOVHT,NOVTK,NOVUM,NOVEM,NOVSIG,NPLLOC(999),NBPL,
     8IXP(999),IYP(999),NVTPE,NSOLTP,NSOLF,NINTF,IFLGA(999),ICTYPE,ICTC,
     9NPOURS,NSMP,NPED,NDOR,NSHL,NANULS,NSMPCV,NBOIL,NSWALL,NMVER,
     1NCRTEM,NTHINC,NVELP,NITMAX,NENMAX,NPRINT,NPFREQ,NTIMSPC,NPLFREQ,
     2NPLTOT,NJET,NJETP,NJETD,NJETND,NODCAP,NVELPW,NITMAXW,NENMXW,
     3IFLGJ(999),NBEDCQ,ISHELE
      COMMON/PRINTR/ QFEH2O,QCRH2O,QZRH2O,QFECO2,QCRCO2,QZRCO2,
     4XFH2OU,XFCAOH,XFMGCA,XFCACO,XZRMRE,XFEMRE,XCRMRE,XZRORE,XFEORE,   
     5XCRORE,XMH2O,XMCO2,XMCACO,XMMGCA,XMCAOH,TFWL,TFWS,TBWL,TBWS,      
     6TMCAL,TMCAS,TCAL,TCAS,TFOS,TFOL,TFMS,TFML,XVISC(28),SVISC(28),    
     7XMOL(28),FMMOL(28),ROM(28),ROMLIQ(28),AEQM(28,2),BEQM(28,2),
     8CEQM(28,2),ECL,ECS,ECAL,ECAS,EMCAL,EMCAS,EBWL,EBWS,EFWL,EFWS,    
     9STEF,GRAV,PI,TCS,TCL,CCL,CCS,RMASSL,WPCC,WPM,WPA,WPCS,ROC,RMASSS,   
     1ANGSHL,RSLAGL,RSLAGS,HNODT,VFAV,VGAV,QXAV,XWTSS(16),  
     2TSCS(2),TSCL(2),ESCS(2),ESCL(2),CCSS(2),CCSL(2),ROSTLS,ROSTLL,
     3XFRGAS,HMINC,TST(99),TSTOP(99),AINTP(99),BINTP(99),DRATIO(999),
     4XBCN(999),XDCN(999),XBLT(15),ADEC(99),BDEC(99),APOUR(16,99),
     5BPOUR(16,99),XWTC(14),BWIDTH,THCKCV,TMBOIL,TEBOIL,VFINT,ANGFAN,
     6ALPMAX,THSHL,XFCABL,XNDMIN,DVMX,DAVMX,DEAVMX,DEMX,TDC,QDCU,QDCUO2,
     7TSINJ,EINJ,DTINJ,TKINJ,ROEV,CPINJ,SURFT,VSINJ,EMINJ,TSINJO,EINJO,
     8DTINJO,TKINJO,ROEVO,CPINJO,SURFTO,VSINJO,EMINJO,XLEADE,ARSUM,
     9DBUBOX,UTRISE,TREMSH,DJET,DFALL,WEBER,FROUDE,XPSAITO,XPEPSTN,
     1FRAG,XMBEDT,XMBED(16),XLPENT,XLPENA,UJET,UFALL,HFALL,ERPV,
     2TJETT(99),DJETT(99),HWATP,XDOTJET,DVMXW,DAVMXW,DEMXW,DEAVMXW,
     3QJETW,XSTMJF,TINTSJF,ESAT,DRDOOR,DRANL,EI,QDCBUO2,QDCBU,
     4EBEDS,EBEDB
      COMMON/DEFUNC/CPLIQP,CPSOLP,EFOSP,EFOLP,EFMSP,EFMLP     
C.....CALCULATE TIME-DEPENDENT MASS POUR RATE AND TEMPERATURE FROM RPV,
C.....AND DECAY HEAT.
      DO 3311 I=1,NPOURS 
      IF(TIME.LT.TST(I)) GO TO 3311
      IF(TIME.GT.TSTOP(I)) GO TO 3311
      NFLG=I
      GO TO 4312
 3311 CONTINUE
      WRITE(6,7671) TIME
      WRITE(2,7671) TIME
 7671 FORMAT(//,1X,'****TIME HAS EXCEEDED RANGE SPECIFIED FOR MELT POUR 
     1EVALUATION, TIME=',G12.5)
      IFAILJ=1
      GO TO 110
 4312 CONTINUE
      TSINJO=AINTP(NFLG)+BINTP(NFLG)*(TIME-TST(NFLG))
      QDCUO2=ADEC(NFLG)+BDEC(NFLG)*(TIME-TST(NFLG)) 
      QDCBUO2=QDCUO2
      DO 3312 KTP=1,16
      SRSCOR(KTP)=APOUR(KTP,NFLG)+BPOUR(KTP,NFLG)*(TIME-TST(NFLG))      
 3312 CONTINUE
      QDCU=(FMMOL(IU)/FMMOL(IUO2))*QDCUO2
      QDCBU=QDCU
      VMETCP=0.D0
      VOXCP=0.D0
      SRSCORT=0.D0
      DO 7224 KT=1,16 
      SRSCORT=SRSCORT+SRSCOR(KT)
      XMCOR(KT)=XMCOR(KT)+SRSCOR(KT)*DTIME
      XMCORT=XMCORT+SRSCOR(KT)*DTIME  
      CALL INDEX(KT,KJ)
      RVLE=ROMLIQ(KJ) 
      IF(KT.EQ.16) RVLE=RSLAGL*ROC
      DVCOR=(DTIME*SRSCOR(KT))/RVLE
      VCOR(KT)=VCOR(KT)+DVCOR
      IF(KT.LE.7) VMETCP=VMETCP+DVCOR
      IF(KT.GE.8) VOXCP=VOXCP+DVCOR
      VCORT=VCORT+DVCOR
 7224 CONTINUE
      DO 8077 KN=1,NUMNOD
      SRCTOT(KN)=0.D0 
      DO 6008 KT=1,16 
      SOURCE(KT,KN)=SRSCOR(KT)*XFACMS(KN) 
      SRCTOT(KN)=SRCTOT(KN)+SOURCE(KT,KN) 
 6008 CONTINUE
 8077 CONTINUE
C.....NOW UPDATE MELT POUR THERMOPHYSICAL PROPERTIES.  FIRST
C.....FIND A NODE WHICH IS A RECEPTOR FOR CORIUM SUCH THAT THE 
C.....PROPERTIES OF THE IMPINGING MELT MAY BE EVALUATED. 
      JSEND=1
      IF(NGEOM.EQ.1) GO TO 4533
      DO 4534 I=1,NUMNOD
      IF(IFLGA(I).EQ.0) GO TO 4534
      JSEND=I
      GO TO 4533
 4534 CONTINUE
 4533 CONTINUE
      IF(SRCTOT(JSEND).LE.0.D0) GO TO 4535
C.....WITH RECEPTOR NODE IDENTIFIED, CALCULATE MATERIAL PROPERTIES
C.....AT THE EXIT CONDITIONS FROM THE RPV....
      HSUM=0.D0
      DO 4536 KTP=1,28
      HSEND(KTP)=0.D0 
 4536 CONTINUE
      DO 4538 KTP=1,15
      CALL INDEX(KTP,KJ)
      RVLE=ROMLIQ(KJ) 
      HSEND(KJ)=(DTIME*SOURCE(KTP,JSEND))/RVLE      
      HSUM=HSUM+HSEND(KJ)
 4538 CONTINUE
      HSEND(10)=(DTIME*WPCS*SOURCE(16,JSEND))/ROMLIQ(ISIO2)   
      HSEND(11)=(DTIME*WPCC*SOURCE(16,JSEND))/ROMLIQ(ICAO)    
      HSEND(12)=(DTIME*WPM*SOURCE(16,JSEND))/ROMLIQ(IMGO)     
      HSEND(13)=(DTIME*WPA*SOURCE(16,JSEND))/ROMLIQ(IAL2O3)   
      HSUM=HSUM+HSEND(10)+HSEND(11)+HSEND(12)+HSEND(13)
      CALL ETF(EINJO,HSEND,TSINJO,DTINJO)    
      CALL TEF(EINJO,HSEND,TPASS,DPASS)    
      CPINJO=CPLIQP    
      CALL CONDF(TSINJO,HSEND,FKO,FKM,TKINJO)
      CALL VISCF(TSINJO,HSEND,VISFLO,VISFLM,VSINJO,VISPAS)
      CALL EMISF(TSINJO,HSEND,EMINJO)
      CALL TEN(TSINJO,HSEND,SURFTO)
      ROEVO=(DTIME*SRCTOT(JSEND))/HSUM     
 4535 CONTINUE
C.....NOW DO JET BREAKUP ANALYSIS IF THAT OPTION HAS BEEN
C.....SELECTED, MELT SOURCE IS > 0, AND WATER IS PRESENT..
      IF(NJET.EQ.0) GO TO 99
      IF(SRCTOT(JSEND).LE.0.D0) GO TO 99
      GO TO 711
C.....SET PROPERTY/POUR DATA CONSISTENT WITH THE FACT THAT 
C.....THE POURRATE IS CURRENTLY ZERO AND THEN EXIT
   99 CONTINUE
      XDOTJET=0.D0
      QJETW=0.D0
      XSTMJF=0.D0
      DJET=0.D0
      DFALL=0.D0
      UJET=0.D0
      UFALL=0.D0
      HWATP=DMAX1(DWAT(JSEND)-HBED(JSEND),0.D0)
      HFALL=ERPV-(HWATP+HBED(JSEND)+HTOT(JSEND)+ELEVAT(JSEND))
      WEBER=0.D0
      FROUDE=0.D0
      XPSAITO=0.D0
      XPEPSTN=0.D0
      XLPENT=0.D0
      XLPENA=0.D0
      FRAG=0.D0 
      TSINJ=TSINJO
      EINJ=EINJO
      DTINJ=DTINJO
      TKINJ=TKINJO
      ROEV=ROEVO
      CPINJ=CPINJO
      SURFT=SURFTO
      VSINJ=VSINJO
      EMINJ=EMINJO
      GO TO 110
C.....JET POUR, EVALUATE CHARACTERISTICS....
  711 CONTINUE
      HWATP=DMAX1(DWAT(JSEND)-HBED(JSEND),0.D0)
      HFALL=ERPV-(HWATP+HBED(JSEND)+HTOT(JSEND)+ELEVAT(JSEND))
      HFALL=DMAX1(HFALL,0.D0)
      XDOTJET=SRSCORT
      QJET=XDOTJET/ROEVO
      CALL INTERP(1,NJETD,TIME,TJETT,DJETT,DJET)
      AJET=0.25D0*PI*DJET*DJET
      UJET=QJET/AJET
      UFALL=UJET*DSQRT(1.D0+(2.D0*GRAV*HFALL)/(UJET*UJET))
      DFALL=DJET/(1.D0+(2.D0*GRAV*HFALL)/(UJET*UJET))**0.25D0
      IF(HWATP.GT.0.D0) GO TO 115
      WEBER=0.D0
      FROUDE=0.D0
      XPSAITO=0.D0
      XPEPSTN=0.D0
      XLPENT=0.D0
      XLPENA=0.D0
      FRAG=0.D0 
      TSINJ=TSINJO
      EINJ=EINJO
      DTINJ=DTINJO
      TKINJ=TKINJO
      ROEV=ROEVO
      CPINJ=CPINJO
      SURFT=SURFTO
      VSINJ=VSINJO
      EMINJ=EMINJO
      GO TO 110
  115 CONTINUE
C.....CALCULATE MELT STREAM BREAKUP IN WATER
      CALL CONWAT(TSAT,KL,PL,CL,UL,HLV,EWL,EWV,CWV,SIGMA,PDRYWL)
      CALL CONH2O(TSAT,PDRYWL,CV,UV,KV,PV)
      WEBER=(PV*UFALL*UFALL*DFALL)/SURFTO
      FROUDE=(UFALL*UFALL)/(GRAV*DFALL)
      XPSAITO=2.1D0*DFALL*DSQRT((ROEVO*FROUDE)/PL)
      XPEPSTN=0.5D0*DSQRT(3.0D0)*DFALL*(1.D0+PV/ROEVO)*DSQRT(ROEVO/PV)
      XLPENT=DMIN1(XPSAITO,XPEPSTN)
      XLPENA=DMIN1(HWATP,XLPENT)
      FRAG=((2.D0*XLPENA)/XLPENT)*(1.D0-XLPENA/(2.D0*XLPENT))
      FRAG=DMAX1(FRAG,0.D0)
      FRAG=DMIN1(FRAG,1.D0)
C.....DETERMINE IF FRAGMENTATION IS LIMITED BY WATER AVAILABILITY DUE 
C.....TO BOILOFF IF THE DETAILED WATER MODEL IS BEING USED.  
      IF(NWAT.LT.2) GO TO 732
      NJETP=JSEND
      CALL ETF(ESAT,HSEND,TSAT,DPASS)    
      QJETW=XDOTJET*FRAG*(EINJO-ESAT)
      IF(EWAT(JSEND).LT.EWL) GO TO 732
C.....FIRST STEP: FIND MASS SOURCE DUE TO WATER ADDITION INTO NODE 
C.....IF APPLICABLE.
      XMINJ=0.D0 
      NJETP=JSEND
      IF(NINJ.EQ.0) GO TO 25
      DO 15 K=1,NINJ
      KR=NINJP(K)
      IF(KR.NE.JSEND) GO TO 15
      DO 20 L=1,NPTINJ(K)
      XSEND(L)=TIMINJ(K,L)
      YSEND(L)=XDTINJ(K,L)
   20 CONTINUE
      CALL INTERP(3,NPTINJ(K),TIME,XSEND,YSEND,XMINJ)
      GO TO 25
   15 CONTINUE
   25 CONTINUE
C.....NOW DETERMINE IF FLOW INTO DOWNCOMER AT THE INJECTION
C.....POINT IS OCCURING, AND IF SO, CACLCULATE THE MASS SINK.
      XMDC=0.D0
      IF(NDOWNC.EQ.0) GO TO 35
      DO 45 K=1,NDOWNC
      KR=NDC(K)
      IF(KR.NE.JSEND) GO TO 35
      HTPBCFX=HTOT(KR)+ELEVAT(KR)
      HEVAL=DWAT(KR)+HTPBCFX
      IF(HEVAL.LE.ELDCO(KR)) GO TO 45
      DHDCJ=DMIN1(HEVAL-ELDCO(KR),HEVAL-HTPBCFX)
      DO 30 L=1,NPTDC(K)
      XSEND(L)=ELDCX(K,L)
      YSEND(L)=CRDCX(K,L)
   30 CONTINUE
      CALL INTERP(2,NPTDC(K),HEVAL,XSEND,YSEND,CORDL)
      XMDC=PL*DSQRT(2.D0*GRAV)*CORDL*DHDCJ**1.5D0
      GO TO 35
   45 CONTINUE
   35 CONTINUE
C.....NOW CHECK WATER INVENTORY IN NODE RELATIVE TO SOURCE-
C.....SINK TERMS TO DETERMINE IF FRAGMENTATION IS LIMITED BY
C.....WATER AVAILABILITY.
      K=JSEND
      IF(K.GT.1) GO TO 90
      XFLWIN=PL*ARC(K+1)*DWAT(K+1)*DMAX1(-VLW(K+1),0.D0) 
      XFLWOUT=PL*ARC(K+1)*DWAT(K)*DMAX1(VLW(K+1),0.D0)
      GO TO 92
   90 CONTINUE
      IF(K.EQ.NUMNOD) GO TO 91
      XFLWIN=PL*(ARC(K)*DWAT(K-1)*DMAX1(VLW(K),0.D0)+
     1 ARC(K+1)*DWAT(K+1)*DMAX1(-VLW(K+1),0.D0)) 
      XFLWOUT=PL*(DWAT(K)*ARC(K)*DMAX1(-VLW(K),0.D0)+
     1 ARC(K+1)*DWAT(K)*DMAX1(VLW(K+1),0.D0))
      GO TO 92
   91 CONTINUE
      XFLWIN=PL*ARC(K)*DWAT(K-1)*DMAX1(VLW(K),0.D0)
      XFLWOUT=PL*DWAT(K)*ARC(K)*DMAX1(-VLW(K),0.D0)
   92 CONTINUE
C.....DO MASS BALANCE
      XMAVAIL=(PL*DWATOLD(K)*AREA(K))/DTIME+XMINJ+XFLWIN
     1 -XFLWOUT-XMDC
      XMAVAIL=DMAX1(XMAVAIL,0.D0)
      XSTMJF=QJETW/(EWV-EWAT(K))
      IF(XSTMJF.LE.XMAVAIL) GO TO 88
      CORRECT=XMAVAIL/XSTMJF
      FRAG=CORRECT*FRAG
      FRAG=DMAX1(FRAG,0.D0)
      FRAG=DMIN1(FRAG,1.D0)
      QJETW=CORRECT*QJETW
      XSTMJF=CORRECT*XSTMJF
   88 CONTINUE
      TINTSJF=TINTSJF+DTIME*XSTMJF
  732 CONTINUE
C.....NOW DO THE FRAGMENTATION ANALYSIS DEPENDING UPON WHETHER A BULK 
C.....COOLING SCENARIO IS ASSUMED (NJET=1) OR IF PARTICLE BED FORMATION 
C.....IS ASSUMED (NJET=2).
      IF(NJET.EQ.2) GO TO 120
      CALL ETF(ESAT,HSEND,TSAT,DPASS)    
      EINJ=EINJO-FRAG*(EINJO-ESAT)
C.....UPDATE THE MELT PROPERTIES AT THE REDUCED TEMPERATURE..
      CALL TEF(EINJ,HSEND,TSINJ,DPASS)    
      IF(TSINJ.GE.TFOS.AND.VOXCP.GT.0.D0) GO TO 654
      IF(TSINJ.GE.TFMS.AND.VMETCP.GT.0.D0) GO TO 654
      WRITE(6,6671) TIME,TSINJ
      WRITE(2,6671) TIME,TSINJ
 6671 FORMAT(//,1X,'****JET FRAGMENTATION/MIXING MODEL INDICATES COMPLET
     1E SOLDIFICATION OF RELOCATING CORE DEBRIS; CALCULATION TERMINATED'
     2,//,5X,'TIME=',G12.5,' SEC, TDEBRIS=',G12.5,' K')
      IFAILJ=1
      GO TO 110
  654 CONTINUE
      CPINJ=CPLIQP    
      CALL ETF(EPASS,HSEND,TSINJ,DTINJ)    
      CALL CONDF(TSINJ,HSEND,FKO,FKM,TKINJ)
      CALL VISCF(TSINJ,HSEND,VISFLO,VISFLM,VSINJ,VISPAS)
      CALL EMISF(TSINJ,HSEND,EMINJ)
      CALL TEN(TSINJO,HSEND,SURFT)
      ROEV=ROEVO
      GO TO 110
C.....PARTICLE BED FORMED HERE..
  120 CONTINUE
      XMBEDT=0.D0
      DO 157 KT=1,16
      XMBED(KT)=XMBED(KT)+FRAG*SRSCOR(KT)*DTIME
      XMBEDT=XMBEDT+XMBED(KT)  
  157 CONTINUE
      DO 141 KN=1,NUMNOD 
      SRCTOT(KN)=(1.D0-FRAG)*SRCTOT(KN)
      DO 140 KT=1,16 
      SRCI=SOURCE(KT,KN)
      SOURCE(KT,KN)=(1.D0-FRAG)*SRCI
  140 CONTINUE
  141 CONTINUE
C.....GET BED DENSITY...
      VSUM=0.D0
      DO 5538 KTP=1,15
      CALL INDEX(KTP,KJ)
      VSUM=VSUM+XMBED(KTP)/ROM(KJ)
 5538 CONTINUE
      VSUM=VSUM+XMBED(16)/(RSLAGS*ROC)
      PBED=XMBEDT/VSUM     
C.....NOW ALLOCATE BED CONSTITUENTS TO DIFFERENT NODES IN THE MESH BASED
C.....ON USER INPUT
      DO 1566 ND=1,NUMNOD
      XMBDINT(ND)=0.D0
 1566 CONTINUE
      XMBDINT(1)=XFACJ(1)*XMBEDT
      DO 155 ND=1,NUMNOD
      XMBEDJT(ND)=0.D0
      IF(IFLGJ(ND).EQ.0) GO TO 2155
      DO 150 KT=1,16
      XMBEDJ(KT,ND)=XFACJ(ND)*XMBED(KT)
  150 CONTINUE
      XMBEDJT(ND)=XFACJ(ND)*XMBEDT
 2155 CONTINUE
      IF(ND.GE.2) XMBDINT(ND)=XMBDINT(ND-1)+XMBEDJT(ND)
  155 CONTINUE
C.....SET OTHER PARAMETERS...
      TSINJ=TSINJO
      EINJ=EINJO
      DTINJ=DTINJO
      TKINJ=TKINJO
      ROEV=ROEVO
      CPINJ=CPINJO
      SURFT=SURFTO
      VSINJ=VSINJO
      EMINJ=EMINJO
  110 CONTINUE
      RETURN
      END