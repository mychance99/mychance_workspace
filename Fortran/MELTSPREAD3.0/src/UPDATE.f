C...................................................................... 
C.....GIVEN MELT ENTHALPY INCREMENTS AND NEW MELT CONSTITUENT HEIGHTS,
C.....SUBROUTINE UPDATE CALCULATES DEPENDENT DATA AT THE END OF THE 
C.....CURRENT ITERATION.
C...................................................................... 
      SUBROUTINE UPDATE
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      DIMENSION HSEND(28)
      COMMON /WATVARS/FCRUST(999),VLW(999),VLWOLD(999),DWAT(999),
     1DWATOLD(999),EWAT(999),EWATOLD(999),TWAT(999),CORDDC(999),
     2DSRDC(999),DHDC(999),TSRDC,TINTDC,HWATB(999),TSURFW(999),XMS(999),
     3XMST,XINTS,ESRDTW(999),TSRDTW(999),DSRDTW(999),TSRDW,TINTDW,
     4TWATI,ELDCO(999),ELDCX(999,99),CRDCX(999,99),TIMINJ(999,99),
     5XDTINJ(999,99),TDTINJ(999,99),ELWATI,XMWAT,XMWATO,XBALW,
     6HDRY(999),EINTW,XMCT(199),XMCDT(16,999),TMPCDT(999),CMPCDT(999),
     7FDC(999),FCOV(999),FBED(999),FHEAT(999),XFACJ(999),
     8XMBEDJ(16,999),XMBEDJT(999),PBED,QBED(999),QWATER(999),
     9QSURFACE(999),QWATERT(999),HBED(999),POROSBED,XMCRDT(16,999),
     1XMCRT(999),XMBDINT(999),XMT(999)
      COMMON/CATCHR/A(999),B(999),C(999),D(999),P(999),Q(999),
     1RECON(999),DELVEL(999),DSRDT(999),DELHTS(999),EMAX(999,999),
     2DBLKEN(999),DELHIT(16,999),SOURCE(16,999),SRCTOT(999),
     3HCROLD(16,999),DCDOT(999),HCRUST(16,999),DFILM(16,999),
     4DFMOLD(16,999),DENOLD(999),SIGOX(999),SIGCON(999),BET(999),
     5TFZX(999),TFZC(999),TKX(999),TKM(999),THETO(999,999),
     6THET1(999,999),OMEG0(4,999),OMEG1(4,999),TAO0(999),TAO1(999),
     7SIG0(999),SIG1(999),TARGB(999),DADOT(999),DADOTG(999),
     8XLOLD(4,999),VISREX(999),TATMS(999),HTMP(999),DHTMP(999),
     9HTMOLD(999)
      COMMON/CATCHI/NUMS(4,999),NUMOLD(4,999),NTRACK(16),NSUMP(999),
     1NPASSG(999),NCRSTM(999),NCRRT(999),NPASS(999),NBURN,NBURNO     
      COMMON/PRINTB/ELEVAT(999),ELOLD(999),XDIST(999,999),XBTW(999,999),
     1TEMP(999,999),ENTHP(999,999),EOLD(999,999),ENBLK(999),EBKOLD(999),
     2TBULK(999),HITE(16,999),HITOLD(16,999),HTOT(999),HTOLD(999),
     3HTCFT(999),HTCOEF(999),QFLUXT(999),QFLUXB(999),VEL(999),ELO(999),
     4VELOLD(999),SRSCOR(16),AREA(999),RAD(999),ARC(999),VOLCN(16),
     5VOID(999),VGJ(999),ZABLAT(999),ZABOLD(999),DCRUST(999),
     6DCROLD(999),DABCON(999),DABOLD(999),DFILMT(999),DFOLT(999),
     7SMFLX(4,999),XLSMF(4,999),TOTVOL,XFACMS(999),XMFLXA,XMCORT,
     8VCORT,TOTOX,TOTMET,QFLXT,QFLXB,TIME,DTIME,XMCOR(16),VCOR(16),
     9TCONI,RSAND,HDOWNC,TBOUND,EMISCN,PDRYWL,XDISTO(999),QOXT(999),
     1XLENSH,XBTWO(999),RCOMP,WDOOR,RSUMP,RSHELL,RPED,TPED,ELSMP,
     1TENDP(10,999),TFRZSH,TDEBRS,TKDEBR,PDEBR,CPDEBR,ENENDP(10,999),
     2ENOLDP(10,999),DXVERT,DXSNK,XDSTE(10,999),XBTE(10,999),HXLA(999),
     3HXLB(999),TSFEB(999),DCRS(999),DCRSLD(999),HCRS(16,999),
     4HCRSLD(16,999),THETE0(10,999),THETE1(10,999),QSHELL,QSHELE,TSHELI,
     5SIGOXE(999),FKOXE(999),RINJC,XLSEC,ANGSEC,ANINJC,XLCHAN,WCHNL,
     6TEFZX(999),TIMSPC(999),DXNODE(999),TNORM(999),FRCSOL(999),
     7ALPSPR(999),CRAMCON,HINTF,TSHLMX,XFRMX(999),XFROX(999),XFRTX(999),
     8XMLMX(999),XMLOX(999),XMLTX(999),XTOTX(999),TIMEO,TMAX,EDOWN(999),
     9HCP(999)
      COMMON/PRINTR/ QFEH2O,QCRH2O,QZRH2O,QFECO2,QCRCO2,QZRCO2,
     4XFH2OU,XFCAOH,XFMGCA,XFCACO,XZRMRE,XFEMRE,XCRMRE,XZRORE,XFEORE,   
     5XCRORE,XMH2O,XMCO2,XMCACO,XMMGCA,XMCAOH,TFWL,TFWS,TBWL,TBWS,      
     6TMCAL,TMCAS,TCAL,TCAS,TFOS,TFOL,TFMS,TFML,XVISC(28),SVISC(28),    
     7XMOL(28),FMMOL(28),ROM(28),ROMLIQ(28),AEQM(28,2),BEQM(28,2),
     8CEQM(28,2),ECL,ECS,ECAL,ECAS,EMCAL,EMCAS,EBWL,EBWS,EFWL,EFWS,    
     9STEF,GRAV,PI,TCS,TCL,CCL,CCS,RMASSL,WPCC,WPM,WPA,WPCS,ROC,RMASSS,   
     1ANGSHL,RSLAGL,RSLAGS,HNODT,VFAV,VGAV,QXAV,XWTSS(16),  
     2TSCS(2),TSCL(2),ESCS(2),ESCL(2),CCSS(2),CCSL(2),ROSTLS,ROSTLL,
     3XFRGAS,HMINC,TST(99),TSTOP(99),AINTP(99),BINTP(99),DRATIO(999),
     4XBCN(999),XDCN(999),XBLT(15),ADEC(99),BDEC(99),APOUR(16,99),
     5BPOUR(16,99),XWTC(14),BWIDTH,THCKCV,TMBOIL,TEBOIL,VFINT,ANGFAN,
     6ALPMAX,THSHL,XFCABL,XNDMIN,DVMX,DAVMX,DEAVMX,DEMX,TDC,QDCU,QDCUO2,
     7TSINJ,EINJ,DTINJ,TKINJ,ROEV,CPINJ,SURFT,VSINJ,EMINJ,TSINJO,EINJO,
     8DTINJO,TKINJO,ROEVO,CPINJO,SURFTO,VSINJO,EMINJO,XLEADE,ARSUM,
     9DBUBOX,UTRISE,TREMSH,DJET,DFALL,WEBER,FROUDE,XPSAITO,XPEPSTN,
     1FRAG,XMBEDT,XMBED(16),XLPENT,XLPENA,UJET,UFALL,HFALL,ERPV,
     2TJETT(99),DJETT(99),HWATP,XDOTJET,DVMXW,DAVMXW,DEMXW,DEAVMXW,
     3QJETW,XSTMJF,TINTSJF,ESAT,DRDOOR,DRANL,EI,QDCBUO2,QDCBU,
     4EBEDS,EBEDB
      COMMON/HCONS/HMETAL(999),HOXIDE(999)  
      COMMON/PROPI/ NMATC,NMATFI,NMATFF,ICAOH2,ICACO3,IMCCO3,IFH2O,     
     1IVH2O,ICK2O,IVK2O,INA2O,ITIO2,ISIO2,ICAO,IMGO,IAL2O3,IFEO,IFE2O3, 
     2IFE3O4,IFE,ICR,INI,IZR,IU,IB4C,IB,ICR2O3,INIO,IUO2,IZRO2,IB2O3,   
     3NBCINT(999),NODES(999),NUMNOD,IMOX(28),IBAS,ILCS,ILL,NACTIV(999),     
     4NBFRZM,NBFRZO,NABLFM,NDRNFM,NTYPMT(999,999),NDOOR,NBMADJ,NUMSHV,   
     5NBSHL(999),NCRSTS(999),NUMSHH,NSKIPE,NACSH,NWAT,NPEND,NBCBOT,
     6NCRTOP,NBFZOE,NBFZME,NGEOM,NL(999,999),NFRSCT,NLOGSH,NADAB,NINVIS,
     7NSIMST,NSTEEL,NOVHT,NOVTK,NOVUM,NOVEM,NOVSIG,NPLLOC(999),NBPL,
     8IXP(999),IYP(999),NVTPE,NSOLTP,NSOLF,NINTF,IFLGA(999),ICTYPE,ICTC,
     9NPOURS,NSMP,NPED,NDOR,NSHL,NANULS,NSMPCV,NBOIL,NSWALL,NMVER,
     1NCRTEM,NTHINC,NVELP,NITMAX,NENMAX,NPRINT,NPFREQ,NTIMSPC,NPLFREQ,
     2NPLTOT,NJET,NJETP,NJETD,NJETND,NODCAP,NVELPW,NITMAXW,NENMXW,
     3IFLGJ(999),NBEDCQ,ISHELE
      COMMON/BASPR/ HBMT(999,999,16),HBMOLD(999,999,16) 
      COMMON/PROPB/CPBM(999),FKB(999,999),DENB(999,999),DTDEB(999,999),
     1EMIBM(999),DENCRS(999),ENCRS(999),FKRF(999),DENRF(999),CPRF(999) 
      COMMON/PROPM/DTDEM(999),CPMLT(999),FKMLT(999),DENMLT(999),
     1SIGMLT(999),UMMLT(999),EMIMLT(999)      
      DATA TREF /298.15D0/      
      DATA TWO /2.0D0/
      DATA HALF /0.5D0/
C...................................................................... 
C.....FIRST CALCULATE NEW TOTAL MELT HEIGHT AND THE HEIGHT OF THE MELT      
C.....CONSTITUENTS.
      DO 7130 KN=1,NUMNOD
      HMETAL(KN)=0.D0 
      HOXIDE(KN)=0.D0 
      DO 7132 KT=1,16 
      IF(KT.LE.7) HMETAL(KN)=HMETAL(KN)+HITE(KT,KN) 
      IF(KT.GE.8) HOXIDE(KN)=HOXIDE(KN)+HITE(KT,KN) 
 7132 CONTINUE
 7130 CONTINUE
C...................................................................... 
C.....NOW CALCULATE NEW BULK MELT ENTHALPIES AND TEMPERATURES.    
      IF(NADAB.EQ.1) GO TO 9145
      DO 7144 KN=1,NUMNOD
      IF(HTOT(KN).LE.0.D0.OR.NACTIV(KN).EQ.0) GO TO 4539      
      ENBLK(KN)=ENBLK(KN)+DBLKEN(KN)      
      CALL ASINEA(HITE,KN,HSEND,ROMLIQ,WPCC,WPM,WPA,WPCS,ROC,RSLAGL,0)  
      CALL TEF(ENBLK(KN),HSEND,TBULK(KN),DTDEM(KN)) 
      GO TO 7144      
 4539 CONTINUE
      TBULK(KN)=TREF  
      ENBLK(KN)=0.D0  
      DTDEM(KN)=0.D0  
 7144 CONTINUE
C...................................................................... 
C.....CALCULATE BASEMAT ENTHALPIES AND TEMPERATURES VIA BACKWARDS
C.....SUBSTITUTION GIVEN BULK MELT ENTHALPY INCREMENTS.
      DO 7150 KH=1,NUMNOD
      IF(NACTIV(KH).EQ.0) GO TO 7150      
      DO 7152 KV=1,NODES(KH)    
      IF(NBCINT(KH).GT.3.AND.KV.EQ.1) GO TO 7152    
      ENTHP(KV,KH)=ENTHP(KV,KH)+THETO(KV,KH)+THET1(KV,KH)*DBLKEN(KH)    
      IF(NTYPMT(KV,KH).GT.3) GO TO 7153   
      CALL TEC(ENTHP(KV,KH),EMAX(KV,KH),TEMP(KV,KH),DTDE,RMASS,YCACO3,YM
     1CCO3,YCAOH2,YFH2O,NL(KV,KH))
      DTDEB(KV,KH)=DTDE
      GO TO 7152      
 7153 CONTINUE
      CALL ASINED(KV,KH,HSEND,ROM,WPCC,WPM,WPA,WPCS,ROC,RSLAGS,0)
      CALL TEF(ENTHP(KV,KH),HSEND,TEMP(KV,KH),DTDE) 
      DTDEB(KV,KH)=DTDE
 7152 CONTINUE
 7150 CONTINUE
C...................................................................... 
C.....IF SHELL HEATUP ROUTINES HAVE BEEN ACTIVATED, UPDATE SHELL
C.....ENTHALPIES, TEMPERATURES, AND CRUST THICKNESSES.
      IF(NSKIPE.EQ.0) GO TO 8319
      IF(ISHELE.EQ.1) GO TO 8319
      IF(NACSH.EQ.0) GO TO 8319 
      DO 8321 KV=1,NUMSHV
      DO 8320 KH=1,NUMSHH
      ENENDP(KH,KV)=ENENDP(KH,KV)+THETE0(KH,KV)+THETE1(KH,KV)*DBLKEN(NBM
     1ADJ)  
      CALL TESS(ENENDP(KH,KV),TENDP(KH,KV),DTDE)    
 8320 CONTINUE
 8321 CONTINUE
C.....GIVEN THE UPDATED RESULTS, FIND MAXIMUM SHELL SURFACE TEMPERATURE
      TSHLMX=TENDP(1,1)
      DO 6320 KV=2,NUMSHV
      TSHLMX=DMAX1(TSHLMX,TENDP(1,KV))
 6320 CONTINUE
C.....UPDATE SHELL CRUST DEPTHS IF CRUST GROWTH IS OCCURING.  FIRST     
C.....UPDATE MELT/SHELL INTERFACIAL HEAT TRANSFER COEFFICIENT.
      IF(HTOT(NBMADJ).LE.0.D0) GO TO 9310 
      NS=NBMADJ
      CMS=CPMLT(NS)   
      PMS=DENMLT(NS)  
      TKMS=FKMLT(NS)  
      UMS=UMMLT(NS)   
      CALL SHELLM(TBULK(NS),VGJ(NS),VEL(NS),VOID(NS),CMS,PMS,TKMS,UMS,HT
     1OT(NS),HSHELL,XLENSH)     
      GO TO 9313      
 9310 CONTINUE
      HSHELL=0.D0     
      GO TO 8319      
 9313 CONTINUE
      DO 8412 KV=2,NUMSHV
      IF(NBSHL(KV).EQ.1) GO TO 8412
      IF(NBSHL(KV).EQ.3) GO TO 8412
      KLOW=8
      KHIGH=16
      TFS=TEFZX(KV)   
      IF(NCRSTS(KV).EQ.1) GO TO 8414      
      KLOW=1
      KHIGH=7
      TFS=TEFZX(KV)   
 8414 CONTINUE
      GC1=(HSHELL*(TBULK(NBMADJ)-TFS))/SIGOXE(KV)   
      DTEV=TFS-TENDP(1,KV)      
      DTEV=DMAX1(DTEV,0.D0)     
      GC2=DCRSLD(KV)**2+(FKOXE(KV)*DTEV)/SIGOXE(KV) 
      GAMTAN=GC1**2+4.D0*GC2    
      GAM=SQRT(GAMTAN)
      DCRS(KV)=0.5D0*(-GC1+GAM) 
      DCR=DCRS(KV)-DCRSLD(KV)   
      DO 8415 KD=KLOW,KHIGH     
      HCRS(KD,KV)=HCRSLD(KD,KV)+(HITE(KD,NBMADJ)*DCR)/HTOT(NBMADJ)      
 8415 CONTINUE
 8412 CONTINUE
 8319 CONTINUE
C...................................................................... 
C.....GIVEN NEW BULK MELT ENTHALPIES AND TEMPERATURES, CALCULATE NEW    
C.....CRUST AND ABLATION DEPTHS.  ALSO CORRECT MELT INVENTORIES WHEN    
C.....THE INTERFACE BETWEEN TWO DISIMILIAR MATERIALS HAS BEEN ABLATED   
C.....THROUGH OVER THIS TIMESTEP.
      DO 9390 J=1,NUMNOD
      IF(NACTIV(J).EQ.0) GO TO 9390
      BATEVL=BET(J)   
      IF(NSMPCV.EQ.1.AND.NBURN.EQ.0.AND.J.LE.NSMP) BATEVL=0.D0
      IF(NBCINT(J).GT.3) GO TO 8411
 8411 CONTINUE
      XLSTRT=XDISTO(J)-XBTWO(J) 
      ZLMIN=(XFCABL*XLSTRT)/(TWO*TWO)     
      IF(NBCINT(J).EQ.1) GO TO 9390
      IF(NCRRT(J).EQ.1) GO TO 9391
      IF(NBCINT(J).EQ.2) NPS=3 
      IF(NBCINT(J).EQ.6) NPS=7  
      IF(NBCINT(J).EQ.8) NPS=9  
      GO TO 9392      
 9391 CONTINUE
      NPS=NBCINT(J)   
 9392 CONTINUE
      IF(NPS.GT.3) GO TO 9393   
      GO TO(9390,192,9390),NPS  
 9393 CONTINUE
      ZCOMP=XDISTO(J)-ZABLAT(J) 
      IF(ZCOMP.LT.XBTWO(J)) GO TO 9492    
      NLOLD=2
      GO TO 9493      
 9492 CONTINUE
      NLOLD=1
      ZLINT=XBTWO(J)-ZCOMP      
 9493 CONTINUE
      NROUTE=NPS-3    
      GO TO(194,195,196,197,198,199),NROUTE
  192 CONTINUE
      Z1=((HTCOEF(J)*(TBULK(J)-TFZX(J)))/SIGOX(J))**2
      Z2=DCROLD(J)**2+(TKX(J)*(TFZX(J)-TEMP(1,J)))/SIGOX(J)   
      GAM=SQRT(Z1+4.D0*Z2)      
      DCRUST(J)=0.5D0*GAM-(0.5D0*HTCOEF(J)*(TBULK(J)-TFZX(J)))/SIGOX(J) 
      ZX1=TKX(J)/(2.D0*DTIME*SIGOX(J))    
      ZX2=HTCOEF(J)/(2.D0*DTIME*SIGOX(J)) 
      DCDOT(J)=(ZX1*(TFZX(J)-TEMP(1,J)))/DCRUST(J)-ZX2*(TBULK(J)-TFZX(J)
     1)
      DADOT(J)=0.D0   
      DADOTG(J)=0.D0  
      GO TO 9395      
  194 CONTINUE
      Z1=((HTCOEF(J)*(TBULK(J)-TFZC(J)))/SIGCON(J))**2
      Z2=ZABOLD(J)**2+(BATEVL*(TFZC(J)-TEMP(2,J)))/SIGCON(J)  
      GAM=SQRT(Z1+4.D0*Z2)      
      ZABLAT(J)=0.5D0*GAM-(0.5D0*HTCOEF(J)*(TBULK(J)-TFZC(J)))/SIGCON(J)
      IF(ZABLAT(J).LT.ZLMIN) ZABLAT(J)=ZLMIN
      ZX1=BATEVL/(2.D0*DTIME*SIGCON(J))   
      ZX2=HTCOEF(J)/(2.D0*DTIME*SIGCON(J))
      DADOT(J)=(ZX1*(TFZC(J)-TEMP(2,J)))/ZABLAT(J)-ZX2*(TBULK(J)-TFZC(J)
     1)     
      DADOTG(J)=DADOT(J)
      DCDOT(J)=0.D0   
      GO TO 9395      
  195 CONTINUE
      HEFF=(TKM(J)*HTCOEF(J))/(TKM(J)+DFILMT(J)*HTCOEF(J))    
      Z1=((HEFF*(TBULK(J)-TFZC(J)))/SIGCON(J))**2   
      Z2=ZABOLD(J)**2+(BATEVL*(TFZC(J)-TEMP(2,J)))/SIGCON(J)  
      GAM=SQRT(Z1+4.D0*Z2)      
      ZABLAT(J)=0.5D0*GAM-(0.5D0*HEFF*(TBULK(J)-TFZC(J)))/SIGCON(J)     
      IF(ZABLAT(J).LT.ZLMIN) ZABLAT(J)=ZLMIN
      DADOT(J)=0.D0   
      DCDOT(J)=0.D0   
      ZX1=BATEVL/(2.D0*DTIME*SIGCON(J))   
      ZX2=HEFF/(2.D0*DTIME*SIGCON(J))     
      DADOTG(J)=ZX1*(TFZC(J)-TEMP(2,J))/ZABLAT(J)-ZX2*(TBULK(J)-TFZC(J))
      GO TO 9395      
  196 CONTINUE
      F1=((HTCOEF(J)*(TBULK(J)-TFZX(J)))/SIGOX(J))**2
      F2=DCROLD(J)**2+(TKX(J)*(TFZX(J)-TFZC(J)))/SIGOX(J)     
      GAMOX=SQRT(F1+4.D0*F2)    
      DCRUST(J)=0.5D0*GAMOX-(HTCOEF(J)*(TBULK(J)-TFZX(J)))/(2.D0*SIGOX(J
     1))    
      F3=((TKX(J)*(TFZX(J)-TFZC(J)))/(SIGCON(J)*DCRUST(J)))**2
      F4=ZABOLD(J)**2+(BATEVL*(TFZC(J)-TEMP(2,J)))/SIGCON(J)  
      GAMCON=SQRT(F3+4.D0*F4)   
      ZABLAT(J)=0.5D0*GAMCON-(TKX(J)*(TFZX(J)-TFZC(J)))/(2.D0*SIGCON(J)*
     1DCRUST(J))      
      IF(ZABLAT(J).LT.ZLMIN) ZABLAT(J)=ZLMIN
      ZX1O=TKX(J)/(2.D0*DTIME*SIGOX(J))   
      ZX2O=HTCOEF(J)/(2.D0*DTIME*SIGOX(J))
      ZX1A=BATEVL/(2.D0*DTIME*SIGCON(J))  
      ZX2A=TKX(J)/(2.D0*DTIME*SIGCON(J))  
      DCDOT(J)=(ZX1O*(TFZX(J)-TFZC(J)))/DCRUST(J)-ZX2O*(TBULK(J)-TFZX(J)
     1)     
      DADOT(J)=(ZX1A*(TFZC(J)-TEMP(2,J)))/ZABLAT(J)-(ZX2A*(TFZX(J)-TFZC(
     1J)))/DCRUST(J)  
      DADOTG(J)=DADOT(J)
      GO TO 9395      
  197 CONTINUE
      Z1=((HTCOEF(J)*(TBULK(J)-TFZX(J)))/SIGCON(J))**2
      Z2=ZABOLD(J)**2+(BATEVL*(TFZC(J)-TEMP(2,J)))/SIGCON(J)  
      GAM=SQRT(Z1+4.D0*Z2)      
      ZABLAT(J)=0.5D0*GAM-(0.5D0*HTCOEF(J)*(TBULK(J)-TFZX(J)))/SIGCON(J)
      IF(ZABLAT(J).LT.ZLMIN) ZABLAT(J)=ZLMIN
      ZX1A=BATEVL/(2.D0*DTIME*SIGCON(J))  
      ZX2A=HTCOEF(J)/(2.D0*DTIME*SIGCON(J))
      DADOT(J)=(ZX1A*(TFZC(J)-TEMP(2,J)))/ZABLAT(J)-ZX2A*(TBULK(J)-TFZX(
     1J))   
      DADOTG(J)=DADOT(J)
      DCDOT(J)=0.D0   
      GO TO 9395      
  198 CONTINUE
      TKEFF=(TKX(J)*TKM(J)*DCRUST(J))/(TKX(J)*DFILMT(J)+TKM(J)*DCRUST(J)
     1)     
      Z1=(HTCOEF(J)*(TBULK(J)-TFZX(J))/SIGOX(J))**2 
      Z2=DCROLD(J)**2+(TKEFF*(TFZX(J)-TFZC(J)))/SIGOX(J)      
      GAMOX=SQRT(Z1+4.D0*Z2)    
      DCRUST(J)=0.5D0*GAMOX-(0.5D0*HTCOEF(J)*(TBULK(J)-TFZX(J)))/SIGOX(J
     1)     
      Z3=((TKEFF*(TFZX(J)-TFZC(J)))/(DCRUST(J)*SIGCON(J)))**2 
      Z4=ZABOLD(J)**2+(BATEVL*(TFZC(J)-TEMP(2,J)))/SIGCON(J)  
      GAM=SQRT(Z3+4.D0*Z4)      
      ZABLAT(J)=0.5D0*GAM-(0.5D0*TKEFF*(TFZX(J)-TFZC(J)))/(DCRUST(J)*SIG
     1CON(J))
      IF(ZABLAT(J).LT.ZLMIN) ZABLAT(J)=ZLMIN
      ZX1=TKEFF/(2.D0*DTIME*SIGOX(J))     
      ZX2=HTCOEF(J)/(2.D0*DTIME*SIGOX(J)) 
      DCDOT(J)=(ZX1*(TFZX(J)-TFZX(J)))/DCRUST(J)-ZX2*(TBULK(J)-TFZX(J)) 
      ZX1A=BATEVL/(2.D0*DTIME*SIGCON(J))  
      ZX2A=TKEFF/(2.D0*DTIME*SIGCON(J))   
      DADOTG(J)=(ZX1A*(TFZC(J)-TEMP(2,J)))/ZABLAT(J)-(ZX2A*(TFZX(J)-TFZC
     1(J)))/DCRUST(J) 
      DADOT(J)=0.D0   
      GO TO 9395      
  199 CONTINUE
      Z1=((HTCOEF(J)*(TBULK(J)-TFZX(J)))/SIGCON(J))**2
      Z2=ZABOLD(J)**2+(BATEVL*(TFZC(J)-TEMP(2,J)))/SIGCON(J)  
      GAM=SQRT(Z1+4.D0*Z2)      
      ZABLAT(J)=0.5D0*GAM-(0.5D0*HTCOEF(J)*(TBULK(J)-TFZX(J)))/SIGCON(J)
      IF(ZABLAT(J).LT.ZLMIN) ZABLAT(J)=ZLMIN
      DCDOT(J)=0.D0   
      DADOT(J)=0.D0   
      ZX1=BATEVL/(2.D0*DTIME*SIGCON(J))   
      ZX2=HTCOEF(J)/(2.D0*DTIME*SIGCON(J))
      DADOTG(J)=(ZX1*(TFZC(J)-TEMP(2,J)))/ZABLAT(J)-ZX2*(TBULK(J)-TFZX(J
     1))    
 9395 CONTINUE
      IF(NPS.EQ.4) GO TO 9400   
      IF(NPS.EQ.5) GO TO 9400   
      IF(NPS.EQ.7) GO TO 9400   
      IF(NPS.EQ.9) GO TO 9400   
C.....UPDATE CRUST CONSTITUENT INVENTORY. 
      GO TO(1921,1922),NCRSTM(J)
 1921 CONTINUE
      HCOMP=HOXIDE(J) 
      KLOW=8
      KHIGH=16
      GO TO 1923      
 1922 CONTINUE
      HCOMP=HMETAL(J) 
      KLOW=1
      KHIGH=7
 1923 CONTINUE
C.....DETERMINE WHETHER THE AMOUNT OF MATERIAL CRUSTED OVER THIS
C.....TIMESTEP EXCEEDS THAT IN THE BULK MELT.  IF SO, MAKE APPROPRIATE  
C.....CORRECTIONS TO CRUST DEPTH AND VOLUME INVENTORIES.      
      HOLDS=0.D0      
      HOLDL=0.D0      
      DO 614 KT=KLOW,KHIGH      
      CALL INDEX(KT,KJ)
      HOLDL=HOLDL+HITOLD(KT,J)  
      RRAT=ROMLIQ(KJ)/ROM(KJ)   
      IF(KT.EQ.16) RRAT=RSLAGL/RSLAGS     
      HOLDS=HOLDS+RRAT*HITOLD(KT,J)
  614 CONTINUE
      DCR=DCRUST(J)-DCROLD(J)   
      IF(HCOMP.GT.0.D0) GO TO 615
      IF(DCR.LE.HOLDS) GO TO 615
      DCR=HOLDS
      DCRUST(J)=DCROLD(J)+DCR   
      NRND=2
      GO TO 616
  615 CONTINUE
      NRND=1
  616 CONTINUE
      DO 1924 KT=KLOW,KHIGH     
      GO TO(604,605),NRND
  604 CONTINUE
      FRACD=HITE(KT,J)/HCOMP    
      GO TO 606
  605 CONTINUE
      FRACD=HITOLD(KT,J)/HOLDL  
  606 CONTINUE
      HCRUST(KT,J)=HCROLD(KT,J)+FRACD*DCR 
 1924 CONTINUE
C.....FOR ABLATION CASES, SET RELEVANT LENGTH SCALES.
 9400 CONTINUE
      IF(NPS.EQ.2) GO TO 9390  
      ZCOMP=XDISTO(J)-ZABLAT(J) 
      IF(ZCOMP.LT.XBTWO(J)) GO TO 9501    
      NLNEW=2
      ZRINT=ZCOMP-XBTWO(J)      
      GO TO 9502      
 9501 CONTINUE
      NLNEW=1
 9502 CONTINUE
      IF(NPS.EQ.5) GO TO 9405   
      IF(NPS.EQ.8) GO TO 9405   
      IF(NPS.EQ.9) GO TO 9405   
C.....UPDATE BASEMAT INVENTORIES AND CORRECT MELT INVENTORIES FOR THE   
C.....CASE OF ABLATION THROUGH THE INTERFACE OF DISIMILIAR MATERIALS.   
      IF(NLOLD.EQ.NLNEW.AND.NTYPMT(NLOLD,J).LE.3) GO TO 9390  
      IF(NLOLD.EQ.NLNEW) GO TO 9396
      IF(NTYPMT(NLOLD,J).GT.3.OR.NTYPMT(NLNEW,J).GT.3) GO TO 8381
      IF(NL(NLOLD,J).EQ.NL(NLNEW,J)) GO TO 9390     
 8381 CONTINUE
      IF(NTYPMT(1,J).GT.3) GO TO 9397     
      IF(NL(1,J).EQ.2) GO TO 9397
      HPCOR=HITE(16,J)-DRATIO(J)*ZRINT    
      HITE(16,J)=DMAX1(HPCOR,0.D0)
      GO TO 9399      
 9397 CONTINUE
      DO 9398 KT=1,16 
      CALL INDEX(KT,KJ)
      IF(NTYPMT(1,J).GT.3) GO TO 9995     
      HOFF=(XWTSS(KT)*ROSTLS*ZRINT)/ROMLIQ(KJ)      
      GO TO 9996      
 9995 CONTINUE
      RRAT=ROM(KJ)/ROMLIQ(KJ)   
      IF(KT.EQ.16) RRAT=RSLAGS/RSLAGL     
      HOFF=(HBMT(1,J,KT)*ZRINT*RRAT)/ZLINT
 9996 CONTINUE
      HPCOR=HITE(KT,J)-HOFF     
      HITE(KT,J)=DMAX1(HPCOR,0.D0)
 9398 CONTINUE
 9399 CONTINUE
C.....CORRECT MELT INVENTORY FOR TRUE NODE 2 MATERIAL WHICH WAS ABLATED.
      IF(NTYPMT(2,J).GT.3) GO TO 9700     
      IF(NL(2,J).EQ.2) GO TO 9700
      DRAT=RMASSS/RSLAGL
      HITE(16,J)=HITE(16,J)+DRAT*ZRINT    
      GO TO 9991      
 9700 CONTINUE
      XLT=XDISTO(J)-XBTWO(J)+XBTW(2,J)    
      ZFAC=(XLT-ZRINT)/XLT      
      DO 9007 KT=1,16 
      CALL INDEX(KT,KJ)
      IF(NTYPMT(2,J).GT.3) GO TO 9997     
      HADD=(XWTSS(KT)*ROSTLS*ZRINT)/ROMLIQ(KJ)      
      GO TO 9998      
 9997 CONTINUE
      RRAT=ROM(KJ)/ROMLIQ(KJ)   
      IF(KT.EQ.16) RRAT=RSLAGS/RSLAGL     
      HADD=(ZRINT*HBMT(2,J,KT)*RRAT)/XLT  
 9998 CONTINUE
      HITE(KT,J)=HITE(KT,J)+HADD
      IF(NTYPMT(2,J).GT.3) HBMT(2,J,KT)=HBMOLD(2,J,KT)*ZFAC   
 9007 CONTINUE
 9991 CONTINUE
C.....RE-COMPUTE MELT INVENTORY GIVEN CORRECTED CONSTITUENT HEIGHTS.    
      HMETAL(J)=0.D0  
      HOXIDE(J)=0.D0  
      HTOT(J)=0.D0    
      DO 9992 KT=1,16 
      HTOT(J)=HTOT(J)+HITE(KT,J)
      IF(KT.LE.7) HMETAL(J)=HMETAL(J)+HITE(KT,J)    
      IF(KT.GE.8) HOXIDE(J)=HOXIDE(J)+HITE(KT,J)    
 9992 CONTINUE
      GO TO 9390      
C.....UPDATE BASEMAT NODAL INVENTORIES WHEN ABLATION OCCURS THROUGH     
C.....INTERFACE OF IDENTICAL MATERIALS.   
 9396 CONTINUE
      IF(NLNEW.EQ.1) ZFAC=(ZABLAT(J)-XDISTO(J)+XBTWO(J))/(ZABOLD(J)-XDIS
     1TO(J)+XBTWO(J)) 
      IF(NLNEW.EQ.2) ZFAC=(ZABLAT(J)+XBTW(2,J))/(ZABOLD(J)+XBTW(2,J))  
      DO 9403 KT=1,16 
      HBMT(NLNEW,J,KT)=ZFAC*HBMOLD(NLNEW,J,KT)      
 9403 CONTINUE
      GO TO 9390      
 9405 CONTINUE
C.....UPDATE BASEMAT INVENTORIES AND MOLTEN FILM INVENTORIES. 
      IF(NLOLD.EQ.NLNEW) GO TO 9407
      DO 3131 KUP=1,28
      HSEND(KUP)=0.D0 
 3131 CONTINUE
      DO 3132 KIN=1,2 
      ZLEN=ZLINT      
      IF(KIN.EQ.2) ZLEN=ZRINT  
      IF(NTYPMT(KIN,J).GT.3) GO TO 9408   
      IF(NL(KIN,J).EQ.2) GO TO 9408      
      DRAT=RMASSS/RSLAGL
      HSEND(16)=HSEND(16)+DRAT*ZLEN
      GO TO 3132      
 9408 CONTINUE
      DO 9410 KT=1,16 
      CALL INDEX(KT,KJ)
      IF(NTYPMT(KIN,J).GT.3) GO TO 8997   
      HSEND(KT)=HSEND(KT)+(XWTSS(KT)*ROSTLS*ZLEN)/ROMLIQ(KJ)  
      GO TO 9410      
 8997 CONTINUE
      RRAT=ROM(KJ)/ROMLIQ(KJ)   
      IF(KT.EQ.16) RRAT=RSLAGS/RSLAGL     
      IF(KIN.EQ.1) HSEND(KT)=HSEND(KT)+HBMT(KIN,J,KT)*RRAT    
      IF(KIN.EQ.2) HSEND(KT)=HSEND(KT)+(HBMT(KIN,J,KT)*RRAT*ZRINT)/(XDI
     1STO(J)-XBTWO(J)+XBTW(2,J))
 9410 CONTINUE
 3132 CONTINUE
C.....SET NEW FILM CONSTITUENT INVENTORIES & FIND NEW TOTAL FILM DEPTH. 
      DFILMT(J)=0.D0  
      DO 9409 KT=1,16 
      DFILM(KT,J)=DFMOLD(KT,J)+HSEND(KT)  
      DFILMT(KT)=DFILMT(KT)+DFILM(KT,J)   
 9409 CONTINUE
C.....UPDATE BASEMAT INVENTORY. 
      IF(NTYPMT(2,J).LE.3) GO TO 9390     
      ZFAC=(XDISTO(J)-XBTWO(J)+XBTW(2,J)-ZRINT)/(XDISTO(J)-XBTWO(J)+XBTW
     1(2,J))
      DO 7979 KT=1,16 
      HBMT(2,J,KT)=ZFAC*HBMOLD(2,J,KT)    
 7979 CONTINUE
      GO TO 9390      
C.....UPDATE BASEMAT & MOLTEN FILM INVENTORIES WHEN ABLATION DOES NOT   
C.....OCCUR ACROSS THE INTERFACE OF DISIMILIAR MATERIALS.     
 9407 CONTINUE
      IF(NTYPMT(NLNEW,J).GT.3) GO TO 9705 
      IF(NL(NLNEW,J).EQ.2) GO TO 9705    
      DRAT=RMASSS/RSLAGL
      DFILM(16,J)=DFMOLD(16,J)+DRAT*(ZABOLD(J)-ZABLAT(J))     
      DFILMT(J)=DFOLT(J)+DRAT*(ZABOLD(J)-ZABLAT(J)) 
      GO TO 9390      
 9705 CONTINUE
      IF(NLNEW.EQ.2) GO TO 9024
      ZFAC=(ZABLAT(J)-XDISTO(J)+XBTWO(J))/(ZABOLD(J)-XDISTO(J)+XBTWO(J))
      XLT=ZABLAT(J)-XDISTO(J)+XBTWO(J)    
      GO TO 9025      
 9024 CONTINUE
      ZFAC=(ZABLAT(J)+XBTW(2,J))/(ZABOLD(J)+XBTW(2,J))
      XLT=ZABLAT(J)+XBTW(2,J)   
 9025 CONTINUE
      DZAB=ZABOLD(J)-ZABLAT(J)  
      DFILMT(J)=0.D0  
      DO 9414 KT=1,16 
      CALL INDEX(KT,KJ)
      IF(NTYPMT(NLNEW,J).GT.3) GO TO 8995 
      HADD=(XWTSS(KT)*ROSTLS*DZAB)/ROMLIQ(KJ)
      GO TO 8996      
 8995 CONTINUE
      RRAT=ROM(KJ)/ROMLIQ(KJ)   
      IF(KT.EQ.16) RRAT=RSLAGS/RSLAGL     
      HADD=(HBMT(NLNEW,J,KT)*DZAB*RRAT)/XLT
 8996 CONTINUE
      DFILM(KT,J)=DFMOLD(KT,J)+HADD
      DFILMT(J)=DFOLT(J)+HADD   
      IF(NTYPMT(NLNEW,J).GT.3) HBMT(NLNEW,J,KT)=ZFAC*HBMOLD(NLNEW,J,KT) 
 9414 CONTINUE
 9390 CONTINUE
 9145 CONTINUE
C...................................................................... 
C.....CALCULATE TOTAL MELT VOLUME INVENTORIES.      
      TOTMET=0.D0     
      TOTOX=0.D0      
      TOTVOL=0.D0     
      DO 7140 KT=1,16 
      VOLCN(KT)=0.D0  
      DO 7142 KN=1,NUMNOD
      VOLCN(KT)=VOLCN(KT)+HITE(KT,KN)*AREA(KN)*FLOAT(NDOOR)   
 7142 CONTINUE
      TOTVOL=TOTVOL+VOLCN(KT)   
      IF(KT.LE.7) TOTMET=TOTMET+VOLCN(KT) 
      IF(KT.GE.8) TOTOX=TOTOX+VOLCN(KT)   
 7140 CONTINUE
C...................................................................... 
C.....UPDATE GAS MASS FLUXES DUE TO CONCRETE DECOMPOSITION   
      DO 488 J=1,NUMNOD
      IF(NACTIV(J).EQ.0.OR.NADAB.EQ.1) GO TO 488
      DO 652 IOUT=1,4 
      GO TO(653,654,655,656),IOUT
  653 CONTINUE
      TCOMP=TFWL      
      BDCP=XFH2OU     
      GO TO 657
  654 CONTINUE
      TCOMP=TBWL      
      BDCP=(XFCAOH*XMH2O)/XMCAOH
      GO TO 657
  655 CONTINUE
      TCOMP=TMCAL     
      BDCP=(2.D0*XFMGCA*XMCO2)/XMMGCA     
      GO TO 657
  656 CONTINUE
      TCOMP=TCAL      
      BDCP=(XFCACO*XMCO2)/XMCACO
  657 CONTINUE
      IF(BDCP.LE.0.D0) GO TO 638
C.....CHECK TO SEE IOUT-TH ISOTHERM LIES BETWEEN THE IDR & IDR+1 NODES. 
      DO 637 IDR=1,NODES(J)-1   
      SIGN=(TEMP(IDR,J)-TCOMP)*(TEMP(IDR+1,J)-TCOMP)
      IF(SIGN.GT.0.D0) GO TO 637
      IF(TEMP(IDR+1,J).EQ.TEMP(IDR,J)) GO TO 637    
C.....ALGORITHM REACHES HERE, THEN ISOTHERM HAS BEEN FOUND.   
      IF(IDR.GT.1) GO TO 643    
      IF(NBCINT(J).LE.3) GO TO 643
C.....THE FOLLOWING FINDS THE GAS FLUX WHEN THE ISOTHERM LIES ADJACENT  
C.....TO AN ABLATING NODE.      
      DXSAT=ZABLAT(J)*((TCOMP-TEMP(IDR,J))/(TEMP(IDR+1,J)-TEMP(IDR,J))) 
      XLEN=XDISTO(J)-ZABLAT(J)+DXSAT      
      IF(XLEN.GE.XBTWO(J)) GO TO 648      
      IP=IDR
      GO TO 673
  648 CONTINUE
      IP=IDR+1
  673 CONTINUE
      NPROP=NTYPMT(IP,J)
C.....CHECK TO SEE IF ISOTHERM LIES IN GAS PRODUCING REGION.  
      IF(NUMOLD(IOUT,J).GT.1) GO TO 637   
      XLSMF(IOUT,J)=XLEN
      NUMS(IOUT,J)=1  
      IF(NPASSG(J).EQ.1) GO TO 637
      IF(NPROP.GT.3) GO TO 637  
      IF(NL(IP,J).EQ.2) GO TO 637
      I2=IDR+1
      I3=IDR+2
      VL2=XBTW(I2,J)  
      BDCK=ROC*BDCP   
      IF(NTYPMT(I2,J).GT.3) GO TO 1332    
      SDECAY=0.D0     
      GO TO 1333      
 1332 CONTINUE
      SDECAY=ROM(21)*QDCU*HBMT(I2,J,6)+ROM(26)*QDCUO2*HBMT(I2,J,15)     
 1333 CONTINUE
      CON23=(FKB(I2,J)*FKB(I3,J))/(FKB(I3,J)*XBTW(I2,J)+FKB(I2,J)*(XDIST
     1(I2,J)-XBTW(I2,J)))
      TEM12=TFZC(J)-TEMP(I2,J)  
      TEM23=TEMP(I2,J)-TEMP(I3,J)
      EDOTG=((BET(J)*TEM12)/ZABLAT(J)-CON23*TEM23+SDECAY)/(VL2*DENB(I2,J
     1))    
      C1=(DADOTG(J)*(TCOMP-TEMP(I2,J)))/(TEMP(I2,J)-TFZC(J))  
      C2=(TFZC(J)-TCOMP)/(TFZC(J)-TEMP(I2,J))**2    
      C3=ZABLAT(J)*DTDEB(I2,J)*EDOTG*C2   
      XDOTG=C1+C3     
      XDOTG=DMAX1(XDOTG,0.D0)   
      SMFLX(IOUT,J)=BDCK*XDOTG  
      GO TO 652
  643 CONTINUE
C.....DETERMINE IF GAS IS GENERATED IN NON-BOUNDARY OR NON-ABLATING     
C.....NODES.
      DXSAT=XDIST(IDR,J)*((TCOMP-TEMP(IDR,J))/(TEMP(IDR+1,J)-TEMP(IDR,J)
     1))    
      IF(DXSAT.GE.XBTW(IDR,J)) GO TO 628  
      IP=IDR
      GO TO 629
  628 CONTINUE
      IP=IDR+1
  629 CONTINUE
      NPROP=NTYPMT(IP,J)
      IF(IDR.LT.NUMOLD(IOUT,J)) GO TO 637 
      XLSMF(IOUT,J)=DXSAT
      NUMS(IOUT,J)=IDR
      IF(NPASSG(J).EQ.1) GO TO 637
      IF(NPROP.GT.3) GO TO 637  
      IF(NL(IP,J).EQ.2) GO TO 637
      LM1=IDR-1
      L=IDR 
      LP1=IDR+1
      LP2=IDR+2
      DENGJ=DENB(L,J) 
      DENGK=DENB(LP1,J)
      BDCK=ROC*BDCP   
C.....SET INTERNODAL CONDUCTANCES, VOLUMES, AND LENGTHS.      
      VLGJ=XBTWO(L)   
      IF(L.GT.1) VLGJ=XDIST(LM1,J)-XBTW(LM1,J)+XBTW(L,J)      
      VLGJP1=XDIST(L,J)-XBTW(L,J)+XBTW(LP1,J)
      XLJJP1=XDIST(L,J)
      XLFT=XBTW(L,J)/XLJJP1     
      XRFT=1.D0-XLFT  
      CJP12=(FKB(L,J)*FKB(LP1,J))/(FKB(LP1,J)*XBTW(L,J)+FKB(L,J)*(XDIST(
     1L,J)-XBTW(L,J)))
      DJM12=CJP12     
      DENOM=FKB(LP2,J)*XBTW(LP1,J)+FKB(LP1,J)*(XDIST(LP1,J)-XBTW(LP1,J))
      DJP12=0.D0      
      IF(DENOM.GT.0.D0) DJP12=(FKB(LP1,J)*FKB(LP2,J))/DENOM   
      IF(L.GT.1) GO TO 5031     
      GAMCD=HTCOEF(J)*(TARGB(J)-TEMP(1,J))
      IF(NBCINT(J).EQ.2) GAMCD=(TKX(J)*(TFZX(J)-TEMP(1,J)))/DCRUST(J)  
      IF(NBCINT(J).EQ.3) GAMCD=HTCOEF(J)*(TBULK(J)-TFZX(J))   
      GO TO 5032      
 5031 CONTINUE
      IF(L.GT.2.OR.NBCINT(J).LE.3) GO TO 5033
      GAMCD=(BET(J)*(TFZC(J)-TEMP(2,J)))/ZABLAT(J)  
      GO TO 5032      
 5033 CONTINUE
      CJM12=(FKB(LM1,J)*FKB(L,J))/(FKB(L,J)*XBTW(LM1,J)+FKB(LM1,J)*(XDIS
     1T(LM1,J)-XBTW(LM1,J)))    
      GAMCD=CJM12*(TEMP(LM1,J)-TEMP(L,J)) 
 5032 CONTINUE
      IF(NTYPMT(L,J).GT.3) GO TO 6032     
      SDECAJ=0.D0     
      GO TO 6033      
 6032 CONTINUE
      SDECAJ=ROM(21)*QDCU*HBMT(L,J,6)+ROM(21)*QDCUO2*HBMT(L,J,15)
 6033 CONTINUE
      IF(NTYPMT(LP1,J).GT.3) GO TO 6034   
      SDECAK=0.D0     
      GO TO 6035      
 6034 CONTINUE
      SDECAK=ROM(21)*QDCU*HBMT(LP1,J,6)+ROM(21)*QDCUO2*HBMT(LP1,J,15)   
 6035 CONTINUE
      EDOTJ=(GAMCD-CJP12*(TEMP(L,J)-TEMP(LP1,J))+SDECAJ)/(DENGJ*VLGJ)   
      EDOTK=(DJM12*(TEMP(L,J)-TEMP(LP1,J))-DJP12*(TEMP(LP1,J)-TEMP(LP2,J
     1))+SDECAK)/(DENGK*VLGJP1) 
      C1=DTDEB(L,J)*XLFT*EDOTJ*(TCOMP-TEMP(LP1,J))+DTDEB(LP1,J)*EDOTK*(T
     1EMP(L,J)-TCOMP)*XRFT      
      XDOTG=(XLJJP1*C1)/(TEMP(LP1,J)-TEMP(L,J))**2  
      XDOTG=DMAX1(XDOTG,0.D0)   
      SMFLX(IOUT,J)=BDCK*XDOTG  
      GO TO 652
  637 CONTINUE
  638 CONTINUE
      SMFLX(IOUT,J)=0.D0
  652 CONTINUE
  488 CONTINUE
C...................................................................... 
C.....GIVEN NEW GAS MASS FLUXES, UPDATE MELT VOID FRACTION AND CALCULATE
C.....TOTAL GAS SUPERFICIAL GAS VELOCITY.  
      DO 8736 J=1,NUMNOD
      IF(NACTIV(J).EQ.0.OR.NADAB.EQ.1) GO TO 8736
      CALL CONCO2(TCS,PDRYWL,CP,VIS,FK,DENC)
      CALL CONH2O(TCS,PDRYWL,CP,VIS,FK,DENH)
      DENJ=DENC+DENH  
      VGJ(J)=(SMFLX(1,J)+SMFLX(2,J))/DENH+(SMFLX(3,J)+SMFLX(4,J))/DENC  
      IF(HTOT(J).GT.0.D0) GO TO 8737      
      VOID(J)=0.D0    
      GO TO 8736      
 8737 CONTINUE
      CALL VOIDFR(SIGMLT(J),DENMLT(J),UMMLT(J),DENJ,VGJ(J),VOID(J))     
 8736 CONTINUE
C...................................................................... 
C.....GIVEN THE NEW CRUST & ABLATION DEPTHS, UPDATE THE BASEMAT
C.....ELEVATIONS.     
      DO 4119 KH=1,NUMNOD
      GO TO(4119,202,4119,204,205,206,204,208,205),NBCINT(KH) 
  202 CONTINUE
      ELEVAT(KH)=ELOLD(KH)+DCRUST(KH)-DCROLD(KH)    
      GO TO 4119      
  204 CONTINUE
      ELEVAT(KH)=ELOLD(KH)+ZABLAT(KH)-ZABOLD(KH)    
      IF(NTYPMT(1,KH).LE.3) DABCON(KH)=DABOLD(KH)+ZABOLD(KH)-ZABLAT(KH)
      GO TO 4119      
  205 CONTINUE
      ELEVAT(KH)=ELOLD(KH)+ZABLAT(KH)-ZABOLD(KH)+DFILMT(KH)-DFOLT(KH)   
      IF(NTYPMT(1,KH).LE.3) DABCON(KH)=DABOLD(KH)+ZABOLD(KH)-ZABLAT(KH)
      GO TO 4119      
  206 CONTINUE
      ELEVAT(KH)=ELOLD(KH)+ZABLAT(KH)-ZABOLD(KH)+DCRUST(KH)-DCROLD(KH)  
      IF(NTYPMT(1,KH).LE.3) DABCON(KH)=DABOLD(KH)+ZABOLD(KH)-ZABLAT(KH)
      GO TO 4119      
  208 CONTINUE
      ELEVAT(KH)=ELOLD(KH)+DCRUST(KH)-DCROLD(KH)+ZABLAT(KH)-ZABOLD(KH)
     1+DFILMT(KH)-DFOLT(KH)
      IF(NTYPMT(1,KH).LE.3) DABCON(KH)=DABOLD(KH)+ZABOLD(KH)-ZABLAT(KH)
 4119 CONTINUE
C...................................................................... 
C.....GIVEN THE BASEMAT ELEVATION AND MELT DEPTHS, UPDATE THE WATER 
C.....DEPTHS.     
      IF(NWAT.EQ.0.OR.NWAT.EQ.2) GO TO 4121
      DO 4120 KH=1,NUMNOD
      DWAT(KH)=HDOWNC-(HTOT(KH)+ELEVAT(KH))
      DWAT(KH)=DMAX1(DWAT(KH),0.D0)
 4120 CONTINUE
 4121 CONTINUE
      RETURN
      END