C...................................................................... 
C.....SUBROUTINE WATERCLC SOLVES THE 1-D CONSERVATION OF MASS, MOMENTUM,
C.....AND ENERGY EQUATIONS FOR THE WATER LAYER ON THE PEDSTAL FLOOR 
C.....OVER TEH CORE DEBRIS, INCLUDING THE POSSIBILITY OF WATER FLOW 
C.....INTO DOWNCOMERS.
C...................................................................... 
      SUBROUTINE WATERCLC
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      REAL(8) KL
      DIMENSION A(999),B(999),C(999),D(999),P(999),Q(999),DELVLW(999)
      DIMENSION DWATSV(999),DSRDTN(999),DDWAT(999),DEWAT(999)
      DIMENSION XSEND(999),YSEND(999),ZSEND(999)
      COMMON /WATVARS/FCRUST(999),VLW(999),VLWOLD(999),DWAT(999),
     1DWATOLD(999),EWAT(999),EWATOLD(999),TWAT(999),CORDDC(999),
     2DSRDC(999),DHDC(999),TSRDC,TINTDC,HWATB(999),TSURFW(999),XMS(999),
     3XMST,XINTS,ESRDTW(999),TSRDTW(999),DSRDTW(999),TSRDW,TINTDW,
     4TWATI,ELDCO(999),ELDCX(999,99),CRDCX(999,99),TIMINJ(999,99),
     5XDTINJ(999,99),TDTINJ(999,99),ELWATI,XMWAT,XMWATO,XBALW,
     6HDRY(999),EINTW,XMCT(199),XMCDT(16,999),TMPCDT(999),CMPCDT(999),
     7FDC(999),FCOV(999),FBED(999),FHEAT(999),XFACJ(999),
     8XMBEDJ(16,999),XMBEDJT(999),PBED,QBED(999),QWATER(999),
     9QSURFACE(999),QWATERT(999),HBED(999),POROSBED,XMCRDT(16,999),
     1XMCRT(999),XMBDINT(999),XMT(999)
      COMMON /WATINT/NDOWNC,NDC(999),NPTDC(999),NINJ,NINJP(999),
     1NPTINJ(999)
      COMMON/CATCHI/NUMS(4,999),NUMOLD(4,999),NTRACK(16),NSUMP(999),
     1NPASSG(999),NCRSTM(999),NCRRT(999),NPASS(999),NBURN,NBURNO     
      COMMON/PRINTB/ELEVAT(999),ELOLD(999),XDIST(999,999),XBTW(999,999),
     1TEMP(999,999),ENTHP(999,999),EOLD(999,999),ENBLK(999),EBKOLD(999),
     2TBULK(999),HITE(16,999),HITOLD(16,999),HTOT(999),HTOLD(999),
     3HTCFT(999),HTCOEF(999),QFLUXT(999),QFLUXB(999),VEL(999),ELO(999),
     4VELOLD(999),SRSCOR(16),AREA(999),RAD(999),ARC(999),VOLCN(16),
     5VOID(999),VGJ(999),ZABLAT(999),ZABOLD(999),DCRUST(999),
     6DCROLD(999),DABCON(999),DABOLD(999),DFILMT(999),DFOLT(999),
     7SMFLX(4,999),XLSMF(4,999),TOTVOL,XFACMS(999),XMFLXA,XMCORT,
     8VCORT,TOTOX,TOTMET,QFLXT,QFLXB,TIME,DTIME,XMCOR(16),VCOR(16),
     9TCONI,RSAND,HDOWNC,TBOUND,EMISCN,PDRYWL,XDISTO(999),QOXT(999),
     1XLENSH,XBTWO(999),RCOMP,WDOOR,RSUMP,RSHELL,RPED,TPED,ELSMP,
     1TENDP(10,999),TFRZSH,TDEBRS,TKDEBR,PDEBR,CPDEBR,ENENDP(10,999),
     2ENOLDP(10,999),DXVERT,DXSNK,XDSTE(10,999),XBTE(10,999),HXLA(999),
     3HXLB(999),TSFEB(999),DCRS(999),DCRSLD(999),HCRS(16,999),
     4HCRSLD(16,999),THETE0(10,999),THETE1(10,999),QSHELL,QSHELE,TSHELI,
     5SIGOXE(999),FKOXE(999),RINJC,XLSEC,ANGSEC,ANINJC,XLCHAN,WCHNL,
     6TEFZX(999),TIMSPC(999),DXNODE(999),TNORM(999),FRCSOL(999),
     7ALPSPR(999),CRAMCON,HINTF,TSHLMX,XFRMX(999),XFROX(999),XFRTX(999),
     8XMLMX(999),XMLOX(999),XMLTX(999),XTOTX(999),TIMEO,TMAX,EDOWN(999),
     9HCP(999)
      COMMON/PRINTR/ QFEH2O,QCRH2O,QZRH2O,QFECO2,QCRCO2,QZRCO2,
     4XFH2OU,XFCAOH,XFMGCA,XFCACO,XZRMRE,XFEMRE,XCRMRE,XZRORE,XFEORE,   
     5XCRORE,XMH2O,XMCO2,XMCACO,XMMGCA,XMCAOH,TFWL,TFWS,TBWL,TBWS,      
     6TMCAL,TMCAS,TCAL,TCAS,TFOS,TFOL,TFMS,TFML,XVISC(28),SVISC(28),    
     7XMOL(28),FMMOL(28),ROM(28),ROMLIQ(28),AEQM(28,2),BEQM(28,2),
     8CEQM(28,2),ECL,ECS,ECAL,ECAS,EMCAL,EMCAS,EBWL,EBWS,EFWL,EFWS,    
     9STEF,GRAV,PI,TCS,TCL,CCL,CCS,RMASSL,WPCC,WPM,WPA,WPCS,ROC,RMASSS,   
     1ANGSHL,RSLAGL,RSLAGS,HNODT,VFAV,VGAV,QXAV,XWTSS(16),  
     2TSCS(2),TSCL(2),ESCS(2),ESCL(2),CCSS(2),CCSL(2),ROSTLS,ROSTLL,
     3XFRGAS,HMINC,TST(99),TSTOP(99),AINTP(99),BINTP(99),DRATIO(999),
     4XBCN(999),XDCN(999),XBLT(15),ADEC(99),BDEC(99),APOUR(16,99),
     5BPOUR(16,99),XWTC(14),BWIDTH,THCKCV,TMBOIL,TEBOIL,VFINT,ANGFAN,
     6ALPMAX,THSHL,XFCABL,XNDMIN,DVMX,DAVMX,DEAVMX,DEMX,TDC,QDCU,QDCUO2,
     7TSINJ,EINJ,DTINJ,TKINJ,ROEV,CPINJ,SURFT,VSINJ,EMINJ,TSINJO,EINJO,
     8DTINJO,TKINJO,ROEVO,CPINJO,SURFTO,VSINJO,EMINJO,XLEADE,ARSUM,
     9DBUBOX,UTRISE,TREMSH,DJET,DFALL,WEBER,FROUDE,XPSAITO,XPEPSTN,
     1FRAG,XMBEDT,XMBED(16),XLPENT,XLPENA,UJET,UFALL,HFALL,ERPV,
     2TJETT(99),DJETT(99),HWATP,XDOTJET,DVMXW,DAVMXW,DEMXW,DEAVMXW,
     3QJETW,XSTMJF,TINTSJF,ESAT,DRDOOR,DRANL,EI,QDCBUO2,QDCBU,
     4EBEDS,EBEDB
      COMMON/PROPI/ NMATC,NMATFI,NMATFF,ICAOH2,ICACO3,IMCCO3,IFH2O,     
     1IVH2O,ICK2O,IVK2O,INA2O,ITIO2,ISIO2,ICAO,IMGO,IAL2O3,IFEO,IFE2O3, 
     2IFE3O4,IFE,ICR,INI,IZR,IU,IB4C,IB,ICR2O3,INIO,IUO2,IZRO2,IB2O3,   
     3NBCINT(999),NODES(999),NUMNOD,IMOX(28),IBAS,ILCS,ILL,NACTIV(999),     
     4NBFRZM,NBFRZO,NABLFM,NDRNFM,NTYPMT(999,999),NDOOR,NBMADJ,NUMSHV,   
     5NBSHL(999),NCRSTS(999),NUMSHH,NSKIPE,NACSH,NWAT,NPEND,NBCBOT,
     6NCRTOP,NBFZOE,NBFZME,NGEOM,NL(999,999),NFRSCT,NLOGSH,NADAB,NINVIS,
     7NSIMST,NSTEEL,NOVHT,NOVTK,NOVUM,NOVEM,NOVSIG,NPLLOC(999),NBPL,
     8IXP(999),IYP(999),NVTPE,NSOLTP,NSOLF,NINTF,IFLGA(999),ICTYPE,ICTC,
     9NPOURS,NSMP,NPED,NDOR,NSHL,NANULS,NSMPCV,NBOIL,NSWALL,NMVER,
     1NCRTEM,NTHINC,NVELP,NITMAX,NENMAX,NPRINT,NPFREQ,NTIMSPC,NPLFREQ,
     2NPLTOT,NJET,NJETP,NJETD,NJETND,NODCAP,NVELPW,NITMAXW,NENMXW,
     3IFLGJ(999),NBEDCQ,ISHELE
      DATA TREF /273.15D0/
      DATA RCOR /0.01D0/
      DATA DFILM /1.D-08/
      DATA ZERO /0.0D0/
C.....BYPASS THIS ROUTINE IF DETAILED WATER INVENTORY MODEL IS NOT USED.
      IF(NWAT.LT.2) GO TO 1000
C.....FIRST INITIALIZE AND CALCULATE DATA THAT IS ASSUMED TO BE 
C.....CONSTANT OVER THE OVERALL INTEGRATION TIMESTEP, INCLUDING THE 
C.....LOCAL WATER INJECTION FLOWRATE INTO THE MESH.
      CALL CONWAT(TSAT,KL,PL,CL,UL,HLV,EWL,EWV,CWV,SIGMA,PDRYWL)
      RECON=PL/UL
      HMINW=DSQRT((2.D0*SIGMA)/(GRAV*PL))
      TSRDW=0.D0
      IF(NINJ.EQ.0) GO TO 25
      DO 15 K=1,NINJ
      KR=NINJP(K)
      DO 20 L=1,NPTINJ(K)
      XSEND(L)=TIMINJ(K,L)
      YSEND(L)=XDTINJ(K,L)
      ZSEND(L)=TDTINJ(K,L)
   20 CONTINUE
      CALL INTERP(3,NPTINJ(K),TIME,XSEND,YSEND,DSRDTW(KR))
      CALL INTERP(4,NPTINJ(K),TIME,XSEND,ZSEND,TSRDTW(KR))
      CALL TWENTH(ESRDTW(KR),TSRDTW(KR),PDRYWL,DTDE)
      TSRDW=TSRDW+DSRDTW(KR)
   15 CONTINUE
   25 CONTINUE
      TINTDW=TINTDW+TSRDW*DTIME
C.....UPDATE STEAMING RATES FOR NODES WITH WATER PRESENT AT THE START
C.....OF THE TIMESTEP.
      NEST=1
      CALL STEAMER(NEST) 
C.....NOW CHECK TO SEE IF WATER IS ON THE FLOOR OR IF IT IS BEING 
C.....INJECTED, OTHERWISE BYPASS THIS ROUTINE.
      IF(TSRDW.LE.0.D0.AND.XMWAT.LE.0.D0) GO TO 1000
C...................................................................... 
C.....GIVEN THE WATER TEMPERATURE AND DEPTH PROFILES, SOLVE THE 
C.....CONSERVATION OF MASS, MOMENTUM AND ENERGY EQUATIONS FOR THE 
C.....UPDATED VELOCITY, HEIGHT, AND TEMPERATURE PROFILES. 
      DTVEL=DTIME/FLOAT(NVELPW)  
C.....FIRST SAVE BEGINNING OF TIMESTEP WATER DEPTHS, AND ZERO OUT 
C.....ENTHALPY AND DEPTH INCREMENTS FROM PREVIOUS TIMESTEP.
      DO 882 K=1,NUMNOD
      DWATSV(K)=DWATOLD(K)
      DELVLW(K)=0.D0
      DDWAT(K)=0.D0
  882 CONTINUE
C.....INNER DO LOOP FOR VELOCITY CALULATION SUB-TIMESTEP.
      DO 2231 KITV=1,NVELPW      
      IF(KITV.EQ.1) GO TO 2232  
      DO 2233 KSV=1,NUMNOD      
      VLWOLD(KSV)=VLW(KSV)      
      DWATOLD(KSV)=DWAT(KSV)     
 2233 CONTINUE
      VLWOLD(NUMNOD+1)=VLW(NUMNOD+1)      
 2232 CONTINUE
C.....BEFORE ENTERING LOOP CALCULATE CORD LENGTH AND CURRENT FLOWRATE
C.....INTO ANY DOWNCOMERS THAT ARE PRESENT.
      IF(NDOWNC.EQ.0) GO TO 35
      DO 45 K=1,NDOWNC
      KR=NDC(K)
      CORDDC(KR)=0.D0
      DSRDC(KR)=0.D0
      DHDC(KR)=0.D0 
      HTPBCFX=HTOT(KR)+ELEVAT(KR)
      HEVAL=DWAT(KR)+HTPBCFX
      IF(HEVAL.LE.ELDCO(KR)) GO TO 45
      DHDC(KR)=DMIN1(HEVAL-ELDCO(KR),HEVAL-HTPBCFX)
      DO 30 L=1,NPTDC(K)
      XSEND(L)=ELDCX(K,L)
      YSEND(L)=CRDCX(K,L)
   30 CONTINUE
      CALL INTERP(2,NPTDC(K),HEVAL,XSEND,YSEND,CORDDC(KR))
      DSRDC(KR)=PL*DSQRT(2.D0*GRAV)*CORDDC(KR)*DHDC(KR)**1.5D0
   45 CONTINUE
   35 CONTINUE
C.....FINALLY, UPDATE NET WATER VOLUMETRIC INFLUX INTO NODES
C.....GIVEN THE INJECTION RATE & POSSIBLE STEAMING/DOWNCOMER FLOWS.
      DO 989 K=1,NUMNOD
      DSRDTN(K)=(DSRDTW(K)-DSRDC(K)-XMS(K))/PL
  989 CONTINUE
C.....INNER ITERATION LOOP POINT FOR CELL VELOCITY/HEIGHT 
C.....STARTS HERE.
      NITER=0
 2711 CONTINUE
C.....ITERATION LOOP POINT FOR CELL VELOCITY/HEIGHT DETERMINATION...
      NITER=NITER+1   
      IF(NITER.GT.NITMAXW) WRITE(2,*) 'WARNING: WATER VELOCITY CONV. FAI
     1LED, T=',TIME
      IF(NITER.GT.NITMAXW) GO TO 2712      
C.....NOW SOLVE THE TDMA PROBLEM FOR THE NEW CELL EDGE VELOCITIES.
      NUP=NUMNOD+1    
      DO 5001 K=1,NUP 
      IF(K.EQ.1) GO TO 6013     
      IF(K.EQ.NUP) GO TO 6013   
      GO TO 6014      
 6013 CONTINUE
      A(K)=1.D0
      B(K)=0.D0
      C(K)=0.D0
      D(K)=0.D0
      GO TO 5001      
 6014 CONTINUE
C.....FIRST CHECK TO SEE IF THE NODE IS CAPPED IN HEIGHT, IF SO HAS IT
C.....FROZEN SHUT, AND IN THAT CASE ROUTE TO LOCATION WHERE VELOCITY 
C.....IS ZEROED AT CELL BOUNDARY. 
      IF(HCP(K-1)-ELEVAT(K-1)-HTOT(K-1).LE.0.D0) GO TO 5002
      IF(HCP(K)-ELEVAT(K)-HTOT(K).LE.0.D0) GO TO 5002
C.....FLOW OPENING EXISTS, SO PROCEED.
      HMJ=HMINW
      HMJM1=HMINW     
      HAJP1=0.D0      
      IF(K.LE.NUMNOD-1) HAJP1=DWAT(K+1)   
      HAJ=DWAT(K)     
      HAJM1=DWAT(K-1) 
      HAJM2=0.D0      
      IF(K.GT.2) HAJM2=DWAT(K-2)
      VJM32=VLW(K-1)  
      VJM12=VLW(K)    
      VJP12=VLW(K+1)  
      ACJM32=ARC(K-1) 
      ACJM12=ARC(K)   
      ACJP12=ARC(K+1) 
      SNJM32=1.D0     
      IF(VLW(K-1).LT.0.D0) SNJM32=-1.D0   
      SNJM12=1.D0     
      IF(VLW(K).LT.0.D0) SNJM12=-1.D0     
      SNJP12=1.D0     
      IF(VLW(K+1).LT.0.D0) SNJP12=-1.D0   
C.....EVALUATE FRICTION COEFFICIENT.      
      HTFRC=0.5*(DWATOLD(K-1)+DWATOLD(K))
      IF(HTFRC.LT.HMINW) HTFRC=HMINW      
      IF(DWATOLD(K-1).GT.0.D0.OR.DWATOLD(K).GT.0.D0) GO TO 2693   
      FRFAC=0.D0      
      GO TO 2694      
 2693 CONTINUE
      DHJMIN=4.D0*HMINW
      DHJM1=2.D0*(DWATOLD(K-1)+DWATOLD(K))
      DHJM1=DMAX1(DHJM1,DHJMIN)
      VELJM1=ABS(VLW(K))
      REJM1=DHJM1*VELJM1*RECON
      RSEND=RSAND
      IF(NACTIV(K-1).EQ.1.OR.NACTIV(K).EQ.1) RSEND=RCOR
      CALL FRCCF(DHJM1,REJM1,RSEND,FRCJM1)
      FRFAC=(FRCJM1*(DXNODE(K)+DXNODE(K-1)))/HTFRC
 2694 CONTINUE
      W1=DSRDTN(K)+ACJM12*HAJM1*DMAX1(VJM12,0.D0)+ACJP12*HAJP1*DMAX1(-VJ
     1P12,0.D0)-ACJM12*HAJ*DMAX1(-VJM12,0.D0)-ACJP12*HAJ*DMAX1(VJP12,0.D
     20)     
      AAJ=(W1*DTVEL)/AREA(K)    
      W2=DSRDTN(K-1)+ACJM32*HAJM2*DMAX1(VJM32,0.D0)+ACJM12*HAJ*DMAX1(-VJ
     1M12,0.D0)-ACJM32*HAJM1*DMAX1(-VJM32,0.D0)-ACJM12*HAJM1*DMAX1(VJM12
     2,0.D0) 
      AAJM1=(W2*DTVEL)/AREA(K-1)
      HTGJ=DWATOLD(K)+AAJ
      HTJR=HTGJ-HMJ   
      HTJR=DMAX1(HTJR,0.D0)     
      HTGJM1=DWATOLD(K-1)+AAJM1  
      HTJM1R=HTGJM1-HMJM1
      HTJM1R=DMAX1(HTJM1R,0.D0) 
      IF(HTGJ.GT.0.D0.AND.HTGJM1.GT.0.D0) GO TO 8939
      IF(HTJM1R.LE.0.D0.AND.HTJR.LE.0.D0) GO TO 5002
 8939 CONTINUE
      HTVJM1=HTGJM1+ELEVAT(K-1)+HTOT(K-1)
      HTVJ=HTGJ+ELEVAT(K)+HTOT(K)
      DELHT=HTVJ-HTVJM1
      IF(NSUMP(K).EQ.1) GO TO 4525
      GO TO 5004      
 4525 CONTINUE
      HSMPCOMP=HTGJM1+ELEVAT(K-1)+HTOT(K-1)
      IF(HSMPCOMP.GT.ELEVAT(K)+HTOT(K)) GO TO 5004  
      IF(HTJR.LE.0.D0) GO TO 5002
      DELHT=HTJR
      GO TO 5004      
 5002 CONTINUE
      A(K)=1.D0
      B(K)=0.D0
      C(K)=0.D0
      D(K)=-VLW(K)    
      GO TO 5001      
 5004 CONTINUE
C.....CALCULATE TDMA ELEMENTS FOR CASES IN WHICH THERE IS FLOW ACROSS   
C.....THE CELL BOUNDARIES.      
      W3=HAJM1*DMAX1(SNJM12,0.D0)-HAJ*DMAX1(-SNJM12,0.D0)     
      BBJ=(DTVEL*ACJM12*W3)/AREA(K)
      W4=HAJM2*DMAX1(SNJM32,0.D0)-HAJM1*DMAX1(-SNJM32,0.D0)   
      BBJM1=(DTVEL*ACJM32*W4)/AREA(K-1)
      W5=HAJP1*DMAX1(-SNJP12,0.D0)-HAJ*DMAX1(SNJP12,0.D0)     
      GGJ=(DTVEL*ACJP12*W5)/AREA(K)
      W6=HAJ*DMAX1(-SNJM12,0.D0)-HAJM1*DMAX1(SNJM12,0.D0)     
      GGJM1=(DTVEL*ACJM12*W6)/AREA(K-1)
      DELRJ=DXNODE(K)+DXNODE(K-1)
      DELXA=DXNODE(K)+DXNODE(K-1)+SNJM12*(DXNODE(K)-DXNODE(K-1))
      ZWXJ=(DXNODE(K)*(1.D0+SNJM12))/(DELXA*DXNODE(K-1))      
      EWXJ=(DXNODE(K-1)*(1.D0-SNJM12))/(DELXA*DXNODE(K))      
C.....EVALUATE THE TDMA COEFFICIENTS.     
      A(K)=DELRJ/DTVEL+GRAV*(BBJ-GGJM1)+FRFAC*SNJM12*VJM12
     1+0.5D0*DELRJ*(ZWXJ*(2.D0*VJM12-VJM32)+EWXJ*(VJP12-2.D0*VJM12))    
      B(K)=-0.5D0*DELRJ*EWXJ*VJM12-GRAV*GGJ   
      C(K)=0.5D0*DELRJ*ZWXJ*VJM12+GRAV*BBJM1  
      X1=(DELRJ*(VJM12-VLWOLD(K)))/DTVEL+0.5D0*DELRJ*VJM12*(ZWXJ*(VJM12 
     1-VJM32)+EWXJ*(VJP12-VJM12))
      X2=GRAV*DELHT+0.5D0*FRFAC*SNJM12*VJM12*VJM12      
      D(K)=-(X1+X2)   
 5001 CONTINUE
C.....SET UP AND SOLVE THE TDMA PROBLEM FOR THE VELOCITY INCREMENTS.    
      P(1)=B(1)/A(1)  
      Q(1)=D(1)/A(1)  
      DO 5010 KD=2,NUP
      P(KD)=B(KD)/(A(KD)-C(KD)*P(KD-1))   
      Q(KD)=(D(KD)+C(KD)*Q(KD-1))/(A(KD)-C(KD)*P(KD-1))
 5010 CONTINUE
      DELVLW(NUP)=Q(NUP)
      DO 5011 KD=1,NUMNOD
      NARG=NUP-KD     
      DELVLW(NARG)=P(NARG)*DELVLW(NARG+1)+Q(NARG)   
 5011 CONTINUE
C.....CALCULATE NEW VELOCITIES BASED ON VELOCITY INCREMENTS.  
      DO 5012 KD=1,NUP
      VLW(KD)=VLW(KD)+DELVLW(KD)
 5012 CONTINUE
C.....NOW CHECK MESH TO SEE IF THERE ARE ANY HEIGHT LIMITATIONS ON 
C.....THE DEBRIS AND ADJUST VELOCITIES TO ACCOUNT ACCORDINGLY.
      DO 3818 J=1,NUMNOD
      IF(DWAT(J)+HTOT(J)+ELEVAT(J).LE.HCP(J)) GO TO 3818
      IF(ELEVAT(J)+HTOT(J).LT.HCP(J)) GO TO 5113
      VLW(J)=0.D0
      VLW(J+1)=0.D0
      DWAT(J)=0.D0
      GO TO 3818
 5113 CONTINUE
      IF(VLW(J).LE.0.D0.AND.VLW(J+1).GE.0.D0) GO TO 3818
      IF(VLW(J).LT.0.D0.AND.VLW(J+1).LT.0.D0) GO TO 3819
      IF(VLW(J+1).LT.0.D0) GO TO 4821
C.....CASE 1 HERE: VJ>0 and VJ+1>0.
      QJ=0.D0 
      IF(J.GT.1) QJ=ARC(J)*DWAT(J-1)*VLW(J)
      QJP1=ARC(J+1)*DWAT(J)*VLW(J+1)
      IF(QJ.LE.QJP1) GO TO 3818 
      IF(J.EQ.1) GO TO 3820
      IF(DWAT(J-1).GE.HCP(J-1)-ELEVAT(J-1)-HTOT(J-1)) GO TO 3820
      VLW(J)=0.D0
      IF(DWAT(J-1).GT.0.D0) VLW(J)=QJP1/(DWAT(J-1)*ARC(J))
      GO TO 3818
 3820 CONTINUE
      VLW(J+1)=QJ/((HCP(J)-ELEVAT(J)-HTOT(J))*ARC(J+1))
      GO TO 3818
 3819 CONTINUE
C.....CASE 2 HERE: VJ<0 AND VJ+1<0.
      QJ=ARC(J)*DABS(VLW(J))*DWAT(J)
      QJP1=0.D0 
      IF(J.LT.NUMNOD) QJP1=ARC(J+1)*DABS(VLW(J+1))*DWAT(J+1)
      IF(QJ.GE.QJP1) GO TO 3818
      IF(J.EQ.NUMNOD) GO TO 4822
      IF(DWAT(J+1).GE.HCP(J+1)-ELEVAT(J+1)-HTOT(J+1)) GO TO 4822
      VLW(J+1)=0.D0
      IF(DWAT(J+1).GT.0.D0) VLW(J+1)=-QJ/(DWAT(J+1)*ARC(J+1))
      GO TO 3818
 4822 CONTINUE
      VLW(J)=-QJP1/((HCP(J)-ELEVAT(J)-HTOT(J))*ARC(J))
      GO TO 3818
 4821 CONTINUE
C.....CASE 3 HERE: VJ>0 and VJ+1<0.
      QJ=0.D0
      IF(J.GT.1) QJ=ARC(J)*VLW(J)*DWAT(J-1)
      QJP1=0.D0
      IF(J.LT.NUMNOD) QJP1=ARC(J+1)*DABS(VLW(J+1))*DWAT(J+1)
      IF(J.EQ.1) GO TO 3824
      IF(DWAT(J-1).LT.HCP(J-1)-ELEVAT(J-1)-HTOT(J-1)) 
     1 VLW(J)=-QJP1/((HCP(J)-ELEVAT(J)-HTOT(J))*ARC(J))
      GO TO 3818
 3824 CONTINUE
      IF(J.EQ.NUMNOD) GO TO 3818
      IF(DWAT(J+1).LT.HCP(J+1)-ELEVAT(J+1)-HTOT(J+1)) 
     1 VLW(J+1)=QJ/((HCP(J)-ELEVAT(J)-HTOT(J))*ARC(J+1))
 3818 CONTINUE 
C.....NOW SOLVE SIMPLIFIED CONSERVATION OF MASS EQUATION TO OBTAIN 
C.....THE APPROXIMATE HEIGHT DISTRIBUTION.     
      DO 2611 KND=1,NUMNOD      
      VJM12=VLW(KND)  
      VJP12=VLW(KND+1)
      IF(KND.EQ.1) GO TO 2612   
      IF(KND.EQ.NUMNOD) GO TO 2613
      HJM1=DWAT(KND-1)
      HJ=DWAT(KND)    
      HJP1=DWAT(KND+1)
      GO TO 2614      
 2612 CONTINUE
      HJM1=0.D0
      HJ=DWAT(KND)    
      HJP1=DWAT(KND+1)
      GO TO 2614      
 2613 CONTINUE
      HJM1=DWAT(KND-1)
      HJ=DWAT(KND)    
      HJP1=0.D0
 2614 CONTINUE
      D1=(AREA(KND)*(HJ-DWATOLD(KND)))/DTVEL
      D2=ARC(KND)*(HJ*DMAX1(-VJM12,0.D0)-HJM1*DMAX1(VJM12,0.D0))
      D3=ARC(KND+1)*(HJ*DMAX1(VJP12,0.D0)-HJP1*DMAX1(-VJP12,0.D0))      
      D4=DSRDTN(KND)
      D(KND)=-(D1+D2+D3-D4)     
      C(KND)=ARC(KND)*DMAX1(VJM12,0.D0)   
      B(KND)=ARC(KND+1)*DMAX1(-VJP12,0.D0)
      DENOM=0.D0
      IF(DHDC(KND).GT.0.D0) DENOM=1.D0/DHDC(KND)
      A(KND)=AREA(KND)/DTVEL+ARC(KND)*DMAX1(-VJM12,0.D0)
     1 +ARC(KND+1)*DMAX1(VJP12,0.D0)
     1 +(1.5D0*DENOM*DSRDC(KND))/PL
 2611 CONTINUE
C.....FIND APPROXIMATE HEIGHT INCREMENTS. 
      P(1)=B(1)/A(1)  
      Q(1)=D(1)/A(1)  
      DO 2616 KTOP=2,NUMNOD     
      DENOM=A(KTOP)-C(KTOP)*P(KTOP-1)     
      P(KTOP)=B(KTOP)/DENOM     
      Q(KTOP)=(D(KTOP)+C(KTOP)*Q(KTOP-1))/DENOM     
 2616 CONTINUE
C.....DO BACKWARDS SUBSTITUTION 
      DDWAT(NUMNOD)=Q(NUMNOD)   
      DO 2617 KLP=1,NUMNOD-1    
      IARG=NUMNOD-KLP 
      DDWAT(IARG)=P(IARG)*DDWAT(IARG+1)+Q(IARG)     
 2617 CONTINUE
C.....FIND ITERATED HEIGHTS.    
      DO 2818 KND=1,NUMNOD      
      DWAT(KND)=DWAT(KND)+DDWAT(KND)
      DWAT(KND)=DMAX1(DWAT(KND),0.D0)     
 2818 CONTINUE
C.....CALCULATE VELOCITY CONVERGENCE CRITERIA AFTER PERFORMING
C.....AT LEAST ONE ITERATION.
      IF(NITER.EQ.1) GO TO 2711 
      DVMAX=ABS(DELVLW(1))      
      DVSUM=DVMAX     
      DO 3283 KN=2,NUMNOD+1     
      DABV=ABS(DELVLW(KN))      
      DVSUM=DVSUM+DABV
      DVMAX=DMAX1(DABV,DVMAX)   
 3283 CONTINUE
      DVAV=DVSUM/FLOAT(NUMNOD+1)
      IF(DVMAX.LE.DVMXW.AND.DVAV.LE.DAVMXW) GO TO 2712
      GO TO 2711      
 2712 CONTINUE
 2231 CONTINUE
C.....WITH UPDATED INFORMATION, RESTABLISH WATER TEMP/ENTHALPY
C.....IF NODE WAS PREVIOUSLY DRY.
      DO 1033 KN=1,NUMNOD
      IF(DWAT(KN).LE.0.D0) GO TO 1033     
      IF(DWATSV(KN).GT.0.D0) GO TO 1033     
      IF(DSRDTW(KN).LE.0.D0) GO TO 1034   
      TWAT(KN)=TSRDTW(KN)
      EWAT(KN)=ESRDTW(KN)
      GO TO 1033      
 1034 CONTINUE
      IF(KN.EQ.1) NLOC=KN+1
      IF(KN.EQ.NUMNOD) NLOC=KN-1
      IF(KN.EQ.1.OR.KN.EQ.NUMNOD) GO TO 1035
      NLOC=KN-1
      IF(VLW(K+1).LT.0.D0.AND.DWAT(K+1).GT.0.D0) NLOC=KN+1
 1035 CONTINUE
      TWAT(KN)=TWAT(NLOC)     
      EWAT(KN)=EWAT(NLOC)     
 1033 CONTINUE
C...................................................................... 
C.....GIVEN THE WATER VELOCITIES AND ITERATED HEIGHTS, SOLVE THE
C.....CONSERVATION OF ENERGY EQUATION FOR WATER TEMPERATURE AFTER 
C.....ZEROING OUT OLD ENTHALPY INCREMENTS.
      DO 4928 K=1,NUMNOD
      DEWAT(K)=0.D0 
 4928 CONTINUE
      NITEN=0
 3928 CONTINUE
      NITEN=NITEN+1   
      IF(NITEN.GT.NENMXW) WRITE(2,*) 'WARNING: WATER COE CONVERGENCE FAI
     1LED, T=',TIME
      IF(NITEN.GT.NENMXW) GO TO 3929      
      JSEND=1
      PHJ=0.D0
      PHEJ=0.D0
      IF(DWAT(JSEND).LE.0.D0) GO TO 5049
      ROCJP1=PL      
      PHJP1=ROCJP1*DWAT(JSEND)  
      PHEJP1=ROCJP1*DWAT(JSEND)*EWAT(JSEND)
      GO TO 5050      
 5049 CONTINUE
      PHJP1=0.D0      
      PHEJP1=0.D0     
 5050 CONTINUE
      DO 5036 KDR=1,NUMNOD      
      KSEND=KDR+1     
      IF(KDR.EQ.NUMNOD) GO TO 5051
      IF(DWAT(KSEND).LE.0.D0) GO TO 5051
      PHJM1=PHJ
      PHEJM1=PHEJ     
      PHJ=PHJP1
      PHEJ=PHEJP1     
      ROCJP1=PL
      PHJP1=ROCJP1*DWAT(KSEND)  
      PHEJP1=ROCJP1*DWAT(KSEND)*EWAT(KSEND)
      GO TO 5052      
 5051 CONTINUE
      PHJM1=PHJ
      PHEJM1=PHEJ     
      PHJ=PHJP1
      PHEJ=PHEJP1     
      PHJP1=0.D0      
      PHEJP1=0.D0     
 5052 CONTINUE
      IF(DWAT(KDR).GT.DFILM) GO TO 5037   
      A(KDR)=1.D0
      B(KDR)=0.D0     
      C(KDR)=0.D0     
      D(KDR)=0.D0
      GO TO 5036      
 5037 CONTINUE
      PHJM=PL*DWAT(KDR)
C.....EVALUATE OLD TIMESTEP DENSITY & SPECIFIC HEAT.
      PHEOLD=0.D0
      IF(DWATSV(KDR).LE.0.D0) GO TO 5057   
      PHEOLD=PL*EWATOLD(KDR)*DWATSV(KDR)
      GO TO 5058      
 5057 CONTINUE
      PHEOLD=0.D0     
 5058 CONTINUE
C.....ASSIGN VALUES FOR TDMA COEFFICIENT EVALUATION.
      VJM12=VLW(KDR)  
      VJP12=VLW(KDR+1)
      IF(KDR.EQ.1) GO TO 5053   
      IF(KDR.EQ.NUMNOD) GO TO 5054
      HJM1=DWAT(KDR-1)
      HJP1=DWAT(KDR+1)
      GO TO 5055      
 5053 CONTINUE
      HJM1=0.D0
      HJP1=DWAT(KDR+1)
      GO TO 5055      
 5054 CONTINUE
      HJM1=DWAT(KDR-1)
      HJP1=0.D0
 5055 CONTINUE
      HJ=DWAT(KDR)    
C.....EVALUATE DERIVATIVE OF WATER TEMPERATURE WITH RESPECT TO ENTHALPY. 
      CALL EWTEMP(EWAT(KDR),TPASS,PDRYWL,ALPBLK)
C.....NOW EVALUATE TDMA COEFFICIENTS.
      HC1=(AREA(KDR)*(PHEJ-PHEOLD))/DTIME
      HC2=ARC(KDR)*DMAX1(VJM12,0.D0)*PHEJM1
      HC3=PHEJ*(ARC(KDR)*DMAX1(-VJM12,0.D0)+ARC(KDR+1)*DMAX1(VJP12,0.D0)
     1)     
      HC4=ARC(KDR+1)*DMAX1(-VJP12,0.D0)*PHEJP1      
      HC5=-AREA(KDR)*QWATER(KDR)
      IF(NJET.GT.0.AND.KDR.EQ.NJETP) HC5=HC5-QJETW
      HC6=DSRDTW(KDR)*ESRDTW(KDR)
      HC7=DSRDC(KDR)*EWAT(KDR)
      HC8=XMS(KDR)*EWL
      HCJ=HC1-HC2+HC3-HC4+HC5-HC6+HC7+HC8
      EC1=PHJM*AREA(KDR)/DTIME+PHJ*(ARC(KDR)*DMAX1(-VJM12,0.D0)+ARC(KD
     1R+1)*DMAX1(VJP12,0.D0))     
      EC2=AREA(KDR)*FHEAT(KDR)*HWATB(KDR)*ALPBLK
      EC3=DSRDC(KDR)
      ECJ=EC1+EC2+EC3
      FCJ=ARC(KDR)*DMAX1(VJM12,0.D0)*PHJM1
      GCJ=ARC(KDR+1)*DMAX1(-VJP12,0.D0)*PHJP1
      A(KDR)=ECJ      
      B(KDR)=GCJ      
      C(KDR)=FCJ      
      D(KDR)=-HCJ     
 5036 CONTINUE
C.....GIVEN MATRIX ELEMENTS, SOLVE FOR THE ENTHALPY INCREMENTS USING THE
C.....TDMA ALGORITHM. 
      P(1)=B(1)/A(1)  
      Q(1)=D(1)/A(1)  
      DO 5061 KPN=2,NUMNOD      
      P(KPN)=B(KPN)/(A(KPN)-C(KPN)*P(KPN-1))
      Q(KPN)=(D(KPN)+C(KPN)*Q(KPN-1))/(A(KPN)-C(KPN)*P(KPN-1))
 5061 CONTINUE
      DEWAT(NUMNOD)=Q(NUMNOD)  
      DO 5062 KPN=1,NUMNOD-1    
      IARG=NUMNOD-KPN 
      DEWAT(IARG)=P(IARG)*DEWAT(IARG+1)+Q(IARG)   
 5062 CONTINUE
C...................................................................... 
C.....NOW UPDATE WATER ENTHALPY AND TEMPERATURE.    
      DO 7144 KN=1,NUMNOD
      IF(DWAT(KN).LE.0.D0) GO TO 4539      
      IF(EWAT(KN)+DEWAT(KN).GT.EWL) DEWAT(KN)=EWL-EWAT(KN)
      EWAT(KN)=EWAT(KN)+DEWAT(KN)      
      CALL EWTEMP(EWAT(KN),TWAT(KN),PDRYWL,DTDE)
      GO TO 7144      
 4539 CONTINUE
      TWAT(KN)=TREF  
      EWAT(KN)=0.D0  
 7144 CONTINUE
C.....NOW CHECK SOLUTION FOR CONVERGENCE.
      NXSM=1
      DEMXI=ABS(DEWAT(1))      
      DESUM=DEMXI     
      DO 6811 KIT=2,NUMNOD      
      IF(DWAT(KIT).LE.0.D0) GO TO 6811
      NXSM=NXSM+1     
      DEBV=ABS(DEWAT(KIT))     
      DESUM=DESUM+DEBV
      DEMXI=DMAX1(DEBV,DEMXI)   
 6811 CONTINUE
      DEAV=DESUM/FLOAT(NXSM)    
      IF(DEMXI.LE.DEMXW.AND.DEAV.LE.DEAVMXW) GO TO 3929
      GO TO 3928      
 3929 CONTINUE
C.....WITH CONVERGED SOLUTION,CHECK TO SEE IF A NODE HAS EFFECTIVELY 
C.....DRIED OUT AND IF SO, RESET THE DATA.
      DO 2033 KN=1,NUMNOD
      IF(DWAT(KN).LE.ZERO.OR.DWAT(KN).GT.DFILM) GO TO 2033
      DWAT(KN)=ZERO
      TWAT(KN)=TREF  
      EWAT(KN)=ZERO
      IF(VLW(KN).LT.ZERO) VLW(KN)=ZERO
      IF(VLW(KN+1).GT.ZERO) VLW(KN+1)=ZERO
 2033 CONTINUE
C.....WITH THE CONVERGED SOLUTION, UPDATE INTEGRATED QUANTITIES NEEDED
C.....FOR OVERALL WATER MASS BALANCE BEFORE EXITING.  FIRST GET DOWN-
C.....COMER FLOWRATE 
      IF(NDOWNC.EQ.0) GO TO 135
      TSRDC=0.D0
      DO 145 K=1,NDOWNC
      KR=NDC(K)
      CORDDC(KR)=0.D0
      DSRDC(KR)=0.D0
      DHDC(KR)=0.D0 
      HTPBCFX=HTOT(KR)+ELEVAT(KR)
      HEVAL=DWAT(KR)+HTPBCFX
      IF(HEVAL.LE.ELDCO(KR)) GO TO 145
      DHDC(KR)=DMIN1(HEVAL-ELDCO(KR),HEVAL-HTPBCFX)
      DO 130 L=1,NPTDC(K)
      XSEND(L)=ELDCX(K,L)
      YSEND(L)=CRDCX(K,L)
  130 CONTINUE
      CALL INTERP(2,NPTDC(K),HEVAL,XSEND,YSEND,CORDDC(KR))
      DSRDC(KR)=PL*DSQRT(2.D0*GRAV)*CORDDC(KR)*DHDC(KR)**1.5D0
      TSRDC=TSRDC+DSRDC(KR)
  145 CONTINUE
      TINTDC=TINTDC+TSRDC*DTIME
  135 CONTINUE
C.....ALSO UPDATE STEAM PRODUCTION DEPENDING UPON THE AMOUNT OF WATER
C.....IN THE NODE VS. HEAT TRANSFER.
      NEST=2
      CALL STEAMER(NEST)
C.....CALCULATE TOTAL WATER MASS REMAINING ON DRYWELL FLOOR FOR MASS
C.....BALANCE.
      XMWAT=0.D0   
      XMST=0.D0
      XQWAT=0.D0
      DO 388 K=1,NUMNOD
      XMWAT=XMWAT+PL*DWAT(K)*AREA(K)
      IF(DWAT(K).GT.0.D0) XQWAT=XQWAT+AREA(K)*QWATER(K)
      XMST=XMST+XMS(K)
  388 CONTINUE
      XQWAT=XQWAT+QJETW
      XINTS=XINTS+XMST*DTIME
      EINTW=EINTW+XQWAT*DTIME
C.....DETERMINE WATER MASS BALANCE FOR OUTPUT AND CHECK.
      XBALW=(XMWATO+TINTDW-XINTS-TINTDC)-XMWAT
 1000 CONTINUE
      RETURN
      END