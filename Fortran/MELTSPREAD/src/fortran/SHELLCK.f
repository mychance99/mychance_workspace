C...................................................................... 
C.....THIS SUBROUTINE CONTROLS THE INSTIGATION AND RUNNING OF THE      
C.....SHELL HEATUP MODEL.   THE ROUTINE CHECKS WHEN TO BEGIN THE SHELL   
C.....ANALYSIS, AND ALSO INITIALIZES THE SHELL CRUST CALCULATIONS 
C.....SHOULD CRUST GROWTH BE ALLOWED ON THE SHELL (NBFZOE OR NBFZME=2). 
C......................................................................
      SUBROUTINE SHELLCK
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      DIMENSION HSEND(28)
      COMMON/PRINTB/ELEVAT(999),ELOLD(999),XDIST(999,999),XBTW(999,999),
     1TEMP(999,999),ENTHP(999,999),EOLD(999,999),ENBLK(999),EBKOLD(999),
     2TBULK(999),HITE(16,999),HITOLD(16,999),HTOT(999),HTOLD(999),
     3HTCFT(999),HTCOEF(999),QFLUXT(999),QFLUXB(999),VEL(999),ELO(999),
     4VELOLD(999),SRSCOR(16),AREA(999),RAD(999),ARC(999),VOLCN(16),
     5VOID(999),VGJ(999),ZABLAT(999),ZABOLD(999),DCRUST(999),
     6DCROLD(999),DABCON(999),DABOLD(999),DFILMT(999),DFOLT(999),
     7SMFLX(4,999),XLSMF(4,999),TOTVOL,XFACMS(999),XMFLXA,XMCORT,
     8VCORT,TOTOX,TOTMET,QFLXT,QFLXB,TIME,DTIME,XMCOR(16),VCOR(16),
     9TCONI,RSAND,HDOWNC,TBOUND,EMISCN,PDRYWL,XDISTO(999),QOXT(999),
     1XLENSH,XBTWO(999),RCOMP,WDOOR,RSUMP,RSHELL,RPED,TPED,ELSMP,
     1TENDP(10,999),TFRZSH,TDEBRS,TKDEBR,PDEBR,CPDEBR,ENENDP(10,999),
     2ENOLDP(10,999),DXVERT,DXSNK,XDSTE(10,999),XBTE(10,999),HXLA(999),
     3HXLB(999),TSFEB(999),DCRS(999),DCRSLD(999),HCRS(16,999),
     4HCRSLD(16,999),THETE0(10,999),THETE1(10,999),QSHELL,QSHELE,TSHELI,
     5SIGOXE(999),FKOXE(999),RINJC,XLSEC,ANGSEC,ANINJC,XLCHAN,WCHNL,
     6TEFZX(999),TIMSPC(999),DXNODE(999),TNORM(999),FRCSOL(999),
     7ALPSPR(999),CRAMCON,HINTF,TSHLMX,XFRMX(999),XFROX(999),XFRTX(999),
     8XMLMX(999),XMLOX(999),XMLTX(999),XTOTX(999),TIMEO,TMAX,EDOWN(999),
     9HCP(999)
      COMMON/HCONS/HMETAL(999),HOXIDE(999)  
      COMMON/PROPI/ NMATC,NMATFI,NMATFF,ICAOH2,ICACO3,IMCCO3,IFH2O,     
     1IVH2O,ICK2O,IVK2O,INA2O,ITIO2,ISIO2,ICAO,IMGO,IAL2O3,IFEO,IFE2O3, 
     2IFE3O4,IFE,ICR,INI,IZR,IU,IB4C,IB,ICR2O3,INIO,IUO2,IZRO2,IB2O3,   
     3NBCINT(999),NODES(999),NUMNOD,IMOX(28),IBAS,ILCS,ILL,NACTIV(999),     
     4NBFRZM,NBFRZO,NABLFM,NDRNFM,NTYPMT(999,999),NDOOR,NBMADJ,NUMSHV,   
     5NBSHL(999),NCRSTS(999),NUMSHH,NSKIPE,NACSH,NWAT,NPEND,NBCBOT,
     6NCRTOP,NBFZOE,NBFZME,NGEOM,NL(999,999),NFRSCT,NLOGSH,NADAB,NINVIS,
     7NSIMST,NSTEEL,NOVHT,NOVTK,NOVUM,NOVEM,NOVSIG,NPLLOC(999),NBPL,
     8IXP(999),IYP(999),NVTPE,NSOLTP,NSOLF,NINTF,IFLGA(999),ICTYPE,ICTC,
     9NPOURS,NSMP,NPED,NDOR,NSHL,NANULS,NSMPCV,NBOIL,NSWALL,NMVER,
     1NCRTEM,NTHINC,NVELP,NITMAX,NENMAX,NPRINT,NPFREQ,NTIMSPC,NPLFREQ,
     2NPLTOT,NJET,NJETP,NJETD,NJETND,NODCAP,NVELPW,NITMAXW,NENMXW,
     3IFLGJ(999),NBEDCQ,ISHELE
      COMMON/PRINTR/ QFEH2O,QCRH2O,QZRH2O,QFECO2,QCRCO2,QZRCO2,
     4XFH2OU,XFCAOH,XFMGCA,XFCACO,XZRMRE,XFEMRE,XCRMRE,XZRORE,XFEORE,   
     5XCRORE,XMH2O,XMCO2,XMCACO,XMMGCA,XMCAOH,TFWL,TFWS,TBWL,TBWS,      
     6TMCAL,TMCAS,TCAL,TCAS,TFOS,TFOL,TFMS,TFML,XVISC(28),SVISC(28),    
     7XMOL(28),FMMOL(28),ROM(28),ROMLIQ(28),AEQM(28,2),BEQM(28,2),
     8CEQM(28,2),ECL,ECS,ECAL,ECAS,EMCAL,EMCAS,EBWL,EBWS,EFWL,EFWS,    
     9STEF,GRAV,PI,TCS,TCL,CCL,CCS,RMASSL,WPCC,WPM,WPA,WPCS,ROC,RMASSS,   
     1ANGSHL,RSLAGL,RSLAGS,HNODT,VFAV,VGAV,QXAV,XWTSS(16),  
     2TSCS(2),TSCL(2),ESCS(2),ESCL(2),CCSS(2),CCSL(2),ROSTLS,ROSTLL,
     3XFRGAS,HMINC,TST(99),TSTOP(99),AINTP(99),BINTP(99),DRATIO(999),
     4XBCN(999),XDCN(999),XBLT(15),ADEC(99),BDEC(99),APOUR(16,99),
     5BPOUR(16,99),XWTC(14),BWIDTH,THCKCV,TMBOIL,TEBOIL,VFINT,ANGFAN,
     6ALPMAX,THSHL,XFCABL,XNDMIN,DVMX,DAVMX,DEAVMX,DEMX,TDC,QDCU,QDCUO2,
     7TSINJ,EINJ,DTINJ,TKINJ,ROEV,CPINJ,SURFT,VSINJ,EMINJ,TSINJO,EINJO,
     8DTINJO,TKINJO,ROEVO,CPINJO,SURFTO,VSINJO,EMINJO,XLEADE,ARSUM,
     9DBUBOX,UTRISE,TREMSH,DJET,DFALL,WEBER,FROUDE,XPSAITO,XPEPSTN,
     1FRAG,XMBEDT,XMBED(16),XLPENT,XLPENA,UJET,UFALL,HFALL,ERPV,
     2TJETT(99),DJETT(99),HWATP,XDOTJET,DVMXW,DAVMXW,DEMXW,DEAVMXW,
     3QJETW,XSTMJF,TINTSJF,ESAT,DRDOOR,DRANL,EI,QDCBUO2,QDCBU,
     4EBEDS,EBEDB
      COMMON/DATSH/TSTLS,TSTLL,ESTLS,ESTLL,DFUSST,CSTLL
      COMMON/DEFUNC/CPLIQP,CPSOLP,EFOSP,EFOLP,EFMSP,EFMLP     
      DATA TWO / 2.D0 /      
C.....FIRST CHECK TO SEE IF THIS CALCULATION IS NEEDED AND IF NOT, 
C.....BYPASS THE ROUTINE
      IF(NSKIPE.EQ.0.OR.NADAB.EQ.1) GO TO 4651
      IF(ISHELE.EQ.1) GO TO 4651
      IF(NACSH.EQ.1) GO TO 4652
      IF(NACTIV(NBMADJ).EQ.1) NACSH=1     
      IF(NACSH.EQ.1) WRITE(6,7692) TIME   
 7692 FORMAT(//,1X,'*****MELT HAS CONTACTED SHELL, AND SHELL HEATUP MODE
     1L HAS BEEN ACTIVATED*****',//,5X,'CONTACT TIME=',G12.5,//)
      IF(NACSH.EQ.0) GO TO 4651 
      TREMSH=TBULK(NBMADJ)      
      IF(NCRTEM.NE.1) TREMSH=0.D0
 4652 CONTINUE
C.....FIRST CHECK TO DETERMINE IF THE SHELL HAS BEEN TOTALLY ABLATED    
C.....THROUGH AND, IF SO, DOCUMENT IN THE OUTPUT FILE.
      TFAIL=TSTLS-1.0D0
      DO 6670 KD=1,NUMSHV
      IF(TENDP(NUMSHH,KD).LT.TFAIL) GO TO 6670
      ISHELE=1
      HNEXT=ELEVAT(NBMADJ)+HTOT(NBMADJ)
      WRITE(6,6671) TIME,KD,HNEXT
 6671 FORMAT(//,1X,'****CONTAINMENT SHELL HAS BEEN ABLATED THROUGH:',//,
     15X,'TIME=',G12.5,/,5X,'VERTICAL NODE INDEX=',I3,/,5X,'DEBRIS UPPER
     2 SURFACE ELEVATION NEXT TO SHELL=',G12.5,/)
      GO TO 4651      
 6670 CONTINUE
C.....SET FROZEN MELT/SHELL INTERFACIAL HEAT TRANSFER COEFFICIENT DATA. 
      IF(NFRSCT.EQ.1) GO TO 8078
      IF(NTYPMT(1,NBMADJ).GT.3) GO TO 8078
      TFRZSH=TIME     
      NFRSCT=1
 8078 CONTINUE
C.....FIND INTEGRAL AVERAGE DEBRIS TEMPERATURE ADJACENT TO SHELL.
      IF(NFRSCT.EQ.0) GO TO 8088
      IF(ELEVAT(NBMADJ).LE.0.D0) GO TO 8088
      XLSUM=XBTWO(NBMADJ)
      TLSUM=XLSUM*TEMP(1,NBMADJ)
      DO 8089 KP=2,NODES(NBMADJ)
      IF(NTYPMT(KP,NBMADJ).LE.3) GO TO 8089
      XLADD=XLSUM+XDIST(KP-1,NBMADJ)-XBTW(KP-1,NBMADJ)+XBTW(KP,NBMADJ)  
      XLSUM=XLSUM+XLADD
      TLSUM=TLSUM+XLADD*TEMP(KP,NBMADJ)   
 8089 CONTINUE
      TDEBRS=TLSUM/XLSUM
C.....FIND K, P, AND CP FOR SOLIDIFIED DEBRIS BASED ON UPPER MOST
C.....DEBRIS NODE.    
      IF(NTYPMT(1,NBMADJ).LE.3) GO TO 8088
      CALL MASFRD(ROM,1,NBMADJ,RSLAGS,ROC,PDEBR)    
      CALL ASINED(1,NBMADJ,HSEND,ROM,WPCC,WPM,WPA,WPCS,ROC,RSLAGS,0)    
      TEV=TFOS-1.D0   
      IF(NTYPMT(1,NBMADJ).EQ.4) TEV=TFMS-1.D0
      CALL CONDF(TEV,HSEND,FKO,FKM,TKDEBR)
      CALL ETF(EPS,HSEND,TEV,DTDE)
      CPDEBR=1.D0/DTDE
 8088 CONTINUE
C.....IF FREEZING OPTIONS ALLOW FOR CRUST GROWTH, CHECK LOCAL MELT      
C.....INVENTORY FOR PROPER MELT CONSTITUENTS TO BEGIN CRUST CALCULATION.
      IF(NBFZOE.EQ.1.AND.NBFZME.EQ.1) GO TO 4651    
      IF(HTOT(NBMADJ).EQ.0.D0) GO TO 4655 
      NCRWTC=0
      IF(NBFZOE.EQ.1) GO TO 4656
      IF(HOXIDE(NBMADJ).LE.0.D0) GO TO 4656
      IF(TBULK(NBMADJ).LE.TFOS) GO TO 4656
      NCRWTC=1
      GO TO 4653      
 4656 CONTINUE
      IF(NBFZME.EQ.1) GO TO 4655
      IF(HMETAL(NBMADJ).LE.0.D0) GO TO 4655
      IF(TBULK(NBMADJ).LE.TFMS) GO TO 4655
      NCRWTC=2
C.....INITIALIZE CRUST CALCULATIONS DEPENDING UPON THE SETTING OF NCRWTC
 4653 CONTINUE
      CALL ASINEA(HITE,NBMADJ,HSEND,ROMLIQ,WPCC,WPM,WPA,WPCS,ROC,RSLAGL,
     1NCRWTC)
      CALL TEF(ENBLK(NBMADJ),HSEND,TPASS,DTDE)      
      IF(NCRWTC.EQ.2) GO TO 4667
      TFRZS=TFOS      
      TFRZL=TFOL      
      HOX=EFOLP-EFOSP 
      HCOMP=HOXIDE(NBMADJ)      
      GO TO 4668      
 4667 CONTINUE
      TFRZS=TFMS      
      TFRZL=TFML      
      HOX=EFMLP-EFMSP 
      HCOMP=HMETAL(NBMADJ)      
 4668 CONTINUE
      COX=CPSOLP      
      CMS=CPLIQP      
      CALL CONDF(TFRZS,HSEND,FKO,FKM,TKOX)
      CALL MASFRA(HITE,ROM,NBMADJ,RSLAGS,ROC,DENOX,NCRWTC)    
      CALL MASFRA(HITE,ROMLIQ,NBMADJ,RSLAGL,ROC,DENOXL,NCRWTC)
      NS=NBMADJ
      CALL MASFRA(HITE,ROMLIQ,NS,RSLAGL,ROC,PMS,0)  
      CALL CONDF(TBULK(NS),HSEND,FKO,FKM,TKMS)      
      CALL VISCF(TBULK(NS),HSEND,VISFLO,VISFLM,UMS,VISPAS)
      CALL SHELLM(TBULK(NS),VGJ(NS),VEL(NS),VOID(NS),CMS,PMS,TKMS,UMS,HT
     1OT(NS),HSHELL,XLENSH)     
      ANFAR=(PI*ANGSHL)/180.D0  
      ANSIN=COS(ANFAR)
      VFMAX=VOID(NBMADJ)
      IF(VFMAX.GT.0.3) VFMAX=0.3
      THM=HTOT(NBMADJ)/(ANSIN*(1.D0-VFMAX))+ELEVAT(NBMADJ)/ANSIN 
      HENP=-DXVERT/TWO
      DO 4654 KV=2,NUMSHV
      HENP=HENP+DXVERT
      HENT=HENP+DXVERT/TWO      
      HENB=HENP-DXVERT/TWO      
      IF(NBSHL(KV).GT.1) GO TO 4654
      IF(ELEVAT(NBMADJ)/ANSIN.GT.HENB) GO TO 4654   
      XFACM=(THM-HENB)/(HENT-HENB)
      XFACM=DMAX1(XFACM,0.D0)   
      IF(XFACM.GT.1.D0) XFACM=1.D0
      IF(XFACM.EQ.0.D0) GO TO 4654
      IF(TENDP(1,KV).GE.TFRZS) GO TO 4654
C.....ALGORITHM REACHES HERE, CRUST GROWTH CAN BEGIN.
      NCRSTS(KV)=NCRWTC
      NBSHL(KV)=2     
      CALL CONDSS(TENDP(1,KV),FK1)
      CALL CONDSS(TENDP(2,KV),FK2)
      CALL DENSS(TENDP(1,KV),DEN1)
      CALL TESS(ENENDP(1,KV),TPASS,DTDE)  
      CP1=1.D0/DTDE   
      TKE=(XDSTE(1,KV)*FK1*FK2)/(FK2*XBTE(1,KV)+FK1*(XDSTE(1,KV)-XBTE(1,
     2KV))) 
      ALPHA=(TKE*DENOX*HOX)/(XDSTE(1,KV)*CP1*DEN1*XBTE(1,KV)) 
      BETA=TKOX*(TFRZS-TENDP(1,KV))
      GAMMA=HSHELL*(TBULK(NBMADJ)-TENDP(1,KV))+(TKOX*DENOX*HOX)/(CP1*DEN
     11*XBTE(1,KV))   
      Z1=(GAMMA/ALPHA)*(GAMMA/ALPHA)+(4.D0*BETA)/ALPHA
      DCRS(KV)=0.5D0*(SQRT(Z1)-GAMMA/ALPHA)
      IF(DCRS(KV).LT.1.D-3) DCRS(KV)=1.D-3
      ENENDP(1,KV)=ENENDP(1,KV)+(DENOX*HOX*DCRS(KV))/(DEN1*XBTE(1,KV))  
      CALL TESS(ENENDP(1,KV),TENDP(1,KV),DTDE)      
      C1=1.D0+SQRT((TKOX*DENOX*CPSOLP)/(TKE*DEN1*CP1))
      C2=1.D0/C1
      TINMX=TBULK(NBMADJ)+C2*(TENDP(1,KV)-TBULK(NBMADJ))
      IF(TENDP(1,KV).LE.TINMX) GO TO 1818
      TENDP(1,KV)=TINMX
      CALL ETSS(ENENDP(1,KV),TENDP(1,KV),DTDE)
 1818 CONTINUE
      IF(NCRSTS(KV).EQ.2) GO TO 4698     
      KINL=1
      KINH=7
      KLOW=8
      KHIGH=16
      TEFZX(KV)=TFOS  
      IF(NCRTEM.EQ.1) TEFZX(KV)=TREMSH    
      TEFZX(KV)=DMAX1(TFOS,TREMSH)
      GO TO 4699      
 4698 CONTINUE
      KLOW=1
      KHIGH=7
      KINL=8
      KINH=16
      TEFZX(KV)=TFMS  
      IF(NCRTEM.EQ.1) TEFZX(KV)=TREMSH    
      TEFZX(KV)=DMAX1(TFMS,TREMSH)
 4699 CONTINUE
      FKOXE(KV)=TKOX  
      SIGOXE(KV)=(DENOX*HOX)/(2.D0*DTIME) 
      DO 4700 KTP=KLOW,KHIGH    
      CALL INDEX(KTP,KJ)
      RRAT=ROMLIQ(KJ)/ROM(KJ)   
      IF(KTP.EQ.16) RRAT=RSLAGL/RSLAGS    
      HCRS(KTP,KV)=(HITE(KTP,NBMADJ)*DENOX*DCRS(KV)*RRAT)/(HCOMP*DENOXL)
 4700 CONTINUE
      DO 4701 KTP=KINL,KINH     
      HCRS(KTP,KV)=0.D0
 4701 CONTINUE
 4654 CONTINUE
 4655 CONTINUE
C.....CHECK AND SET NBSHL (LOCAL BOUNDARY CONDITION) ACCORDING TO
C.....LOCAL PRESENCE OR ABSENCE OF CRUSTING MELT CONSTITUENT AT SHELL.  
      HENP=-DXVERT/TWO
      DO 5654 KV=2,NUMSHV
      HENP=HENP+DXVERT
      HENT=HENP+DXVERT/TWO      
      HENB=HENP-DXVERT/TWO      
      IF(NBSHL(KV).EQ.1) GO TO 5654
      XFACM=(THM-HENB)/(HENT-HENB)
      XFACM=DMAX1(XFACM,0.D0)   
      IF(XFACM.GT.1.D0) XFACM=1.D0
      IF(ELEVAT(NBMADJ)/ANSIN.GT.HENB) GO TO 5655   
      IF(TENDP(1,KV).GT.TSTLL) GO TO 5655
      IF(TENDP(1,KV).GE.TEFZX(KV)) GO TO 5655
      HCOMP=HMETAL(NBMADJ)      
      IF(NCRSTS(KV).EQ.1) HCOMP=HOXIDE(NBMADJ)      
      IF(XFACM.GT.0.D0) GO TO 5656
      NBSHL(KV)=3     
      GO TO 5654      
 5656 CONTINUE
      NBSHL(KV)=2     
      IF(HCOMP.LE.0.D0) NBSHL(KV)=3
      GO TO 5654      
 5655 CONTINUE
      DCRS(KV)=0.D0   
      DO 1408 KTP=1,16
      HCRS(KTP,KV)=0.D0
 1408 CONTINUE
      NBSHL(KV)=1     
 5654 CONTINUE
 4651 CONTINUE
      RETURN
      END