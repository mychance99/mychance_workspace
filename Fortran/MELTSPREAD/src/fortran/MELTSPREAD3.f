C.......................................................................
C
C                Copyright (C) 2018, UChicago Argonne, LLC
C                         All Rights Reserved
C                     Software Name: MELTSPREAD3.0
C                   By: Argonne National Laboratory
C                         OPEN SOURCE LICENSE
C
C  Redistribution and use in source and binary forms, with or without 
C  modification, are permitted provided that the following conditions
C  are met:
C
C  1. Redistributions of source code must retain the above copyright 
C     notice, this list of conditions and the following disclaimer.
C  2. Redistributions in binary form must reproduce the above copyright 
C     notice, this list of conditions and the following disclaimer in 
C     the documentation and/or other materials provided with the 
C     distribution.
C  3. Neither the name of the copyright holder nor the names of its 
C     contributors may be used to endorse or promote products derived
C     from this software without specific prior written permission.
C
C***********************************************************************
C
C                             DISCLAIMER
C
C  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 
C  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT 
C  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS 
C  FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE 
C  COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, 
C  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, 
C  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; 
C  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER 
C  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT 
C  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN 
C  ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE 
C  POSSIBILITY OF SUCH DAMAGE.
C 
C***********************************************************************
C..... MELTSPREAD SOLVES THE COUPLED MASS, MOMENTUM, AND ENERGY 
C..... EQUATIONS DESCRIBING THE MOTION OF MOLTEN CORIUM OVER A 
C..... BASEMAT WITH ARBITRARILY SPECIFIED ELEVATION.  THE CODE 
C..... CAN COMPUTE LOCAL CRUSTING, ABLATION, OR SIMULTANEOUS
C..... CRUSTING AND ABLATION AT THE MELT/BASEMAT INTERFACE, DEPENDING    
C..... ON THE THERMAL CONDITIONS AT THIS INTERFACE.  THE CODE
C..... TRACKS THE PROPAGATION OF UP TO 15 MELT CONSTITUENTS 
C..... ARE TYPICALLY PREDICTED TO BE RELEASED FROM THE RPV USING 
C..... SYSTEM LEVEL SEVERE ACCIDENT CODES SUCH AS MAAP AND MELCOR.  
C
C..... THIS CODE WAS DEVELOPED AT ARGONNE NATIONAL LABORATORY BY
C..... MITCH FARMER AND HAS UNDERGONE SEVERAL REVISONS AND UPDATES
C..... OVER THE COURSE OF ITS LIFETIME THAT ARE SUMMARIZED BELOW.  
C...................................................................... 
C$$$$$ THIS VERSION OF MELTSPREAD, VERSION 1.03, WAS GENERATED ON 
C$$$$$ 1-8-96 BY MTF.  IT INCLUDES THREE ERROR CORRECTIONS, SUMMARIZED
C$$$$$ AS FOLLOWS: (i) ZrO2 LIQUID/SOLID PHASE DENSITIES SWITCHED IN 
C$$$$$ SUBROUTINE CPROPI, (ii) SUBROUTINE TEF (MELT  ENTHALPY --> 
C$$$$$ TEMPERATURE) ROUTINE CORRECTED, AND (iii) SUBROUTINE ETF(TEMP.
C$$$$$ -->ENTHALPY) CORRECTED.
C...................................................................... 
C##### THIS VERSION OF MELTSPREAD, 1.04, WAS GENERATED ON 1-18-06 BY MTF.
C##### IT FIXED A FEW BUGS, WHICH INCLUDED A MISS-DIRECTED DO LOOP 
C##### (SEARCH ON STRING 638) AND TWO INCOMPATIBLE SUBROUTINE ARGUMENTS 
C##### THAT CAUSED SEGMENTATION FAULTS.  (LINE NOS. 326 AND 968).  THESE 
C##### CAUSED RUN ERRORS USING CIRCA 2006 COMPILERS.
C...................................................................... 
C$$$$$ THIS VERSION OF MELTSPREAD, 2.0, WAS DEVELOPED UNDER NRC
C$$$$$ SPONSORSHIP.  THIS VERSION INCORPORATED UPGRADES THAT INCLUDED
C$$$$$ A NEW MELT VISCOSITY MODEL AS WELL AS THE ABILITY TO READ IN 
C$$$$$ THERMOPHYSICAL PROPERTIES FOR NON-NUCLEAR MELT AND SUBSTRATE 
C$$$$$ MATERIALS.  THE ABILITY TO DO ADIABATIC SPREADING ANALYSIS WAS
C$$$$$ ALSO ADDED.  FINALLY AN EXTENSIVE CODE VALIDATION CAMPAIGN WAS
C$$$$$ CONDUCTED IN WHICH THE CODE WAS VALIDATED AGAINST 35 DIFFFERENT 
C$$$$$ EXPERIMENTS AND ANALYTICAL CASES.  THIS WORK WAS COMPLETED IN 
C$$$$$ 2/16/2008 AND DOCUMENTED IN THE ANL REPORT ANL-09-10.  IN THE 
C$$$$$ ARCHIVE MELTSPREAD DEVELOPMENT DIRECTORY, THIS CORRESPONDS TO
C$$$$$ VERSION test28.f.
C...................................................................... 
C##### VERSIONS TEST28.F TO TEST32.F ARE THE VARIOUS WORKING VERSIONS 
C##### OF MELTPSREAD THAT WERE DEVELOPED AS PART OF THE DOE-SPONSORED
C##### ANALYSES THAT ENDED IN 2012.  VERSION TEST34.F IS THE FINAL 
C##### VERSION DEVELOPED AS PART OF THAT WORK AND WAS USED IN ALL 
C##### CALCULATIONS CARRIED OUT AS PART OF THAT WORK.  THE RESULTS ARE 
C##### ORNL/TM-012/455.  RELATIVE TO VERSION TEST28.F, THIS VERSION HAD 
C##### ADDITIONAL I/O ADDED TO SUPPORT THE ORNL CQ WORK, AND ALSO HAD 
C##### UPDATED WATER PROPERTY SUBROUTINES TO REFLECT THE FACT THAT THOSE
C##### CONTAINMENTS WENT WELL ABOVE 4 BAR, THE ORIGINAL WATER SUBROUTINE 
C##### LIMITS.  THIS WAS ALSO THE VERSION USED FOR THE EPRI ANALYSIS TO
C##### TO SUPPORT FAI IN THE MAAP UPGRADE PROJECT.
C...................................................................... 
C$$$$$ THIS VERSION OF MELTSPREAD, 3.0, WAS DEVELOPED UNDER DOE SUPPORT
C$$$$$ AS PART OF THE WORK TO SUPPORT INDUSTRY IN BWR SEVERE ACCIDENT
C$$$$$ WATER MANAGEMENT (SAWM) WORK.  MAJOR UPGRADES INCLUDED THE   
C$$$$$ ADDITION OF A MELT JET BREAKUP MODEL AS THE CORE DEBRIS RELOCATES
C$$$$$ THROUGH WATER FROM THE RPV TO THE FLOOR, A DETAILED WATER 
C$$$$$ INVENTORY MODEL THAT ALLOWS FOR FLOW OVER EXISTING CORE DEBRIS
C$$$$$ ON THE FLOOR, INJECTION FROM ARBITRAY POINTS, AND A WATER SPILL
C$$$$$ OVER MODEL INTO TORUS REGION.  THE CODE WAS ALSO RESTRUCTURED
C$$$$$ INTO SUBROUTINES AS OPPOSED TO A MAJOR BLOCK PROGRAMMING 
C$$$$$ APPROACH.
C...................................................................... 
      PROGRAM MELTSPREAD3
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      COMMON /LABEL/ TITLE(72)
      COMMON /WATVARS/FCRUST(999),VLW(999),VLWOLD(999),DWAT(999),
     1DWATOLD(999),EWAT(999),EWATOLD(999),TWAT(999),CORDDC(999),
     2DSRDC(999),DHDC(999),TSRDC,TINTDC,HWATB(999),TSURFW(999),XMS(999),
     3XMST,XINTS,ESRDTW(999),TSRDTW(999),DSRDTW(999),TSRDW,TINTDW,
     4TWATI,ELDCO(999),ELDCX(999,99),CRDCX(999,99),TIMINJ(999,99),
     5XDTINJ(999,99),TDTINJ(999,99),ELWATI,XMWAT,XMWATO,XBALW,
     6HDRY(999),EINTW,XMCT(199),XMCDT(16,999),TMPCDT(999),CMPCDT(999),
     7FDC(999),FCOV(999),FBED(999),FHEAT(999),XFACJ(999),
     8XMBEDJ(16,999),XMBEDJT(999),PBED,QBED(999),QWATER(999),
     9QSURFACE(999),QWATERT(999),HBED(999),POROSBED,XMCRDT(16,999),
     1XMCRT(999),XMBDINT(999),XMT(999)
      COMMON /WATINT/NDOWNC,NDC(999),NPTDC(999),NINJ,NINJP(999),
     1NPTINJ(999)
      COMMON/CATCHR/A(999),B(999),C(999),D(999),P(999),Q(999),
     1RECON(999),DELVEL(999),DSRDT(999),DELHTS(999),EMAX(999,999),
     2DBLKEN(999),DELHIT(16,999),SOURCE(16,999),SRCTOT(999),
     3HCROLD(16,999),DCDOT(999),HCRUST(16,999),DFILM(16,999),
     4DFMOLD(16,999),DENOLD(999),SIGOX(999),SIGCON(999),BET(999),
     5TFZX(999),TFZC(999),TKX(999),TKM(999),THETO(999,999),
     6THET1(999,999),OMEG0(4,999),OMEG1(4,999),TAO0(999),TAO1(999),
     7SIG0(999),SIG1(999),TARGB(999),DADOT(999),DADOTG(999),
     8XLOLD(4,999),VISREX(999),TATMS(999),HTMP(999),DHTMP(999),
     9HTMOLD(999)
      COMMON/CATCHI/NUMS(4,999),NUMOLD(4,999),NTRACK(16),NSUMP(999),
     1NPASSG(999),NCRSTM(999),NCRRT(999),NPASS(999),NBURN,NBURNO     
      COMMON/PRINTB/ELEVAT(999),ELOLD(999),XDIST(999,999),XBTW(999,999),
     1TEMP(999,999),ENTHP(999,999),EOLD(999,999),ENBLK(999),EBKOLD(999),
     2TBULK(999),HITE(16,999),HITOLD(16,999),HTOT(999),HTOLD(999),
     3HTCFT(999),HTCOEF(999),QFLUXT(999),QFLUXB(999),VEL(999),ELO(999),
     4VELOLD(999),SRSCOR(16),AREA(999),RAD(999),ARC(999),VOLCN(16),
     5VOID(999),VGJ(999),ZABLAT(999),ZABOLD(999),DCRUST(999),
     6DCROLD(999),DABCON(999),DABOLD(999),DFILMT(999),DFOLT(999),
     7SMFLX(4,999),XLSMF(4,999),TOTVOL,XFACMS(999),XMFLXA,XMCORT,
     8VCORT,TOTOX,TOTMET,QFLXT,QFLXB,TIME,DTIME,XMCOR(16),VCOR(16),
     9TCONI,RSAND,HDOWNC,TBOUND,EMISCN,PDRYWL,XDISTO(999),QOXT(999),
     1XLENSH,XBTWO(999),RCOMP,WDOOR,RSUMP,RSHELL,RPED,TPED,ELSMP,
     1TENDP(10,999),TFRZSH,TDEBRS,TKDEBR,PDEBR,CPDEBR,ENENDP(10,999),
     2ENOLDP(10,999),DXVERT,DXSNK,XDSTE(10,999),XBTE(10,999),HXLA(999),
     3HXLB(999),TSFEB(999),DCRS(999),DCRSLD(999),HCRS(16,999),
     4HCRSLD(16,999),THETE0(10,999),THETE1(10,999),QSHELL,QSHELE,TSHELI,
     5SIGOXE(999),FKOXE(999),RINJC,XLSEC,ANGSEC,ANINJC,XLCHAN,WCHNL,
     6TEFZX(999),TIMSPC(999),DXNODE(999),TNORM(999),FRCSOL(999),
     7ALPSPR(999),CRAMCON,HINTF,TSHLMX,XFRMX(999),XFROX(999),XFRTX(999),
     8XMLMX(999),XMLOX(999),XMLTX(999),XTOTX(999),TIMEO,TMAX,EDOWN(999),
     9HCP(999)
      COMMON/HCONS/HMETAL(999),HOXIDE(999)  
      COMMON/PROPI/ NMATC,NMATFI,NMATFF,ICAOH2,ICACO3,IMCCO3,IFH2O,     
     1IVH2O,ICK2O,IVK2O,INA2O,ITIO2,ISIO2,ICAO,IMGO,IAL2O3,IFEO,IFE2O3, 
     2IFE3O4,IFE,ICR,INI,IZR,IU,IB4C,IB,ICR2O3,INIO,IUO2,IZRO2,IB2O3,   
     3NBCINT(999),NODES(999),NUMNOD,IMOX(28),IBAS,ILCS,ILL,NACTIV(999),     
     4NBFRZM,NBFRZO,NABLFM,NDRNFM,NTYPMT(999,999),NDOOR,NBMADJ,NUMSHV,   
     5NBSHL(999),NCRSTS(999),NUMSHH,NSKIPE,NACSH,NWAT,NPEND,NBCBOT,
     6NCRTOP,NBFZOE,NBFZME,NGEOM,NL(999,999),NFRSCT,NLOGSH,NADAB,NINVIS,
     7NSIMST,NSTEEL,NOVHT,NOVTK,NOVUM,NOVEM,NOVSIG,NPLLOC(999),NBPL,
     8IXP(999),IYP(999),NVTPE,NSOLTP,NSOLF,NINTF,IFLGA(999),ICTYPE,ICTC,
     9NPOURS,NSMP,NPED,NDOR,NSHL,NANULS,NSMPCV,NBOIL,NSWALL,NMVER,
     1NCRTEM,NTHINC,NVELP,NITMAX,NENMAX,NPRINT,NPFREQ,NTIMSPC,NPLFREQ,
     2NPLTOT,NJET,NJETP,NJETD,NJETND,NODCAP,NVELPW,NITMAXW,NENMXW,
     3IFLGJ(999),NBEDCQ,ISHELE
      COMMON/DATOVER/COVS,COVL,DHSOV,XMOLOV,ROVS,ROVL,TKOVS,TKOVL,VISOV,
     1EMOV,SIGOV
      COMMON/PRINTR/ QFEH2O,QCRH2O,QZRH2O,QFECO2,QCRCO2,QZRCO2,
     4XFH2OU,XFCAOH,XFMGCA,XFCACO,XZRMRE,XFEMRE,XCRMRE,XZRORE,XFEORE,   
     5XCRORE,XMH2O,XMCO2,XMCACO,XMMGCA,XMCAOH,TFWL,TFWS,TBWL,TBWS,      
     6TMCAL,TMCAS,TCAL,TCAS,TFOS,TFOL,TFMS,TFML,XVISC(28),SVISC(28),    
     7XMOL(28),FMMOL(28),ROM(28),ROMLIQ(28),AEQM(28,2),BEQM(28,2),
     8CEQM(28,2),ECL,ECS,ECAL,ECAS,EMCAL,EMCAS,EBWL,EBWS,EFWL,EFWS,    
     9STEF,GRAV,PI,TCS,TCL,CCL,CCS,RMASSL,WPCC,WPM,WPA,WPCS,ROC,RMASSS,   
     1ANGSHL,RSLAGL,RSLAGS,HNODT,VFAV,VGAV,QXAV,XWTSS(16),  
     2TSCS(2),TSCL(2),ESCS(2),ESCL(2),CCSS(2),CCSL(2),ROSTLS,ROSTLL,
     3XFRGAS,HMINC,TST(99),TSTOP(99),AINTP(99),BINTP(99),DRATIO(999),
     4XBCN(999),XDCN(999),XBLT(15),ADEC(99),BDEC(99),APOUR(16,99),
     5BPOUR(16,99),XWTC(14),BWIDTH,THCKCV,TMBOIL,TEBOIL,VFINT,ANGFAN,
     6ALPMAX,THSHL,XFCABL,XNDMIN,DVMX,DAVMX,DEAVMX,DEMX,TDC,QDCU,QDCUO2,
     7TSINJ,EINJ,DTINJ,TKINJ,ROEV,CPINJ,SURFT,VSINJ,EMINJ,TSINJO,EINJO,
     8DTINJO,TKINJO,ROEVO,CPINJO,SURFTO,VSINJO,EMINJO,XLEADE,ARSUM,
     9DBUBOX,UTRISE,TREMSH,DJET,DFALL,WEBER,FROUDE,XPSAITO,XPEPSTN,
     1FRAG,XMBEDT,XMBED(16),XLPENT,XLPENA,UJET,UFALL,HFALL,ERPV,
     2TJETT(99),DJETT(99),HWATP,XDOTJET,DVMXW,DAVMXW,DEMXW,DEAVMXW,
     3QJETW,XSTMJF,TINTSJF,ESAT,DRDOOR,DRANL,EI,QDCBUO2,QDCBU,
     4EBEDS,EBEDB
      COMMON/BLKHT/TKMLT,PM,CM,UM,EMISM,SIGMAM,TKNC,PNC,CNC,UNC    
      COMMON/BASPR/ HBMT(999,999,16),HBMOLD(999,999,16)
      COMMON/DATSH/TSTLS,TSTLL,ESTLS,ESTLL,DFUSST,CSTLL
      COMMON/DATSIMS/TSIS,TSIL,CSIS,CSIL,DHSIL,RSIS,RSIL,TKSIS,TKSIL,
     1ESIL,XCSI(16)
      COMMON/DEFUNC/CPLIQP,CPSOLP,EFOSP,EFOLP,EFMSP,EFMLP     
      COMMON/PROPB/CPBM(999),FKB(999,999),DENB(999,999),DTDEB(999,999),
     1EMIBM(999),DENCRS(999),ENCRS(999),FKRF(999),DENRF(999),CPRF(999) 
      COMMON/PROPM/DTDEM(999),CPMLT(999),FKMLT(999),DENMLT(999),
     1SIGMLT(999),UMMLT(999),EMIMLT(999)      
      OPEN(UNIT=2,FILE='diag.dat')
      OPEN(UNIT=5,FILE='spreadin.dat')
      OPEN(UNIT=6,FILE='spreadout.dat')
      OPEN(UNIT=31,FILE='meltloc.dat')
      WRITE(2,1) 
    1 FORMAT('Diagnostics file output:',/)
C.....HERE WE GO.  FIRST READ INPUT DATA....
      CALL READER
C.....GIVEN THE INPUT DATA, INITIALIZE THE NODALIZATIONS AND THERMAL-
C.....HYDRAULIC CONDITIONS
      CALL INITIAL
C...................................................................... 
C.....THE FOLLOWING SECTION OF CODE COVERS TIME STEPPING THROUGH 
C.....CALCULATION FROM TIME=TIMEO TO TMAX; LOOP ENDS AT '1719 CONTINUE'
      TIME=TIMEO      
      IFAILJ=0
      NROUND=0
      NPLRND=0
      IFINISH=0
 1700 CONTINUE
      IF(NPLFREQ.EQ.0) GO TO 4541 
      IF(NPLRND.LT.NPLFREQ) GO TO 4541
      NPLRND=0
 4541 CONTINUE
      IF(NROUND.LT.NPFREQ) GO TO 4542     
      NROUND=0
 4542 CONTINUE
      NROUND=NROUND+1 
      NPLRND=NPLRND+1
      IF(TIME.GT.TMAX) GO TO 1719
      TIME=TIME+DTIME 
      IF(TIME.GE.TMAX) IFINISH=1
C.....UPDATE THE MELT POUR SOURCE MASS POUR RATE, TEMPERATURE, AND
C.....DECAY HEAT AT THE CURRENT TIMESTEP.
      CALL MSOURCE(IFAILJ)
C.....IF DEBRIS FRAGMENTATION RENDERS CORE DEBRIS INTO SOLID STATE UPON
C.....IMPACT WITH FLOOR, TERMINATE RUN.
      IF(IFAILJ.EQ.1) GO TO 1719
C.....CHECK TO SEE IF NEW NODES HAVE BEEN COVERED BY MELT AND, IF SO, 
C.....ACTIVATE THE CALCULATION AT THOSE NODAL LOCATIONS
      CALL ACTIVATE     
C.....FOR CASES IN WHICH A SUMP COVER PLATE ANALYSIS IS PERFORMED, CHECK 
C.....TO SEE IF PLATE HAS FAILED AND, IF SO, RESET THE CALCULATION. 
      CALL SUMPCVA 
C.....CHECK TO SEE IF BULK MELT SOLIDIFICATION HAS LOCALLY OCCURRED AND,
C.....IF SO, INCORPORATE THE MATERIAL INTO THE BASEMAT
      CALL BULKSLD 
C.....IF THE SHELL HEATUP MODEL IS RUNNING, CHECK TO SEE IF MELT HAS 
C.....MADE CONTACT AND IF SO, SETUP AND CONTROL THIS CALCULATION.
      CALL SHELLCK
C.....CALL INCEPT & CHECK MELT-BASEMAT INTERFCIAL BOUNDARY CONDITIONS FOR
C.....INCEPTION OF CRUSTING AND/OR ABLATION AND SET APPRORIATE CONDITION. 
      CALL INCEPT
C.....CALL ENDBC TO CHECK IF CONDITIONS FOR CRUSTING AND/OR ABLATION CAN
C.....CAN BE SUSTAINED.  IF NOT, SET THE PROPER BOUNDARY CONDITION.
      CALL ENDBC
C.....CHECK IF ABLATION DEPTH OF BASEMAT CELLS IS LESS THAN THE MINIMUM
C.....HAS OCCURED AND IF SO REMHESH SO ABLATION INTO NEXT CELL CAN START.
      CALL REMESH(IFAILJ)
C.....IF BASEMAT EROSION HAS LOCALLY REDUCED THE NUMBER OF VERTICAL NODES  
C.....TO THREE, TERMINATE RUN INSTRUCTING USER TO INCREASE DEPTH.
      IF(IFAILJ.EQ.1) GO TO 1719
C.....CALL TRACKER TO SEE IF KT-TH CONSTITUENT IS EJECTED FROM RPV, IS 
C.....FORMING FROM CHEM REACTION, OR OTHER. OTHERWISE IT ISNT TRACKED.
      CALL TRACKER
C.....CALL CRUSTCK TO CHECK CRUST GROWTH LOGIC DEPENDING UPON
C.....USER MODEING ASSUMPTIONS. 
      CALL CRUSTCK
C.....BEFORE ENTERING ITERATION LOOP, CALCULATE MATERIAL PROPERITES OF
C.....STRUCTURE, MELT, AND DEBRIS ZONES (ASSUMED CONSTANT OVER TIMESTEP).
      CALL PROPEVL
C.....IF DETAILED WATER INVENTORY MODEL IS BEING USED, CALCULATE CURRENT
C.....DEPTHS, TEMPERATURES, AND VELOCITIES.
      CALL WATERCLC 
C....SAVE OLD DATA PRIOR TO INITIATION OF TIMESTEP.
      CALL SAVER
C.....CALL VELCALC AND SOLVE THE 1-D TRANSIENT MOMENTUM EQUATION FOR
C.....SPREADING VELOCITY USING AN APPROX. CONSERVATION OF MASS EQUATION.
      CALL VELCALC
C...................................................................... 
C.....THIS IS THE POINT OF THE OUTER LOOP FOR THE ITERATIVE SOLUTION OF 
C.....THE DETAILED COM AND COE EQUATIONS. 
      NITEN=0
 3928 CONTINUE
      NITEN=NITEN+1   
      IF(NITEN.GT.NENMAX) WRITE(2,*) 'WARNING: MELT COE CONVERGENCE FAIL
     1ED, T=',TIME
      IF(NITEN.GT.NENMAX) GO TO 3929      
C.....FIRST UPDATE MELT-TO-BASEMAT AND MELT/SOLDIFIED DEBRIS-TO- 
C.....ATMOSPHERE (WET OR DRY) HEAT TRANSFER COFFICIENTS.
      CALL HTCOEFC
C.....CALCULATE THE BASEMAT FORWARD ELIMINATION COEFFICIENTS BEFORE     
C.....SOLVING CONSERVATION OF MASS AND ENERGY IN THE MELT LAYER.
      CALL ELIMBM
C.....IF SHELL HEATUP CALC IS PERFORMED AND MELT HAS CONTACTED THE  
C.....SHELL, THEN CALCULATE THE SHELL FORWARD ELIMINATION COEFFICIENTS.
      CALL SHELL(IFAILJ)      
C.....IF MELT DEPTH ADJACENT TO SHELL EXCEEDS NODALIZED HEIGHT, TERMINATE
C.....RUN INSTRUCTING USER TO INCREASE NODALIZED SHELL HEIGHT.
      IF(IFAILJ.EQ.1) GO TO 1719
C...................................................................... 
C.....GIVEN THE NEW VELOCITIES AND CONCRETE FORWARD ELIMINATION COEFS.,
C.....SOLVE TDMA PROBLEMS FOR COM AND COE EQUATIONS. FIRST SOLVE FOR   
C.....HEIGHT INCREMENTS ASSUMING THAT THESE ARE INDEPENDENT OF CHANGES
C.....IN MELT ENTHALPY.  WITH THIS DATA, THE MELT ENTHALPY INCREMENTS 
C.....ARE CALCULATED.  THE HEIGHT INCREMENTS ARE THEN UPDATED GIVEN THE 
C.....CONVERGED ENTHALPY INCREMENTS.      
      NWRAP=0
 5020 CONTINUE
C.....CALCULATE HEIGHT INCREMENTS OR HEIGHTS DEPENDING UPON NWRAP..
      CALL HITEELM(NWRAP)
      IF(NWRAP.EQ.1) GO TO 5999 
C.....GIVEN THE VELOCITIES, HEIGHT & CONCRETE FORWARD ELIMINATION      
C.....COEFFICIENTS, SOLVE FOR THE BULK LIQUID ENTHALPY INCREMENTS.     
      CALL ENERELM
      NWRAP=1
      GO TO 5020      
 5999 CONTINUE
C.....GIVEN THE CURRENT BULK ENTHALPY INCREMENTS AND HEIGHTS, CONSTRUCT
C.....DEPENDENT VARIABLES AT THE END OF THE ITERATION.
      CALL UPDATE
C.....NOW CHECK SOLUTION FOR CONVERGENCE.
      NXSM=1
      DEMXI=ABS(DBLKEN(1))      
      DESUM=DEMXI     
      DO 6811 KIT=2,NUMNOD      
      IF(NACTIV(KIT).EQ.0) GO TO 6811     
      IF(NITEN.LE.5) GO TO 8332
      IF(HTOT(KIT).LT.HMINC) GO TO 6811
      GO TO 6811
 8332 CONTINUE
      NXSM=NXSM+1     
      DEBV=ABS(DBLKEN(KIT))     
      DESUM=DESUM+DEBV
      DEMXI=DMAX1(DEBV,DEMXI)   
 6811 CONTINUE
      DEAV=DESUM/FLOAT(NXSM)    
      IF(DEMXI.LE.DEMX.AND.DEAV.LE.DEAVMX) GO TO 3929
      GO TO 3928      
 3929 CONTINUE
C.....SOLUTION HAS CONVERGED; UPDATE ADDITIONAL DATA FOR I/O.
      CALL WRAPUP(IFINISH)
C.....WRITE OUT THE COMPUTED INFORMATION AT THE END-OF-TIMESTEP.
C.....FIRST SEE IF ITS TIME TO WRITE SPATIAL DISTRBUTION DATA. 
C.....OUT AT THIS POINT.
      IF(NTIMSPC.EQ.0) GO TO 8819 
      DO 8821 KPL=1,NTIMSPC
      FPLOT=(TIME-TIMSPC(KPL))/DTIME
      IF(FPLOT.LE.0.D0) GO TO 8821 
      IF(FPLOT.GT.1.D0) GO TO 8821
      CALL PLOTSPC(KPL)
      GO TO 8819
 8821 CONTINUE
 8819 CONTINUE 
C.....NOW SEE IF TEMPORAL DATA AT SELECTED NODES AND OTHER
C.....INFORMATION IS TO BE WRITTEN OUT AT THIS TIME.
      IF(NPLFREQ.EQ.0) GO TO 4477
      IF(NPLRND.LT.NPLFREQ) GO TO 4477
      IF(NPLTOT.GT.0) CALL PLOTTIM
      IF(NBPL.GT.0) CALL PLOTBM
      IF(NJET.GT.0) CALL PLOTJET
      IF(NWAT.EQ.2) CALL PLOTWAT
      WRITE(31,3111) TIME,XLEADE,ARSUM,TSHLMX
 3111 FORMAT(4(2X,E12.5))
 4477 CONTINUE
C.....NOW SEE IF ITS TIME TO WRITE OUT TEXT DATA TO THE ASCII 
C.....OUTPUT FILE.
      IF(NROUND.LT.NPFREQ) GO TO 4470     
      CALL PRINTS(NPRINT)     
 4470 CONTINUE
      GO TO 1700      
 1719 CONTINUE
C.....FINISH UP BY WRITING OUT DATA USEFUL FOR CORQUENCH INPUT.
      CALL CQSTART
      STOP  
      END
C
C
C
C
C
C
C
C
C
C
C
C
C.............................SUBROUTINES..............................
C
C
C
C
C
C
C
C
C
C
C
! C...................................................................... 
! C.....SUBROUTINE VOIDFR EVALUATES THE MELT VOID FRACTION USING THE      
! C.....CORRELATION OF KATAOKA AND ISHII.   
! C...................................................................... 
!       SUBROUTINE VOIDFR(SM,PM,UM,PG,VG,VOID)
!       IMPLICIT DOUBLE PRECISION(A-H,O-Z)
!       GRAV=9.82D0     
!       DP=PM-PG
!       Y1=SQRT(SM/(GRAV*DP))     
!       XNUF=UM/SQRT(SM*PM*Y1)    
!       VGO=((SM*GRAV*DP)/PM**2)**0.25D0    
!       GAMG=PG/PM      
!       CO=1.2D0-0.2D0*SQRT(GAMG) 
!       VGSTAR=VG/VGO   
!       IF(VGSTAR.GT.0.D0) GO TO 50
!       VOID=0.D0
!       GO TO 100
!    50 CONTINUE
!       IF(VGSTAR.GT.0.5D0) GO TO 10
! C.....FLOW IS BUBBLY; FIND VOID FRACTION. 
!       D2=SQRT(2.D0)   
!       VOID=1.D0/(CO+D2/VGSTAR)  
!       GO TO 100
!    10 CONTINUE
! C.....FLOW IS CHURN TURBULENT; CALCULATE VOID FRACTION.
!       Z1=1.D0/GAMG**0.157D0     
!       Z2=1.D0/XNUF**0.562D0     
!       IF(XNUF.GT.2.25D-3) GO TO 35
!       Z3=0.03D0*Z1*Z2/VGSTAR    
!       VOID=1.D0/(CO+Z3)
!       GO TO 100
!    35 CONTINUE
!       Z4=CO+0.92D0*Z1/VGSTAR    
!       VOID=1.D0/Z4    
!   100 CONTINUE
!       RETURN
!       END   
! C...................................................................... 
! C.....SUBROUTINE INDEX CONVERTS THE BWRSAR INDICIAL SCHEME TO THAT      
! C.....COMPATABLE WITH THE PROPERTY ROUTINES.
! C...................................................................... 
!       SUBROUTINE INDEX(I,IJIM)  
!       IMPLICIT DOUBLE PRECISION(A-H,O-Z)
!       GO TO(1,2,2,2,3,2,2,4,5,5,5,6,6,7,8,10),I
!     1 CONTINUE
!       IJIM=20
!       GO TO 10
!     2 CONTINUE
!       IJIM=I+15
!       GO TO 10
!     3 CONTINUE
!       IJIM=23
!       GO TO 10
!     4 CONTINUE
!       IJIM=27
!       GO TO 10
!     5 CONTINUE
!       IJIM=I+5
!       GO TO 10
!     6 CONTINUE
!       IJIM=I+12
!       GO TO 10
!     7 CONTINUE
!       IJIM=28
!       GO TO 10
!     8 CONTINUE
!       IJIM=26
!    10 CONTINUE
!       RETURN
!       END   
! C...................................................................... 
! C.....SUBROUTINE ASINEA ASSIGNS AN ARRAY TO VECTOR HSEND WHICH IS
! C.....COMPATABLE WITH THE PROPERTY ROUTINES.
! C...................................................................... 
!       SUBROUTINE ASINEA(HITE,KDR,HSEND,ROM,WPCC,WPM,WPA,WPCS,ROC,RMASSL,
!      1NCRAB)
!       IMPLICIT DOUBLE PRECISION(A-H,O-Z)
!       DIMENSION HITE(16,999),HSEND(28),ROM(28)
!       DO 76 KT=1,28   
!       HSEND(KT)=0.D0  
!    76 CONTINUE
!       IF(NCRAB.GT.0) GO TO 10   
!       KLOW=1
!       KHIGH=15
!       GO TO 30
!    10 CONTINUE
!       IF(NCRAB.EQ.2) GO TO 20   
!       KLOW=8
!       KHIGH=15
!       GO TO 30
!    20 CONTINUE
!       KLOW=1
!       KHIGH=7
!    30 CONTINUE
! C.....ASSIGN HITE ARRAY TO HSEND VECTOR.  
!       DO 40 I=KLOW,KHIGH
!       CALL INDEX(I,IJIM)
!       HSEND(IJIM)=HITE(I,KDR)   
!    40 CONTINUE
!       IF(NCRAB.EQ.2) GO TO 70   
!       HSEND(10)=WPCS*HITE(16,KDR)
!       HSEND(11)=WPCC*HITE(16,KDR)
!       HSEND(12)=WPM*HITE(16,KDR)
!       HSEND(13)=WPA*HITE(16,KDR)
!    70 CONTINUE
!       RETURN
!       END   
! C...................................................................... 
! C.....SUBROUTINE ASINED ASSIGNS A 3-D VECTOR TO THE VECTOR HSEND FOR    
! C.....EVALUATION OF THE PROPERTY ROUTINES.
! C...................................................................... 
!       SUBROUTINE ASINED(IX,IY,HSEND,ROM,WPCC,WPM,WPA,WPCS,ROC,RMASSL,NCR
!      1AB)   
!       IMPLICIT DOUBLE PRECISION(A-H,O-Z)
!       COMMON/BASPR/ HBMT(999,999,16),HBMOLD(999,999,16)
!       DIMENSION HSEND(28),ROM(28)
!       DO 77 KT=1,28   
!       HSEND(KT)=0.D0  
!    77 CONTINUE
!       IF(NCRAB.GT.0) GO TO 10   
!       KLOW=1
!       KHIGH=15
!       GO TO 30
!    10 CONTINUE
!       IF(NCRAB.EQ.2) GO TO 20   
!       KLOW=8
!       KHIGH=15
!       GO TO 30
!    20 CONTINUE
!       KLOW=1
!       KHIGH=7
!    30 CONTINUE
! C.....ASSIGN HBMT TO HSEND VECTOR
!       DO 40 I=KLOW,KHIGH
!       CALL INDEX(I,IJIM)
!       HSEND(IJIM)=HBMT(IX,IY,I) 
!    40 CONTINUE
!       IF(NCRAB.EQ.2) GO TO 70   
!       HSEND(10)=WPCS*HBMT(IX,IY,16)
!       HSEND(11)=WPCC*HBMT(IX,IY,16)
!       HSEND(12)=WPM*HBMT(IX,IY,16)
!       HSEND(13)=WPA*HBMT(IX,IY,16)
!    70 CONTINUE
!       RETURN
!       END   
! C...................................................................... 
! C.....SUBROUTINE MASFRA EVALUATES THE AVERAGE DENSITY GIVEN THE ARRAY   
! C.....OF CONSTITUENT HEIGHTS, H.
! C...................................................................... 
!       SUBROUTINE MASFRA(H,ROMLIQ,JSEND,RMASS,ROC,ROCAVE,NCRAB)
!       IMPLICIT DOUBLE PRECISION(A-H,O-Z)
!       DIMENSION H(16,999),ROMLIQ(28)
!       ROMIN=ROC*RMASS 
!       IF(NCRAB.GT.0) GO TO 10   
!       KLOW=1
!       KHIGH=16
!       GO TO 30
!    10 CONTINUE
!       IF(NCRAB.EQ.2) GO TO 20   
!       KLOW=8
!       KHIGH=16
!       GO TO 30
!    20 CONTINUE
!       KLOW=1
!       KHIGH=7
!    30 CONTINUE
!       SUM=0.D0
!       HT=0.D0
!       DO 40 I=KLOW,KHIGH
!       HCOMP=DMAX1(H(I,JSEND),0.D0)
!       CALL INDEX(I,IJIM)
!       HT=HT+HCOMP     
!       REV=ROMLIQ(IJIM)
!       IF(I.EQ.16) REV=ROC*RMASS 
!       SUM=SUM+HCOMP*REV
!    40 CONTINUE
!       IF(HT.GT.0.D0) GO TO 60   
!       ROCAVE=ROMIN    
!       GO TO 70
!    60 CONTINUE
!       ROCAVE=SUM/HT   
!    70 CONTINUE
!       RETURN
!       END   
! C...................................................................... 
! C.....SUBROUTINE MASFRD CALCULATES THE AVERAGE DENSITY GIVEN THE
! C.....HEIGHT CONSTITUENT 3-D ARRAY, H.    
! C...................................................................... 
!       SUBROUTINE MASFRD(ROMLIQ,IX,IY,RMASS,ROC,ROCAVE)
!       IMPLICIT DOUBLE PRECISION(A-H,O-Z)
!       COMMON/BASPR/ H(999,999,16),HBMOLD(999,999,16)    
!       DIMENSION ROMLIQ(28)      
!       ROMIN=ROC*RMASS 
!       SUM=0.D0
!       HT=0.D0
!       DO 100 I=1,16   
!       HCOMP=DMAX1(H(IX,IY,I),0.D0)
!       CALL INDEX(I,IJIM)
!       HT=HT+HCOMP     
!       REV=ROMLIQ(IJIM)
!       IF(I.EQ.16) REV=ROC*RMASS 
!       SUM=SUM+HCOMP*REV
!   100 CONTINUE
!       IF(HT.GT.0.D0) GO TO 500  
!       ROCAVE=ROMIN    
!       GO TO 510
!   500 CONTINUE
!       ROCAVE=SUM/HT   
!   510 CONTINUE
!       RETURN
!       END   
! C...................................................................... 
! C.....SUBROUTINE FRCCF EVALUATES THE FRICTION COEFFICIENT GIVEN THE     
! C.....REYNOLDS NUMBER AND HYDRAULIC DIAMETER.
! C...................................................................... 
!       SUBROUTINE FRCCF(DHYD3J,REJ,SANDDW,FRJM12)    
!       IMPLICIT DOUBLE PRECISION(A-H,O-Z)
!       COMMON/PROPI/ NMATC,NMATFI,NMATFF,ICAOH2,ICACO3,IMCCO3,IFH2O,     
!      1IVH2O,ICK2O,IVK2O,INA2O,ITIO2,ISIO2,ICAO,IMGO,IAL2O3,IFEO,IFE2O3, 
!      2IFE3O4,IFE,ICR,INI,IZR,IU,IB4C,IB,ICR2O3,INIO,IUO2,IZRO2,IB2O3,   
!      3NBCINT(999),NODES(999),NUMNOD,IMOX(28),IBAS,ILCS,ILL,NACTIV(999),     
!      4NBFRZM,NBFRZO,NABLFM,NDRNFM,NTYPMT(999,999),NDOOR,NBMADJ,NUMSHV,   
!      5NBSHL(999),NCRSTS(999),NUMSHH,NSKIPE,NACSH,NWAT,NPEND,NBCBOT,
!      6NCRTOP,NBFZOE,NBFZME,NGEOM,NL(999,999),NFRSCT,NLOGSH,NADAB,NINVIS,
!      7NSIMST,NSTEEL,NOVHT,NOVTK,NOVUM,NOVEM,NOVSIG,NPLLOC(999),NBPL,
!      8IXP(999),IYP(999),NVTPE,NSOLTP,NSOLF,NINTF,IFLGA(999),ICTYPE,ICTC,
!      9NPOURS,NSMP,NPED,NDOR,NSHL,NANULS,NSMPCV,NBOIL,NSWALL,NMVER,
!      1NCRTEM,NTHINC,NVELP,NITMAX,NENMAX,NPRINT,NPFREQ,NTIMSPC,NPLFREQ,
!      2NPLTOT,NJET,NJETP,NJETD,NJETND,NODCAP,NVELPW,NITMAXW,NENMXW,
!      3IFLGJ(999),NBEDCQ,ISHELE
!       IF(NINVIS.NE.1) GO TO 22
!       FRJM12=0.0D0
!       GO TO 40
!    22 CONTINUE
!       CONV=0.001D0    
!       DLN10=1.D0/DLOG(10.D0)    
!       REJ=DMAX1(1.D-10,REJ)
!       IF(REJ.GT.2300.D0) GO TO 20  
!       FRJM12=24.D0/REJ
!       GO TO 40
!    20 CONTINUE
!       FTURBJ=0.0791D0/REJ**0.25D0
!       XFRJ=1.D0/SQRT(4.D0*FTURBJ)
!       RE318=18.7D0/REJ
!       IFRIC=0
!       DO 1219 I=1,21  
!       IFRIC=IFRIC+1   
!       DLNARG=2.D0*SANDDW/DHYD3J+RE318*XFRJ
!       F=XFRJ-1.74D0+2.D0*DLN10*DLOG(DLNARG)
!       DFDX=1.D0+(2.D0*DLN10*RE318)/DLNARG 
!       DXFRJ=-F/DFDX   
!       XFRJ=XFRJ+DXFRJ 
!       IF(ABS(DXFRJ).LE.CONV) GO TO 30     
!  1219 CONTINUE
!       WRITE(2,*) 'WARNING: FRICTION FACTOR NOT FOUND, REJ=',REJ
!    30 CONTINUE
!       FRJM12=1.D0/(4.D0*XFRJ*XFRJ)
!    40 CONTINUE
!       RETURN
!       END   
! C...................................................................... 
! C.....SUBROUTINE CONWAT EVALUTES THE THERMAL PROPERTIES OF WATER AS     
! C.....A FUNCTION OF SUBCOOLING. 
! C...................................................................... 
!       SUBROUTINE CONWAT(TSAT,KL,PL,CL,UL,HLV,EWL,EWV,CWV,SIGMA,P)
!       IMPLICIT DOUBLE PRECISION(A-H,O-Z)
!       REAL(8) KL
! C.....FIRST GET SAT TEMPERATURE FOR CONTAINMENT PRESSURE
!       TSAT=5132.0/(13.766-DLOG(1.D01*P))
! C.....AND ON WITH THE PROPERTIES
!       T=TSAT
!       T2=T*T
!       T3=T*T2
!       KL=-0.58411763+6.906588D-03*T-1.0916D-05*T2+4.0D-09*T3
!       SIGMA=1.0D-03*(82.04498+0.126075*T-6.5932D-04*T2+4.133333D-07*T3)
!       UL=1.D-06*(30032.04-216.82*T+0.52811*T2-4.309333D-04*T3)
!       PL=689.7904+2.666707*T-6.57556D-03*T2+3.64D-06*T3
!       CL=4481.727-1.434502*T+6.616D-04*T2+2.933333D-06*T3
!       EWL=1.D03*(-1274.5669+5.442412*T-3.97436D-03*T2+4.173333D-06*T3)
!       EWV=1.D03*(2313.321-1.308004*T+1.059D-02*T2-1.20D-05*T3)
!       CWV=-817.031+27.598*T-9.6764D-02*T2+1.16D-04*T3
!       HLV=EWV-EWL
!       RETURN
!       END   
! C...................................................................... 
! C.....SUBROUTINE CONCO2 EVALUATES THE PROPERTIES FOR CO2 GAS. 
! C...................................................................... 
!       SUBROUTINE CONCO2(T,PDRYWL,CP,VISC,FK,DEN)    
!       IMPLICIT DOUBLE PRECISION(A-H,O-Z)
!       DATA RGASAR/0.188919534D07/
!       DATA CPAR/1.326500007D03/ 
!       TEV=T 
!       IF(T.LT.300.) TEV=300.    
!       IF(T.GT.2000.) TEV=2000.  
!       VISC=3.9573D-8*(TEV-300.D0)+1.496D-5
!       FK=8.8426D-5*(TEV-300.D0)+1.657D-2 
!       CP=CPAR
!       DEN=(1.D10*PDRYWL)/(T*RGASAR)     
!       RETURN
!       END   
! C...................................................................... 
! C.....SUBROUTINE CONH2O EVALUATES THE PROPERTIES FOR H2O VAPOR.
! C...................................................................... 
!       SUBROUTINE CONH2O(TEV,PDRYWL,CP,VISC,FK,DEN)    
!       IMPLICIT DOUBLE PRECISION(A-H,O-Z)
!       T=DMAX1(TEV,293.D0)
!       T=DMIN1(T,443.D0) 
!       T2=T*T
!       T3=T*T2
!       VISC=1.D-06*(-0.36792+1.62815D-02*T+7.70341D-05*T2-8.39984D-08*T3)
!       DEN=-56.33799+0.53218*T-1.68066D-03*T2+1.77744D-06*T3      
!       CP=-817.0310+27.59825*T-9.6764D-02*T2+1.16000D-04*T3
!       FK=1.D-03*(-35.6212+0.403494*T-1.094794D-03*T2+1.199994D-06*T3)
!       RETURN
!       END   
! C...................................................................... 
! C.....SUBROUTINE WAT EVALUATES THE MELT-TO-WATER HEAT TRANSFER
! C.....COEFFICIENT.    
! C...................................................................... 
!       SUBROUTINE WAT(TWABS,TSUB,JG,HTOT,PDRYWL,HMLT) 
!       IMPLICIT DOUBLE PRECISION(A-H,O-Z)
!       REAL(8) LAMDAC,KL,KV,KM,KNC,JG
!       COMMON /BLKHT/KM,PM,CM,UM,EMIS,SIGMAM,KNC,PNC,CNC,UNC
!       COMMON/PROPI/ NMATC,NMATFI,NMATFF,ICAOH2,ICACO3,IMCCO3,IFH2O,     
!      1IVH2O,ICK2O,IVK2O,INA2O,ITIO2,ISIO2,ICAO,IMGO,IAL2O3,IFEO,IFE2O3, 
!      2IFE3O4,IFE,ICR,INI,IZR,IU,IB4C,IB,ICR2O3,INIO,IUO2,IZRO2,IB2O3,   
!      3NBCINT(999),NODES(999),NUMNOD,IMOX(28),IBAS,ILCS,ILL,NACTIV(999),     
!      4NBFRZM,NBFRZO,NABLFM,NDRNFM,NTYPMT(999,999),NDOOR,NBMADJ,NUMSHV,   
!      5NBSHL(999),NCRSTS(999),NUMSHH,NSKIPE,NACSH,NWAT,NPEND,NBCBOT,
!      6NCRTOP,NBFZOE,NBFZME,NGEOM,NL(999,999),NFRSCT,NLOGSH,NADAB,NINVIS,
!      7NSIMST,NSTEEL,NOVHT,NOVTK,NOVUM,NOVEM,NOVSIG,NPLLOC(999),NBPL,
!      8IXP(999),IYP(999),NVTPE,NSOLTP,NSOLF,NINTF,IFLGA(999),ICTYPE,ICTC,
!      9NPOURS,NSMP,NPED,NDOR,NSHL,NANULS,NSMPCV,NBOIL,NSWALL,NMVER,
!      1NCRTEM,NTHINC,NVELP,NITMAX,NENMAX,NPRINT,NPFREQ,NTIMSPC,NPLFREQ,
!      2NPLTOT,NJET,NJETP,NJETD,NJETND,NODCAP,NVELPW,NITMAXW,NENMXW,
!      3IFLGJ(999),NBEDCQ,ISHELE
!       GRAV=9.82D0     
!       STEF=5.67D-8    
!       PI=3.141592654D0
!       E13=1.D0/3.D0   
!       E23=2.D0/3.D0   
!       CD=4.D0/3.D0
! C.....CHECK TO SEE IF DEBRIS IS ABOVE SATURATION TEMPERATURE OR 
! C.....CALCULATION IS ADIABATIC.
!       HTOT=0.D0
!       IF(TWABS.LE.TSAT) GO TO 105
!       IF(NADAB.EQ.1) GO TO 105
! C.....FIRST EVALUATE WATER PROPERTIES
!       CALL CONWAT(TSAT,KL,PL,CL,UL,HLV,EWL,EWV,CWV,SIGMA,PDRYWL)
! C.....EVALUATE VAPOR PROPERTIES.      
!       CALL CONH2O(TSAT,PDRYWL,CV,UV,KV,PV)
! C.....EVALUATE SCALING PARAMETERS.
!       TSUP=TWABS-TSAT 
!       ALPHAL=KL/(PL*CL)
!       DP=PL-PV
!       LAMDAC=2.D0*PI*SQRT(SIGMA/(GRAV*DP))
!       F2=(2.D0*PI*SIGMA)/((PL+PV)*LAMDAC*LAMDAC*LAMDAC)
!       F12=F2**0.25D0  
!       QSUB=(2.D0*KL*TSUB*F12)/SQRT(PI*ALPHAL)
!       UP1=HLV*PV*GRAV*DP*KV*KV*KV
!       UP2=UV*SQRT(SIGMA/(GRAV*DP))
!       HFBO=0.425D0*(UP1/UP2)**0.25D0      
!       ASTAR=1.D0
!       IF(JG.LE.0.D0.OR.HMLT.LE.0.D0) GO TO 660
!       UINF=((8.D0*SIGMAM)/(3.D0*CD*PM))**0.5D0
!       ASTAR=1.D0+(4.50*JG)/UINF 
!       ASTAR=DMIN1(8.D0,ASTAR)
!   660 CONTINUE
! C.....DETERMINE WHETHER THE BOILING REGIME IS NUCLEATE, TRANSITION,     
! C.....OR FILM BOILING.  FIRST FIND CHF USING IVEY-MORRIS EQUATION.      
!       C1=1.D0+(0.1D0*((PL/PV)**0.75D0)*CL*TSUB)/HLV 
!       C2=0.14D0*PV*HLV*(((GRAV*SIGMA*DP)/PV**2)**0.25D0)      
!       QCHF=C1*C2      
!       HCHF=QCHF/TSUP  
!       C3=SQRT(SIGMA/(GRAV*DP))  
!       C4=((1.25D5*UL*HLV)/C3)*(CL/HLV)**3 
!       C5=1.D0/((CL*UL)/KL)**5.1D0
!       ANB=C4*C5
!       DTCHF=(QCHF/ANB)**E13     
! C.....CALCULATE MFB TEMPERATURE USING HENRY'S CORRELATION.    
!       C6=(0.127D0*PV*HLV)/KV    
!       C7=((GRAV*DP)/(PL+PV))**E23
!       C8=(UV/(GRAV*DP))**E13    
!       DTBER=C6*C7*C3*C8
!       C9=SQRT((KL*PL*CL)/(KM*PM*CM))      
!       C10=((C9*HLV)/(CM*DTBER))**0.6D0    
!       DTMIN=DTBER+0.42D0*C10*(DTBER+TSUB) 
!       IF(DTMIN-DTCHF.LT.1.D0) DTMIN=DTCHF+1.D0
!       IF(TSUP.GT.DTCHF) GO TO 500
! C.....BOILING REGIME IS NUCLEATE; FIND THE HEAT TRANSFER COEFFICIENT    
! C.....USING ROHSENOW'S CORRELATION.
!       HTOT=ANB*TSUP*TSUP
!       GO TO 105
!   500 CONTINUE
!       IF(TSUP.GT.DTMIN) GO TO 510
! C.....BOILING REGIME IS TRANSITION; FIND HEAT TRANSER COEFFICIENT USING 
! C.....IVEY-MORRIS EQUATION.     
!       TWABSM=DTMIN+TSAT
!       QRADM=STEF*EMIS*(TWABSM**4-TSAT**4) 
!       QOM=HFBO*DTMIN**0.75D0    
!       ALPHAM=2.D0*SQRT(QSUB/QOM)-QRADM/QOM
!       CALL FILMO(ALPHAM,DEL,ASTAR)
!       QMIN=ASTAR*(QOM/DEL+QRADM)
!       QTRAN=((QMIN-QCHF)/(DTMIN-DTCHF))*(TSUP-DTCHF)+QCHF     
!       HTOT=QTRAN/TSUP 
!       GO TO 105
!   510 CONTINUE
! C.....BOILING REGIME IS FILM; FIND THE HEAT TRANSFER COEFFICIENT.
!       QRAD=STEF*EMIS*(TWABS**4-TSAT**4)   
!       HRAD=QRAD/TSUP  
!       HFB=HFBO/TSUP**0.25D0     
!       DELO=KV/HFB     
!       QO=HFB*TSUP     
!       ALPHA=2.D0*SQRT(QSUB/QO)-QRAD/QO    
!       CALL FILMO(ALPHA,DEL,ASTAR)
!       HTOT=ASTAR*(HFB/DEL+HRAD)
!   105 CONTINUE
!       RETURN
!       END   
! C...................................................................... 
! C.....SUBROUTINE FILMO EVALUATES FILM THICKNESS WHEN NO NOCONDENSABLE   
! C.....GAS IS PRESENT IN THE FILM.
! C...................................................................... 
!       SUBROUTINE FILMO(ALPHA,DEL,ASTAR)   
!       IMPLICIT DOUBLE PRECISION(A-H,O-Z)
!       E6427=64.D0/27.D0
!       ALP=ALPHA/ASTAR 
!       ALPR=ABS(ALP)   
!       E13=1.D0/3.D0   
!       W=SQRT(.25D0*ALPR*ALPR*ALPR*ALPR+E6427)
!       Y1P=(W+.5D0*ALPR*ALPR)**E13
!       Y1MARG=W-0.5D0*ALPR*ALPR  
!       Y1M=0.D0
!       IF(Y1MARG.GT.0.D0) Y1M=Y1MARG**E13  
!       Y1=Y1P-Y1M      
!       SIGN=ALP/ABS(ALP)
!       C1=2.D0*SQRT(Y1*Y1+4.D0)  
!       C2=SQRT(C1-Y1)  
!       DEL=(.5D0*(C2-SIGN*SQRT(Y1)))*ASTAR**0.25D0   
!       RETURN
!       END   
! C...................................................................... 
! C.....GIVEN THE SPECIFIC ENTHALYPY AND THE MAXIMUM SPECIFIC ENTHALPY    
! C.....THAT HAS BEEN OBTAINED FOR CONCRETE, THIS ROUTINE CALCULATES      
! C.....THE CONCRETE TEMPERATURE AND THE DERIVATIVE OF THE TEMPERATURE    
! C.....WITH RESPECT TO THE SPECIFIC ENTHALPY. THE EFFECTS OF RELEASE     
! C.....OF FREE WATER, BOUND WATER, AND CARBON DIOXIDE AS WELL AS THE     
! C.....EFFECTS OF CONCRETE MELTING ARE ALL REPRESENTED. THE MAXIMUM      
! C.....CONCRETE SPECIFIC ENTHALPY THAT HAS BEEN ATTAINED IS USED TO      
! C.....CHARACTERIZE THE STATE OF THE CONCRETE WITH RESPECT TO  
! C.....DECOMPOSITION AND RELEASE OF WATER AS WELL AS CARBON DIOXIDE.     
! C...................................................................... 
!       SUBROUTINE TEC(E,EMAX,T,DTDE,RMASS,YCACO3,YMCCO3,YCAOH2,YFH2O,NROT
!      1)     
!       IMPLICIT DOUBLE PRECISION(A-H,O-Z)
!       COMMON/PROPI/ NMATC,NMATFI,NMATFF,ICAOH2,ICACO3,IMCCO3,IFH2O,     
!      1IVH2O,ICK2O,IVK2O,INA2O,ITIO2,ISIO2,ICAO,IMGO,IAL2O3,IFEO,IFE2O3, 
!      2IFE3O4,IFE,ICR,INI,IZR,IU,IB4C,IB,ICR2O3,INIO,IUO2,IZRO2,IB2O3,   
!      3NBCINT(999),NODES(999),NUMNOD,IMOX(28),IBAS,ILCS,ILL,NACTIV(999),     
!      4NBFRZM,NBFRZO,NABLFM,NDRNFM,NTYPMT(999,999),NDOOR,NBMADJ,NUMSHV,   
!      5NBSHL(999),NCRSTS(999),NUMSHH,NSKIPE,NACSH,NWAT,NPEND,NBCBOT,
!      6NCRTOP,NBFZOE,NBFZME,NGEOM,NL(999,999),NFRSCT,NLOGSH,NADAB,NINVIS,
!      7NSIMST,NSTEEL,NOVHT,NOVTK,NOVUM,NOVEM,NOVSIG,NPLLOC(999),NBPL,
!      8IXP(999),IYP(999),NVTPE,NSOLTP,NSOLF,NINTF,IFLGA(999),ICTYPE,ICTC,
!      9NPOURS,NSMP,NPED,NDOR,NSHL,NANULS,NSMPCV,NBOIL,NSWALL,NMVER,
!      1NCRTEM,NTHINC,NVELP,NITMAX,NENMAX,NPRINT,NPFREQ,NTIMSPC,NPLFREQ,
!      2NPLTOT,NJET,NJETP,NJETD,NJETND,NODCAP,NVELPW,NITMAXW,NENMXW,
!      3IFLGJ(999),NBEDCQ,ISHELE
!       COMMON/PRINTR/ QFEH2O,QCRH2O,QZRH2O,QFECO2,QCRCO2,QZRCO2,
!      4XFH2OU,XFCAOH,XFMGCA,XFCACO,XZRMRE,XFEMRE,XCRMRE,XZRORE,XFEORE,   
!      5XCRORE,XMH2O,XMCO2,XMCACO,XMMGCA,XMCAOH,TFWL,TFWS,TBWL,TBWS,      
!      6TMCAL,TMCAS,TCAL,TCAS,TFOS,TFOL,TFMS,TFML,XVISC(28),SVISC(28),    
!      7XMOL(28),FMMOL(28),ROM(28),ROMLIQ(28),AEQM(28,2),BEQM(28,2),
!      8CEQM(28,2),ECL,ECS,ECAL,ECAS,EMCAL,EMCAS,EBWL,EBWS,EFWL,EFWS,    
!      9STEF,GRAV,PI,TCS,TCL,CCL,CCS,RMASSL,WPCC,WPM,WPA,WPCS,ROC,RMASSS,   
!      1ANGSHL,RSLAGL,RSLAGS,HNODT,VFAV,VGAV,QXAV,XWTSS(16),  
!      2TSCS(2),TSCL(2),ESCS(2),ESCL(2),CCSS(2),CCSL(2),ROSTLS,ROSTLL,
!      3XFRGAS,HMINC,TST(99),TSTOP(99),AINTP(99),BINTP(99),DRATIO(999),
!      4XBCN(999),XDCN(999),XBLT(15),ADEC(99),BDEC(99),APOUR(16,99),
!      5BPOUR(16,99),XWTC(14),BWIDTH,THCKCV,TMBOIL,TEBOIL,VFINT,ANGFAN,
!      6ALPMAX,THSHL,XFCABL,XNDMIN,DVMX,DAVMX,DEAVMX,DEMX,TDC,QDCU,QDCUO2,
!      7TSINJ,EINJ,DTINJ,TKINJ,ROEV,CPINJ,SURFT,VSINJ,EMINJ,TSINJO,EINJO,
!      8DTINJO,TKINJO,ROEVO,CPINJO,SURFTO,VSINJO,EMINJO,XLEADE,ARSUM,
!      9DBUBOX,UTRISE,TREMSH,DJET,DFALL,WEBER,FROUDE,XPSAITO,XPEPSTN,
!      1FRAG,XMBEDT,XMBED(16),XLPENT,XLPENA,UJET,UFALL,HFALL,ERPV,
!      2TJETT(99),DJETT(99),HWATP,XDOTJET,DVMXW,DAVMXW,DEMXW,DEAVMXW,
!      3QJETW,XSTMJF,TINTSJF,ESAT,DRDOOR,DRANL,EI,QDCBUO2,QDCBU,
!      4EBEDS,EBEDB
!       DATA ZERO / 0.0 /
!       DATA ONE / 1.0 /
!       DATA TWO / 2.0 /
!       DATA HALF / 0.5 /
! C.....CHECK FOR STEEL SURFACES. 
!       IF(NROT.NE.2) GO TO 7631  
!       CALL TESS(E,T,DTDE)
!       GO TO 1000      
!  7631 CONTINUE
! C.....CALCULATE THE NEW MAXIMUM SPECIFIC ENTHALPY.  
! C     IF (E .GT. EMAX) EMAX=E   
! C.....CALCULATE THE NEW FACTORS THAT CHARACTERIZE THE STATE OF
! C.....CONCRETE DECOMPOSITION AND RELEASE OF WATER AS WELL AS  
! C.....CARBON DIOXIDE. 
!       YCACO3=ONE      
!       IF (EMAX .GT. ECAS) YCACO3=(ECAL-EMAX)/(ECAL-ECAS)      
!       IF (EMAX .GE. ECAL) YCACO3=ZERO     
!       ZCACO3=ONE-YCACO3
!       DCACO3=ZERO     
!       IF (E .EQ. EMAX .AND. E .GT. ECAS .AND. E .LT. ECAL)    
!      1DCACO3=-ONE/(ECAL-ECAS)   
!       YMCCO3=ONE      
!       IF (EMAX .GT. EMCAS) YMCCO3=(EMCAL-EMAX)/(EMCAL-EMCAS)  
!       IF (EMAX .GE. EMCAL) YMCCO3=ZERO    
!       ZMCCO3=ONE-YMCCO3
!       DMCCO3=ZERO     
!       IF (E .EQ. EMAX .AND. E .GT. EMCAS .AND. E .LT. EMCAL)  
!      1DMCCO3=-ONE/(EMCAL-EMCAS) 
!       YCAOH2=ONE      
!       IF (EMAX .GT. EBWS) YCAOH2=(EBWL-EMAX)/(EBWL-EBWS)      
!       IF (EMAX .GE. EBWL) YCAOH2=ZERO     
!       ZCAOH2=ONE-YCAOH2
!       DCAOH2=ZERO     
!       IF (E .EQ. EMAX .AND. E .GT. EBWS .AND. E .LT. EBWL)    
!      1DCAOH2=-ONE/(EBWL-EBWS)   
!       YFH2O=ONE
!       IF (EMAX .GT. EFWS) YFH2O=(EFWL-EMAX)/(EFWL-EFWS)
!       IF (EMAX .GE. EFWL) YFH2O=ZERO      
!       ZFH2O=ONE-YFH2O 
!       DFH2O=ZERO      
!       IF (E .EQ. EMAX .AND. E .GT. EFWS .AND. E .LT. EFWL)    
!      1DFH2O=-ONE/(EFWL-EFWS)    
! C.....CALCULATE THE TEMPERATURE OF MOLTEN CONCRETE. 
!       IF (E .LT. ECL) GO TO 100 
!       DEDT=CCL
!       DTDE=ABS(ONE/DEDT)
!       T=TCL+DTDE*(E-ECL)
!       RMASS=RMASSL    
!       GO TO 1000      
! C.....CALCULATE THE TEMPERATURE OF CONCRETE BETWEEN THE SOLIDUS
! C.....AND THE LIQUIDUS.
!   100 IF (E .LT. ECS) GO TO 200 
!       DEDT=(ECL-ECS)/(TCL-TCS)  
!       DTDE=ABS(ONE/DEDT)
!       T=TCS+DTDE*(E-ECS)
!       RMASS=RMASSL    
!       GO TO 1000      
! C.....CALCULATE THE TEMPERATURE OF SOLID CONCRETE BELOW THE   
! C.....SOLIDUS TEMPERATURE.      
!   200 A=ZERO
!       B=ZERO
!       C=ZERO
!       DADE=ZERO
!       DBDE=ZERO
!       DCDE=ZERO
!       RMASSN=ZERO     
!       RMASSD=ZERO     
!       DO 299 I=1,NMATC
!       XYI=XMOL(I)     
!       IF (I .EQ. ICACO3) XYI=XYI*YCACO3   
!       IF (I .EQ. ICK2O) XYI=XYI*YCACO3    
!       IF (I .EQ. IMCCO3) XYI=XYI*YMCCO3   
!       IF (I .EQ. ICAOH2) XYI=XYI*YCAOH2   
!       IF (I .EQ. IFH2O) XYI=XYI*YFH2O     
!       IF (I .EQ. ICAO) XYI=XYI+XMOL(ICACO3)*ZCACO3  
!      1+XMOL(IMCCO3)*ZMCCO3+XMOL(ICAOH2)*ZCAOH2      
!       IF (I .EQ. IVK2O) XYI=XYI+XMOL(ICK2O)*ZCACO3  
!       IF (I .EQ. IMGO) XYI=XYI+XMOL(IMCCO3)*ZMCCO3  
!       IF (I .EQ. IVH2O) XYI=XYI+XMOL(IFH2O)*ZFH2O   
!       A=A+XYI*AEQM(I,1)
!       B=B+XYI*BEQM(I,1)
!       C=C+XYI*CEQM(I,1)-E*XYI*FMMOL(I)    
!       DCDE=DCDE-XYI*FMMOL(I)    
!       RMASSN=RMASSN+XYI*FMMOL(I)
!       RMASSD=RMASSD+XMOL(I)*FMMOL(I)      
!   299 CONTINUE
!       RMASS=RMASSN/RMASSD
! C.....IF THE SPECIFIC ENTHALPY IS LESS THAN THE MAXIMUM SPECIFIC
! C.....ENTHALPY, THEN DECOMPOSITION REACTIONS ARE NOT TAKING PLACE
! C.....AND THE FOLLOWING STATEMENTS MAY BE SKIPPED.  
!       IF (E .LT. EMAX) GO TO 400
!       I=ICACO3
!       IMOX(I)=1
!       XMOLI=XMOL(I)   
!       DADE=DADE+XMOLI*DCACO3*(AEQM(I,1)-AEQM(ICAO,1))
!       DBDE=DBDE+XMOLI*DCACO3*(BEQM(I,1)-BEQM(ICAO,1))
!       DCDE=DCDE+XMOLI*DCACO3*(CEQM(I,1)-CEQM(ICAO,1))
!      1-E*XMOLI*DCACO3*(FMMOL(I)-FMMOL(ICAO))
!       DADE=DADE+XMOLI*DCACO3*(AEQM(ICK2O,1)-AEQM(IVK2O,1))    
!       DBDE=DBDE+XMOLI*DCACO3*(BEQM(ICK2O,1)-BEQM(IVK2O,1))    
!       DCDE=DCDE+XMOLI*DCACO3*(CEQM(ICK2O,1)-CEQM(IVK2O,1))    
!      1-E*XMOLI*DCACO3*(FMMOL(ICK2O)-FMMOL(IVK2O))   
!       I=IMCCO3
!       IMOX(I)=1
!       XMOLI=XMOL(I)   
!       DADE=DADE+XMOLI*DMCCO3*(AEQM(I,1)-AEQM(ICAO,1)-AEQM(IMGO,1))      
!       IMOX(I)=1
!       DBDE=DBDE+XMOLI*DMCCO3*(BEQM(I,1)-BEQM(ICAO,1)-BEQM(IMGO,1))      
!       DCDE=DCDE+XMOLI*DMCCO3*(CEQM(I,1)-CEQM(ICAO,1)-CEQM(IMGO,1))      
!      1-E*XMOLI*DMCCO3*(FMMOL(I)-FMMOL(ICAO)-FMMOL(IMGO))      
!       I=ICAOH2
!       IMOX(I)=1
!       XMOLI=XMOL(I)   
!       DADE=DADE+XMOLI*DCAOH2*(AEQM(I,1)-AEQM(ICAO,1))
!       DBDE=DBDE+XMOLI*DCAOH2*(BEQM(I,1)-BEQM(ICAO,1))
!       DCDE=DCDE+XMOLI*DCAOH2*(CEQM(I,1)-CEQM(ICAO,1))
!       DCDE=DCDE-E*XMOLI*DCAOH2*(FMMOL(I)-FMMOL(ICAO))
!       I=IFH2O
!       XMOLI=XMOL(I)   
!       DADE=DADE+XMOLI*DFH2O*(AEQM(I,1)-AEQM(IVH2O,1))
!       DBDE=DBDE+XMOLI*DFH2O*(BEQM(I,1)-BEQM(IVH2O,1))
!       DCDE=DCDE+XMOLI*DFH2O*(CEQM(I,1)-CEQM(IVH2O,1))
!      1-E*XMOLI*DFH2O*(FMMOL(I)-FMMOL(IVH2O))
!   400 CONTINUE
!       T=-C/B
!       IF (A .EQ. ZERO) GO TO 500
!       BR2A=HALF*B/A   
!       CRA=C/A
!       T=-BR2A+SQRT(BR2A*BR2A-CRA)
!   500 CONTINUE
!       DEDT=-(TWO*A*T+B)/(DADE*T*T+DBDE*T+DCDE)      
!       DEDT=ABS(DEDT)  
!       DTDE=ABS(ONE/DEDT)
!  1000 CONTINUE
!       RETURN
!       END   
! C...................................................................... 
! C.....GIVEN THE INITIAL CONCRETE TEMPERATURE, THIS ROUTINE    
! C.....CALCULATES THE INITIAL CONCRETE SPECIFIC ENTHALPY. IT IS
! C.....ASSUMED THAT THE INITIAL TEMPERATURE LIES BELOW THE     
! C.....VALUE AT WHICH FREE WATER IS RELEASED.
! C...................................................................... 
!       SUBROUTINE ETC(E,EMAX,T,DTDE,RMASS) 
!       IMPLICIT DOUBLE PRECISION(A-H,O-Z)
!       COMMON/PROPI/ NMATC,NMATFI,NMATFF,ICAOH2,ICACO3,IMCCO3,IFH2O,     
!      1IVH2O,ICK2O,IVK2O,INA2O,ITIO2,ISIO2,ICAO,IMGO,IAL2O3,IFEO,IFE2O3, 
!      2IFE3O4,IFE,ICR,INI,IZR,IU,IB4C,IB,ICR2O3,INIO,IUO2,IZRO2,IB2O3,   
!      3NBCINT(999),NODES(999),NUMNOD,IMOX(28),IBAS,ILCS,ILL,NACTIV(999),     
!      4NBFRZM,NBFRZO,NABLFM,NDRNFM,NTYPMT(999,999),NDOOR,NBMADJ,NUMSHV,   
!      5NBSHL(999),NCRSTS(999),NUMSHH,NSKIPE,NACSH,NWAT,NPEND,NBCBOT,
!      6NCRTOP,NBFZOE,NBFZME,NGEOM,NL(999,999),NFRSCT,NLOGSH,NADAB,NINVIS,
!      7NSIMST,NSTEEL,NOVHT,NOVTK,NOVUM,NOVEM,NOVSIG,NPLLOC(999),NBPL,
!      8IXP(999),IYP(999),NVTPE,NSOLTP,NSOLF,NINTF,IFLGA(999),ICTYPE,ICTC,
!      9NPOURS,NSMP,NPED,NDOR,NSHL,NANULS,NSMPCV,NBOIL,NSWALL,NMVER,
!      1NCRTEM,NTHINC,NVELP,NITMAX,NENMAX,NPRINT,NPFREQ,NTIMSPC,NPLFREQ,
!      2NPLTOT,NJET,NJETP,NJETD,NJETND,NODCAP,NVELPW,NITMAXW,NENMXW,
!      3IFLGJ(999),NBEDCQ,ISHELE
!       COMMON/PRINTR/ QFEH2O,QCRH2O,QZRH2O,QFECO2,QCRCO2,QZRCO2,
!      4XFH2OU,XFCAOH,XFMGCA,XFCACO,XZRMRE,XFEMRE,XCRMRE,XZRORE,XFEORE,   
!      5XCRORE,XMH2O,XMCO2,XMCACO,XMMGCA,XMCAOH,TFWL,TFWS,TBWL,TBWS,      
!      6TMCAL,TMCAS,TCAL,TCAS,TFOS,TFOL,TFMS,TFML,XVISC(28),SVISC(28),    
!      7XMOL(28),FMMOL(28),ROM(28),ROMLIQ(28),AEQM(28,2),BEQM(28,2),
!      8CEQM(28,2),ECL,ECS,ECAL,ECAS,EMCAL,EMCAS,EBWL,EBWS,EFWL,EFWS,    
!      9STEF,GRAV,PI,TCS,TCL,CCL,CCS,RMASSL,WPCC,WPM,WPA,WPCS,ROC,RMASSS,   
!      1ANGSHL,RSLAGL,RSLAGS,HNODT,VFAV,VGAV,QXAV,XWTSS(16),  
!      2TSCS(2),TSCL(2),ESCS(2),ESCL(2),CCSS(2),CCSL(2),ROSTLS,ROSTLL,
!      3XFRGAS,HMINC,TST(99),TSTOP(99),AINTP(99),BINTP(99),DRATIO(999),
!      4XBCN(999),XDCN(999),XBLT(15),ADEC(99),BDEC(99),APOUR(16,99),
!      5BPOUR(16,99),XWTC(14),BWIDTH,THCKCV,TMBOIL,TEBOIL,VFINT,ANGFAN,
!      6ALPMAX,THSHL,XFCABL,XNDMIN,DVMX,DAVMX,DEAVMX,DEMX,TDC,QDCU,QDCUO2,
!      7TSINJ,EINJ,DTINJ,TKINJ,ROEV,CPINJ,SURFT,VSINJ,EMINJ,TSINJO,EINJO,
!      8DTINJO,TKINJO,ROEVO,CPINJO,SURFTO,VSINJO,EMINJO,XLEADE,ARSUM,
!      9DBUBOX,UTRISE,TREMSH,DJET,DFALL,WEBER,FROUDE,XPSAITO,XPEPSTN,
!      1FRAG,XMBEDT,XMBED(16),XLPENT,XLPENA,UJET,UFALL,HFALL,ERPV,
!      2TJETT(99),DJETT(99),HWATP,XDOTJET,DVMXW,DAVMXW,DEMXW,DEAVMXW,
!      3QJETW,XSTMJF,TINTSJF,ESAT,DRDOOR,DRANL,EI,QDCBUO2,QDCBU,
!      4EBEDS,EBEDB
!       DATA ZERO / 0.0 /
!       DATA ONE / 1.0 /
!       DATA TWO / 2.0 /
!       A=ZERO
!       B=ZERO
!       C=ZERO
!       DNOM=ZERO
!       DO 199 I=1,NMATC
!       XYI=XMOL(I)     
!       A=A+XYI*AEQM(I,1)
!       B=B+XYI*BEQM(I,1)
!       C=C+XYI*CEQM(I,1)
!       DNOM=DNOM+XYI*FMMOL(I)    
!   199 CONTINUE
!       RDNOM=ONE/DNOM  
!       A=A*RDNOM
!       B=B*RDNOM
!       C=C*RDNOM
!       E=C+T*(B+T*A)   
!       DEDT=ABS(B+TWO*T*A)
!       DTDE=ABS(ONE/DEDT)
!       EMAX=E
!       RMASS=ONE
!       RETURN
!       END   
! C...................................................................... 
! C.....THIS ROUTINE DEFINES VARIABLES REQUIRED TO DETERMINE THE
! C.....CONCRETE TEMPERATURE GIVEN THE CONCRETE SPECIFIC ENTHALPY.
! C...................................................................... 
!       SUBROUTINE CPROPI
!       IMPLICIT DOUBLE PRECISION(A-H,O-Z)
!       COMMON/PROPI/ NMATC,NMATFI,NMATFF,ICAOH2,ICACO3,IMCCO3,IFH2O,     
!      1IVH2O,ICK2O,IVK2O,INA2O,ITIO2,ISIO2,ICAO,IMGO,IAL2O3,IFEO,IFE2O3, 
!      2IFE3O4,IFE,ICR,INI,IZR,IU,IB4C,IB,ICR2O3,INIO,IUO2,IZRO2,IB2O3,   
!      3NBCINT(999),NODES(999),NUMNOD,IMOX(28),IBAS,ILCS,ILL,NACTIV(999),     
!      4NBFRZM,NBFRZO,NABLFM,NDRNFM,NTYPMT(999,999),NDOOR,NBMADJ,NUMSHV,   
!      5NBSHL(999),NCRSTS(999),NUMSHH,NSKIPE,NACSH,NWAT,NPEND,NBCBOT,
!      6NCRTOP,NBFZOE,NBFZME,NGEOM,NL(999,999),NFRSCT,NLOGSH,NADAB,NINVIS,
!      7NSIMST,NSTEEL,NOVHT,NOVTK,NOVUM,NOVEM,NOVSIG,NPLLOC(999),NBPL,
!      8IXP(999),IYP(999),NVTPE,NSOLTP,NSOLF,NINTF,IFLGA(999),ICTYPE,ICTC,
!      9NPOURS,NSMP,NPED,NDOR,NSHL,NANULS,NSMPCV,NBOIL,NSWALL,NMVER,
!      1NCRTEM,NTHINC,NVELP,NITMAX,NENMAX,NPRINT,NPFREQ,NTIMSPC,NPLFREQ,
!      2NPLTOT,NJET,NJETP,NJETD,NJETND,NODCAP,NVELPW,NITMAXW,NENMXW,
!      3IFLGJ(999),NBEDCQ,ISHELE
!       COMMON/PRINTR/ QFEH2O,QCRH2O,QZRH2O,QFECO2,QCRCO2,QZRCO2,
!      4XFH2OU,XFCAOH,XFMGCA,XFCACO,XZRMRE,XFEMRE,XCRMRE,XZRORE,XFEORE,   
!      5XCRORE,XMH2O,XMCO2,XMCACO,XMMGCA,XMCAOH,TFWL,TFWS,TBWL,TBWS,      
!      6TMCAL,TMCAS,TCAL,TCAS,TFOS,TFOL,TFMS,TFML,XVISC(28),SVISC(28),    
!      7XMOL(28),FMMOL(28),ROM(28),ROMLIQ(28),AEQM(28,2),BEQM(28,2),
!      8CEQM(28,2),ECL,ECS,ECAL,ECAS,EMCAL,EMCAS,EBWL,EBWS,EFWL,EFWS,    
!      9STEF,GRAV,PI,TCS,TCL,CCL,CCS,RMASSL,WPCC,WPM,WPA,WPCS,ROC,RMASSS,   
!      1ANGSHL,RSLAGL,RSLAGS,HNODT,VFAV,VGAV,QXAV,XWTSS(16),  
!      2TSCS(2),TSCL(2),ESCS(2),ESCL(2),CCSS(2),CCSL(2),ROSTLS,ROSTLL,
!      3XFRGAS,HMINC,TST(99),TSTOP(99),AINTP(99),BINTP(99),DRATIO(999),
!      4XBCN(999),XDCN(999),XBLT(15),ADEC(99),BDEC(99),APOUR(16,99),
!      5BPOUR(16,99),XWTC(14),BWIDTH,THCKCV,TMBOIL,TEBOIL,VFINT,ANGFAN,
!      6ALPMAX,THSHL,XFCABL,XNDMIN,DVMX,DAVMX,DEAVMX,DEMX,TDC,QDCU,QDCUO2,
!      7TSINJ,EINJ,DTINJ,TKINJ,ROEV,CPINJ,SURFT,VSINJ,EMINJ,TSINJO,EINJO,
!      8DTINJO,TKINJO,ROEVO,CPINJO,SURFTO,VSINJO,EMINJO,XLEADE,ARSUM,
!      9DBUBOX,UTRISE,TREMSH,DJET,DFALL,WEBER,FROUDE,XPSAITO,XPEPSTN,
!      1FRAG,XMBEDT,XMBED(16),XLPENT,XLPENA,UJET,UFALL,HFALL,ERPV,
!      2TJETT(99),DJETT(99),HWATP,XDOTJET,DVMXW,DAVMXW,DEMXW,DEAVMXW,
!      3QJETW,XSTMJF,TINTSJF,ESAT,DRDOOR,DRANL,EI,QDCBUO2,QDCBU,
!      4EBEDS,EBEDB
!       COMMON/DATSH/TSTLS,TSTLL,ESTLS,ESTLL,DFUSST,CSTLL
!       COMMON/DATSIMS/TSIS,TSIL,CSIS,CSIL,DHSIL,RSIS,RSIL,TKSIS,TKSIL,
!      1ESIL,XCSI(16)
!       COMMON/DATOVER/COVS,COVL,DHSOV,XMOLOV,ROVS,ROVL,TKOVS,TKOVL,VISOV,
!      1EMOV,SIGOV
!       DATA ZERO / 0.0 /
!       DATA ONE / 1.0 /
!       DATA TWO / 2.0 /
!       DATA HALF / 0.5 /
!       DATA CAL / 4.184 /
!       DATA GRAM / 0.001 /
!       DATA TREF/298.15D0/
! C.....SET DATA AND INTEGER FLAGS.
!       ILCS=1
!       IBAS=2
!       ILL=3 
!       GRAV=9.82D0     
!       STEF=5.67D-8    
!       PI=3.141592654D0
!       XMH2O=18.0152D0*GRAM      
!       XMCO2=44.0098D0*GRAM      
!       XMCACO=100.0892D0*GRAM    
!       XMMGCA=184.4034D0*GRAM    
!       XMCAOH=74.0946D0*GRAM     
!       QFEH2O=.078D6   
!       QCRH2O=3.57D6   
!       QZRH2O=6.74D6   
!       QFECO2=0.D0     
!       QCRCO2=2.75D6   
!       QZRCO2=5.84D6   
!       XZRMRE=2.D0     
!       XFEMRE=1.D0     
!       XCRMRE=1.5D0    
!       XZRORE=2.D0     
!       XFEORE=1.D0     
!       XCRORE=3.D0     
! C.....ASSIGN THE MATERIAL INDICES.
!       NMATC=18
!       ICAOH2=1
!       ICACO3=2
!       IMCCO3=3
!       IFH2O=4
!       IVH2O=5
!       ICK2O=6
!       IVK2O=7
!       INA2O=8
!       ITIO2=9
!       ISIO2=10
!       ICAO=11
!       IMGO=12
!       IAL2O3=13
!       IFEO=14
!       IFE2O3=15
!       IFE3O4=16
!       IFE=17
!       ICR=18
!       INI=19
!       IZR=20
!       IU=21 
!       IB4C=22
!       IB=23 
!       ICR2O3=24
!       INIO=25
!       IUO2=26
!       IZRO2=27
!       IB2O3=28
! C.....DEFINE THE MOLECULAR WEIGHT, ROOM TEMPERATURE DENSITY,  
! C.....SOLID PHASE SPECIFIC ENTHALPY EQUATION COEFFICIENTS, AND
! C.....LIQUID PHASE SPECIFIC ENTHALPY EQUATION COEFFICIENTS FOR
! C.....EACH MATERIAL.  
!       I=ISIO2
!       IMOX(I)=1
!       FMMOL(I)=60.0848*GRAM     
!       ROM(I)=2.20*1000.0
!       ROMLIQ(I)=2.129537062*1000.0
!       AEQM(I,1)=1.269798875D-03*CAL
!       BEQM(I,1)=13.84284222*CAL 
!       CEQM(I,1)=-4.2379302D+03*CAL
!       AEQM(I,2)=ZERO  
!       BEQM(I,2)=20.5*CAL
!       CEQM(I,2)=-10096.00*CAL   
!       I=ICAO
!       IMOX(I)=1
!       FMMOL(I)=56.0794*GRAM     
!       ROM(I)=3.25*1000.0
!       ROMLIQ(I)=2.878868457*1000.0
!       AEQM(I,1)=6.7956134D-04*CAL
!       BEQM(I,1)=11.25975464*CAL 
!       CEQM(I,1)=-3.415754648D+03*CAL      
!       AEQM(I,2)=ZERO  
!       BEQM(I,2)=15*CAL
!       CEQM(I,2)=10352.0*CAL     
!       I=IMGO
!       IMOX(I)=1
!       FMMOL(I)=40.3114*GRAM     
!       ROM(I)=3.58*1000.0
!       ROMLIQ(I)=3.143761653*1000.0
!       AEQM(I,1)=6.054886725D-04*CAL
!       BEQM(I,1)=10.71904531*CAL 
!       CEQM(I,1)=-3.248045318D+03*CAL      
!       AEQM(I,2)=ZERO  
!       BEQM(I,2)=14.5*CAL
!       CEQM(I,2)=9099.0*CAL      
!       I=ICAOH2
!       IMOX(I)=1
!       FMMOL(I)=74.09474*GRAM    
!       ROM(I)=2.24*1000.0
!       ROMLIQ(I)=ROM(I)
!       AEQM(I,1)=2.95601497D-03*CAL
!       BEQM(I,1)=21.65597006*CAL 
! C.....CSOL COEFFICIENT INCORRECT FOR ICAOH2; CORRECTED 11/25/92.
!       CEQM(I,1)=-32875.98*CAL
!       AEQM(I,2)=ZERO  
!       BEQM(I,2)=ZERO  
!       CEQM(I,2)=ZERO  
!       I=ICACO3
!       IMOX(I)=1
!       FMMOL(I)=100.08935*GRAM   
!       ROM(I)=2.710*1000.0
!       ROMLIQ(I)=ROM(I)
!       AEQM(I,1)=4.012976829D-03*CAL
!       BEQM(I,1)=21.20585561*CAL 
! C.....CSOL COEFFICIENT INCORRECT FOR ICACO3; CORRECTED 11/25/92.
!       CEQM(I,1)=-4.91757D+04*CAL      
!       AEQM(I,2)=ZERO  
!       BEQM(I,2)=ZERO  
!       CEQM(I,2)=ZERO  
!       I=IMCCO3
!       IMOX(I)=1
!       FMMOL(I)=184.4107*GRAM    
!       ROM(I)=2.872*1000.0
!       ROMLIQ(I)=ROM(I)
!       AEQM(I,1)=1.082974027D-02*CAL
!       BEQM(I,1)=34.06862336*CAL 
!       CEQM(I,1)=-1.77764174D+05*CAL
!       AEQM(I,2)=ZERO  
!       BEQM(I,2)=ZERO  
!       CEQM(I,2)=ZERO  
!       I=IFH2O
!       IMOX(I)=1
!       FMMOL(I)=18.01534*GRAM    
!       ROM(I)=0.9970636476*1000.0
!       ROMLIQ(I)=ROM(I)
!       AEQM(I,1)=1.030120773D-03*1000.0*FMMOL(I)     
!       BEQM(I,1)=3.485859882*1000.0*FMMOL(I)
! C.....CSOL COEFFICIENT INCORRECT FOR IFH2O; CORRECTED 11/25/92.
!       CEQM(I,1)=-1.113026D+03*1000.0*FMMOL(I)    
!       AEQM(I,2)=ZERO  
!       BEQM(I,2)=ZERO  
!       CEQM(I,2)=ZERO  
!       I=IVH2O
!       IMOX(I)=1
!       FMMOL(I)=ZERO   
!       ROM(I)=ROM(IFH2O)
!       ROMLIQ(I)=ROM(I)
!       AHVAP=-4.737086585D-03*1000.0*FMMOL(IFH2O)    
!       BHVAP=7.57401951D-01*1000.0*FMMOL(IFH2O)      
!       CHVAP=2.637717168D+03*1000.0*FMMOL(IFH2O)     
!       AEQM(I,1)=ZERO  
!       BEQM(I,1)=ZERO  
!       CEQM(I,1)=AEQM(IFH2O,1)*TFWL*TFWL+BEQM(IFH2O,1)*TFWL+CEQM(IFH2O,1)
!      1+AHVAP*TFWL*TFWL+BHVAP*TFWL+CHVAP   
!       AEQM(I,2)=ZERO  
!       BEQM(I,2)=ZERO  
!       CEQM(I,2)=CEQM(I,1)
!       I=IAL2O3
!       IMOX(I)=1
!       FMMOL(I)=101.9612*GRAM    
!       ROM(I)=3.965*1000.0
!       ROMLIQ(I)=3.741451713*1000.0
!       AEQM(I,1)=6.587394436D-03 
!       BEQM(I,1)=108.2762663     
!       CEQM(I,1)=-3.286814483D+04
!       AEQM(I,2)=ZERO  
!       BEQM(I,2)=192.464
!       CEQM(I,2)=-82016.728      
!       I=IFEO
!       IMOX(I)=1
!       FMMOL(I)=71.8464*GRAM     
!       ROM(I)=5.7*1000.0
!       ROMLIQ(I)=5.32912083*1000.0
!       AEQM(I,1)=1.1278054D-03*CAL
!       BEQM(I,1)=11.78824218*CAL 
!       CEQM(I,1)=-3.6130498D+03*CAL
!       AEQM(I,2)=ZERO  
!       BEQM(I,2)=16.3*CAL
!       CEQM(I,2)=-2237.0*CAL     
!       I=IFE2O3
!       IMOX(I)=1
!       FMMOL(I)=159.6922*GRAM    
!       ROM(I)=5.24*1000.0
!       ROMLIQ(I)=4.949536681*1000.0
!       AEQM(I,1)=3.452197061D-04*CAL
!       BEQM(I,1)=33.56608762*CAL 
!       CEQM(I,1)=-29133.351*CAL  
!       AEQM(I,2)=ZERO  
!       BEQM(I,2)=34.0*CAL
!       CEQM(I,2)=9356.0*CAL      
!       I=INA2O
!       IMOX(I)=1
!       FMMOL(I)=61.979*GRAM      
!       ROM(I)=2.27*1000.0
!       ROMLIQ(I)=ROM(I)
!       AEQM(I,1)=-5.86089669D-04*CAL
!       BEQM(I,1)=25.45791197*CAL 
!       CEQM(I,1)=-7.53441066D+03*CAL
!       AEQM(I,2)=ZERO  
!       BEQM(I,2)=25.0*CAL
!       CEQM(I,2)=3352.0*CAL      
!       I=ICK2O
!       IMOX(I)=1
!       FMMOL(I)=94.2034*GRAM     
!       ROM(I)=2.32*1000.0
!       ROMLIQ(I)=ROM(I)
!       AEQM(I,1)=5.003493755D-03*CAL
!       BEQM(I,1)=17.24193641*CAL 
!       CEQM(I,1)=-9.238242731D+04*CAL      
!       AEQM(I,2)=ZERO  
!       BEQM(I,2)=ZERO  
!       CEQM(I,2)=ZERO  
!       I=IVK2O
!       IMOX(I)=1
!       FMMOL(I)=ZERO   
!       ROM(I)=ROM(ICK2O)
!       ROMLIQ(I)=ROM(I)
!       AEQM(I,1)=ZERO  
!       BEQM(I,1)=ZERO  
!       CEQM(I,1)=ZERO  
!       AEQM(I,2)=ZERO  
!       BEQM(I,2)=ZERO  
!       CEQM(I,2)=CEQM(ICK2O,1)+TCAL*(BEQM(ICK2O,1)+TCAL*AEQM(ICK2O,1))   
!      1+37024.8566*CAL 
!       I=ITIO2
!       IMOX(I)=1
!       FMMOL(I)=79.8988*GRAM     
!       ROM(I)=4.26*1000.0
!       ROMLIQ(I)=4.020841193*1000.0
!       AEQM(I,1)=2.717132431D-03 
!       BEQM(I,1)=67.65301585     
!       CEQM(I,1)=-2.041228188D+04
!       AEQM(I,2)=ZERO  
!       BEQM(I,2)=100.416
!       CEQM(I,2)=-10926.08
!       I=IFE 
!       IMOX(I)=0
!       FMMOL(I)=55.847*GRAM      
!       ROM(I)=7.867*1000.0
!       ROMLIQ(I)=7.01*1000.0     
!       AEQM(I,1)=5.928784491D-04*CAL
!       BEQM(I,1)=8.024965771*CAL 
!       CEQM(I,1)=-2.445346539D+03*CAL      
!       AEQM(I,2)=ZERO  
!       BEQM(I,2)=11.0*CAL
!       CEQM(I,2)=-2587.0*CAL     
!       I=ICR 
!       IMOX(I)=0
!       FMMOL(I)=51.996*GRAM      
!       ROM(I)=7.19*1000.0
!       ROMLIQ(I)=6.28*1000.0     
!       AEQM(I,1)=1.839387325D-03*CAL
!       BEQM(I,1)=4.264209995*CAL 
!       CEQM(I,1)=-1.434883645D+03*CAL      
!       AEQM(I,2)=ZERO  
!       BEQM(I,2)=9.4*CAL
!       CEQM(I,2)=18.0*CAL
!       I=INI 
!       IMOX(I)=0
!       FMMOL(I)=58.71*GRAM
!       ROM(I)=8.908*1000.0
!       ROMLIQ(I)=7.77*1000.0     
!       AEQM(I,1)=4.865234897D-04*CAL
!       BEQM(I,1)=6.970520914*CAL 
!       CEQM(I,1)=-2.121509549D+03*CAL      
!       AEQM(I,2)=ZERO  
!       BEQM(I,2)=10.3*CAL
!       CEQM(I,2)=-2242.8*CAL     
!       I=IFE3O4
!       IMOX(I)=1
!       FMMOL(I)=231.5386*GRAM    
!       ROM(I)=5.18*1000.0
!       ROMLIQ(I)=4.725017173*1000.0
!       AEQM(I,1)=ZERO  
!       BEQM(I,1)=48.60305344*CAL 
!       CEQM(I,1)=-14483.70992*CAL
!       AEQM(I,2)=ZERO  
!       BEQM(I,2)=51.0*CAL
!       CEQM(I,2)=14034.0*CAL     
!       I=IZR 
!       IMOX(I)=0
!       FMMOL(I)=91.22*GRAM
!       ROM(I)=6.50*1000.0
!       ROMLIQ(I)=6.06*1000.0     
!       AEQM(I,1)=ZERO  
!       BEQM(I,1)=7.903221392*CAL 
!       CEQM(I,1)=-2.356345458D+03*CAL      
!       AEQM(I,2)=ZERO  
!       BEQM(I,2)=8.0*CAL
!       CEQM(I,2)=1476.0*CAL      
!       I=IU  
!       IMOX(I)=0
!       FMMOL(I)=238.03*GRAM      
!       ROM(I)=19.0*1000.0
!       ROMLIQ(I)=17.905*1000.0   
!       AEQM(I,1)=ZERO  
!       BEQM(I,1)=10.59764196*CAL 
!       CEQM(I,1)=-3.15968695D+03*CAL
!       AEQM(I,2)=ZERO  
!       BEQM(I,2)=11.45*CAL
!       CEQM(I,2)=-2.32125D+03*CAL
!       I=IB4C
!       IMOX(I)=0
!       FMMOL(I)=55.25515*GRAM    
!       ROM(I)=2.52*1000.0
!       ROMLIQ(I)=2.395891505*1000.0
!       AEQM(I,1)=1.327567331D-02 
!       BEQM(I,1)=84.7386562      
!       CEQM(I,1)=-2.644495038D+04
!       AEQM(I,2)=ZERO  
!       BEQM(I,2)=135.98
!       CEQM(I,2)=37486.86
!       I=IB  
!       IMOX(I)=0
!       FMMOL(I)=10.811*GRAM      
!       ROM(I)=2.37*1000.0
!       ROMLIQ(I)=2.08*1000.0     
!       AEQM(I,1)=8.148631809D-04*CAL
!       BEQM(I,1)=4.081629368*CAL 
!       CEQM(I,1)=-1.289373773D+03*CAL      
!       AEQM(I,2)=ZERO  
!       BEQM(I,2)=7.5*CAL
!       CEQM(I,2)=7159.0*CAL      
!       I=ICR2O3
!       IMOX(I)=1
!       FMMOL(I)=151.9902*GRAM    
!       ROM(I)=5.21*1000.0
!       ROMLIQ(I)=4.941650398*1000.0
!       AEQM(I,1)=5.467302068D-03 
!       BEQM(I,1)=115.0902254     
!       CEQM(I,1)=-3.480015791D+04
!       AEQM(I,2)=ZERO  
!       BEQM(I,2)=156.9 
!       CEQM(I,2)=23117.3
!       I=INIO
!       IMOX(I)=1
!       FMMOL(I)=74.7094*GRAM     
!       ROM(I)=6.67*1000.0
!       ROMLIQ(I)=6.043098796*1000.0
!       AEQM(I,1)=9.374674435D-04*CAL
!       BEQM(I,1)=11.50727196*CAL 
!       CEQM(I,1)=-3.512417903D+03*CAL      
!       AEQM(I,2)=ZERO  
!       BEQM(I,2)=14.30956023*CAL 
!       CEQM(I,2)=7046.353151*CAL 
!       I=IUO2
!       IMOX(I)=1
!       FMMOL(I)=270.0288*GRAM    
!       ROM(I)=10.97*1000.0
!       ROMLIQ(I)=8.739*1000.0    
!       AEQM(I,1)=1.816681331D-02 
!       BEQM(I,1)=40.90328306     
!       CEQM(I,1)=-8.077459866D+03
!       AEQM(I,2)=ZERO  
!       BEQM(I,2)=130.95
!       CEQM(I,2)=-30911.0
!       I=IZRO2
!       IMOX(I)=1
!       FMMOL(I)=123.2188*GRAM    
! C$$$$$ZrO2 SOLIDUS/LIQUIDUS DENSITIES SWITCHED ON 1-8-96 BY MTF.
! C$$$$$ZrO2 DENSITY AT LIQUIDUS IS ACTUALLY GREATER THAN SOLIDUS.
!       ROM(I)=5.8*1000.0      
!       ROMLIQ(I)=5.9914*1000.0      
!       AEQM(I,1)=ZERO  
!       BEQM(I,1)=0.6937265932D+03*FMMOL(I) 
!       CEQM(I,1)=-2.068345838D+05*FMMOL(I) 
!       AEQM(I,2)=ZERO  
!       BEQM(I,2)=0.815D+03*FMMOL(I)
!       CEQM(I,2)=1.39D+05*FMMOL(I)
! C.....INPUT B2O3 DATA, UNLESS A SIMULANT MATERIAL IS BEING USED,
! C.....IN WHICH CASE OVERWRITE THIS DATA.
!       I=IB2O3
!       IMOX(I)=1
!       IF(NOVHT.EQ.0) GO TO 6443
! C.....PROPERTY DATA REASSIGNED HERE.
!       FMMOL(I)=XMOLOV*GRAM     
!       ROM(I)=ROVS
!       ROMLIQ(I)=ROVL
!       AEQM(I,1)=ZERO
!       BEQM(I,1)=COVS*FMMOL(I)
!       CEQM(I,1)=-TREF*COVS*FMMOL(I)
!       AEQM(I,2)=ZERO  
!       BEQM(I,2)=COVL*FMMOL(I)
!       CEQM(I,2)=(COVS*(TFOS-TREF)+DHSOV-COVL*TFOL)*FMMOL(I)
!       GO TO 6444
! C.....ACTUAL B2O3 DATA DONE HERE.
!  6443 CONTINUE 
!       FMMOL(I)=69.6202*GRAM     
!       ROM(I)=1.812*1000.0
!       ROMLIQ(I)=ROM(I)
!       AEQM(I,1)=4.288754823D-02 
!       BEQM(I,1)=44.67660527     
!       CEQM(I,1)=-1.71327508D+04 
!       AEQM(I,2)=ZERO  
!       BEQM(I,2)=129.704
!       CEQM(I,2)=-32118.922      
!  6444 CONTINUE
! C.....ASSIGN PROPERTIES FOR CARBON STEEL OR SIMULANT, 
! C.....AS APPROPRIATE. 
!       IF(NSTEEL.EQ.0.AND.ICTC.LE.4) GO TO 2400 
!       IF(NSIMST.EQ.0) GO TO 2400
!       TSTLS=TSIS
!       TSTLL=TSIL
!       ESTLS=CSIS*(TSTLS-298.15) 
!       ESTLL=ESTLS+DHSIL
!       DFUSST=DHSIL
!       CSTLL=CSIL
!       GO TO 2401
!  2400 CONTINUE
!       TSTLS=1810.D0   
!       TSTLL=1811.D0   
!       ESTLS=1.0454D6  
!       ESTLL=1.293D6   
!       DFUSST=2.476D5  
!       CSTLL=835.D0    
!  2401 CONTINUE
! C.....ASSIGN CONCRETE AND SLAG W/O'S, AND CONCRETE MOLE %'S, FOR THE    
! C.....VARIOUS TYPES OF CONCRETE.
!       DO 5807 KTP=1,NMATC
!       XMOL(KTP)=0.D0  
!  5807 CONTINUE
!       IF(ICTC.EQ.4) GO TO 1135  
!       ICTYPE=ICTC     
!       IF(ICTC.EQ.5) ICTYPE=1
!       GO TO(1131,1132,1133),ICTYPE
!  1131 CONTINUE
!       XFRGAS=.28     
!       TCS=1393.D0     
!       TCL=1568.D0     
!       WPCC=.3425      
!       WPM=0.1164      
!       WPA=.0359
!       WPCS=0.5050     
!       XFH2OU=0.0429  
!       XFCAOH=0.0840   
!       XFMGCA=0.4579   
!       XFCACO=.0093    
!       XMOL(ISIO2)=.3821
!       XMOL(IMGO)=.0000
!       XMOL(ICAO)=.0857
!       XMOL(IFEO)=.0000
!       XMOL(IAL2O3)=.0281
!       XMOL(INA2O)=.0141
!       XMOL(ICK2O)=0.0051
!       XMOL(ITIO2)=.0014
!       XMOL(ICAOH2)=.0885
!       XMOL(ICACO3)=.0073
!       XMOL(IMCCO3)=.1938
!       XMOL(IFH2O)=.1858
!       XMOL(IVH2O)=0.
!       GO TO 1134      
!  1132 CONTINUE
!       XFRGAS=.0791
!       TCS=1403.D0     
!       TCL=1523.D0     
!       WPCC=0.1227     
!       WPM=0.0057
!       WPA=0.0276
!       WPCS=.8440      
!       XFH2OU=.0504  
!       XFCAOH=0.0844   
!       XFMGCA=.0215    
!       XFCACO=0.0000  
!       XMOL(ISIO2)=.6574
!       XMOL(ICAO)=.0691
!       XMOL(IAL2O3)=.0222
!       XMOL(ICK2O)=.0084
!       XMOL(IFE2O3)=.0035
!       XMOL(ITIO2)=.0057
!       XMOL(IMGO)=.0034
!       XMOL(INA2O)=.0064
!       XMOL(ICAOH2)=.0629
!       XMOL(IMCCO3)=.0064
!       XMOL(IFH2O)=.0154
!       XMOL(IVH2O)=.00
!       GO TO 1134      
!  1133 CONTINUE
!       XFRGAS=.406
!       TCS=1495.D0     
!       TCL=2577.D0     
!       WPCC=0.7066     
!       WPM=0.1114      
!       WPA=0.0244
!       WPCS=0.1577     
!       XFH2OU=0.0503   
!       XFCAOH=0.0843   
!       XFMGCA=.3424    
!       XFCACO=.4024   
!       XMOL(INA2O)=.0000
!       XMOL(ICK2O)=.00362
!       XMOL(IMGO)=.0000
!       XMOL(ICAO)=.0611
!       XMOL(IAL2O3)=.0159
!       XMOL(ISIO2)=.0993
!       XMOL(ITIO2)=.00107
!       XMOL(IFE2O3)=.0043
!       XMOL(ICAOH2)=.0946
!       XMOL(ICACO3)=.3341
!       XMOL(IMCCO3)=.1542
!       XMOL(IVH2O)=.2318
!       XMOL(IFH2O)=.0
!       GO TO 1134      
!  1135 CONTINUE
!       ICTYPE=1
! C.....USER-SPECIFIED CONCRETE INTIALIZED BELOW. FIRST FIND SLAG
! C.....DENSITY AND VOLUME FRACTIONS OF SLAG CONSTITUENTS USING THE
! C.....BRUTE FORCE TECHNIQUE.    
!       DENOM=XWTC(6)/FMMOL(ISIO2)+XWTC(7)/FMMOL(ICAO)+XWTC(8)/FMMOL(IMGO)
!      1+XWTC(9)/FMMOL(IAL2O3)    
!       FMSI=XWTC(6)/(FMMOL(ISIO2)*DENOM)   
!       FMCA=XWTC(7)/(FMMOL(ICAO)*DENOM)    
!       FMMG=XWTC(8)/(FMMOL(IMGO)*DENOM)    
!       FMAL=XWTC(9)/(FMMOL(IAL2O3)*DENOM)  
!       DENOM2=(FMSI*FMMOL(ISIO2))/ROMLIQ(ISIO2)      
!      1+(FMCA*FMMOL(ICAO))/ROMLIQ(ICAO)    
!      2+(FMMG*FMMOL(IMGO))/ROMLIQ(IMGO)    
!      3+(FMAL*FMMOL(IAL2O3))/ROMLIQ(IAL2O3)
!       WPCS=(FMSI*FMMOL(ISIO2))/(ROMLIQ(ISIO2)*DENOM2)
!       WPA=(FMAL*FMMOL(IAL2O3))/(ROMLIQ(IAL2O3)*DENOM2)
!       WPM=(FMMG*FMMOL(IMGO))/(ROMLIQ(IMGO)*DENOM2)  
!       WPCC=(FMCA*FMMOL(ICAO))/(ROMLIQ(ICAO)*DENOM2) 
! C.....SET THE TOTAL GAS FRACTION (WT%) IN THE INITIAL CONCRETE.
!       XFRGAS=0.01D0*(XWTC(1)+XWTC(2))
! C.....DECOMPOSE CO2 & H2O INTO FREE WATER, CAOH2, CACO3, AND DOLOMITE.  
!       XHSAVE=XWTC(2)  
!       HSUMT=ZERO      
!       DO 61 K=1,14    
!       IF(K.EQ.1) XML=XMCO2      
!       IF(K.EQ.2) XML=FMMOL(K+2) 
!       IF(K.EQ.3) XML=FMMOL(K+3) 
!       IF(K.GE.4) XML=FMMOL(K+4) 
!       HSUMT=HSUMT+XWTC(K)/XML   
!    61 CONTINUE
!       DO 62 K=1,14    
!       IF(K.EQ.1) XML=XMCO2      
!       IF(K.EQ.2) XML=FMMOL(K+2) 
!       IF(K.EQ.3) XML=FMMOL(K+3) 
!       IF(K.GE.4) XML=FMMOL(K+4) 
!       XWTC(K)=XWTC(K)/(HSUMT*XML)
!    62 CONTINUE
! C.....PUT H2O INTO FREE WATER AND CAOH2; BOUND WATER (CAOH2) IS ASSUMED
! C.....TO AMOUNT TO 2 WT% OF THE H2O INVENTORY.
!       IF(XWTC(2).EQ.ZERO) GO TO 63
!       FRACF=TWO/XHSAVE
!       IF(FRACF.GT.ONE) FRACF=ONE
!       FARG=XWTC(7)/XWTC(2)
!       FRACF=DMIN1(FRACF,FARG)
!       XMOL(ICAOH2)=FRACF*XWTC(2)    
!       IF(XMOL(ICAOH2).GT.XWTC(7)) XMOL(ICAOH2)=XWTC(7)
!       XWTC(7)=XWTC(7)-XMOL(ICAOH2)
!       XMOL(IFH2O)=(ONE-FRACF)*XWTC(2)
!       XMOL(IVH2O)=0.   
!    63 CONTINUE
! C.....SO FAR, H2O HAS BEEN ASSIGNED TO FREE WATER AND CAOH2, AND
! C.....THE CAO INVENTORY HAS BEEN DEFICITED THE MOLAR AMOUNT OF CAOH2    
! C.....CREATED.  NOW PARTITION CO2 INVENTORY INTO DOLOMITE AND CACO3.    
!       XMIN=DMIN1(XWTC(7),XWTC(8))
!       XREQCO=TWO*XMIN 
!       IF(XWTC(1).LT.XREQCO) XREQCO=XWTC(1)
!       XMIN=HALF*XREQCO
!       XMOL(IMCCO3)=XMIN
!       XWTC(1)=XWTC(1)-XREQCO    
!       XWTC(7)=XWTC(7)-XMIN      
!       XWTC(8)=XWTC(8)-XMIN      
! C.....PUT BALANCE OF CO2 INTO CALCIUM CARBONATE.    
!       XMIN=DMIN1(XWTC(1),XWTC(7))
!       XMOL(ICACO3)=XMIN
!       XWTC(7)=XWTC(7)-XMIN      
!       XWTC(1)=XWTC(1)-XMIN      
! C.....ASSIGN REMAINING DATA TO XMOL(I) VECTOR & RENORMALIZE MOLE
! C.....FRACTIONS.      
!       DO 65 K=6,18    
!       IF(K.EQ.7) GO TO 65
!       KAS=K-3
!       IF(K.GT.6) KAS=K-4
!       XMOL(K)=XWTC(KAS)
!    65 CONTINUE
!       HSUMT=0.D0      
!       DO 66 K=1,NMATC 
!       HSUMT=HSUMT+XMOL(K)
!    66 CONTINUE
!       DO 67 K=1,NMATC 
!       XMOL(K)=XMOL(K)/HSUMT     
!    67 CONTINUE
! C.....FIND WEIGHT FRACTIONS H2O, CAOH2, CACO3, AND MGCACO3 IN CONCRETE. 
!       HMOLS=ZERO      
!       DO 71 K=1,NMATC 
!       HMOLS=HMOLS+XMOL(K)*FMMOL(K)
!    71 CONTINUE
!       XFH2OU=((XMOL(IFH2O)+XMOL(IVH2O))*FMMOL(IFH2O))/HMOLS   
!       XFCAOH=(XMOL(ICAOH2)*FMMOL(ICAOH2))/HMOLS     
!       XFMGCA=(XMOL(IMCCO3)*FMMOL(IMCCO3))/HMOLS     
!       XFCACO=(XMOL(ICACO3)*FMMOL(ICACO3))/HMOLS     
!  1134 CONTINUE
! C.....DEFINE THE FACTORS EMPLOYED IN THE SHAW VISCOSITY METHODOLOGY     
! C.....FOR OXIDE MIXTURES CONTAINING SILICA.
!       NMATFI=8
!       NMATFF=28
!       DO 119 I=1,NMATFF
!       XVISC(I)=ZERO   
!       SVISC(I)=ZERO   
!   119 CONTINUE
!       I=IAL2O3
!       XVISC(I)=2.0    
!       SVISC(I)=6.7    
!       I=ITIO2
!       XVISC(I)=1.0    
!       SVISC(I)=4.5    
!       I=IUO2
!       XVISC(I)=1.0    
!       SVISC(I)=4.5    
!       I=IFEO
!       XVISC(I)=1.0    
!       SVISC(I)=3.4    
!       I=IZRO2
!       XVISC(I)=1.0    
!       SVISC(I)=4.5    
!       I=ICR2O3
!       XVISC(I)=2.0    
!       SVISC(I)=3.4    
!       I=IMGO
!       XVISC(I)=1.0    
!       SVISC(I)=3.4    
!       I=ICAO
!       XVISC(I)=1.0    
!       SVISC(I)=4.5    
!       I=IFE2O3
!       XVISC(I)=2.0    
!       SVISC(I)=3.4    
! C.....CALCULATE THE SPECIFIC ENTHALPIES AT THE LIQUIDUS, THE SOLIDUS,   
! C.....AND THE TEMPERATURE AT WHICH CONCRETE DECOMPOSITION IS COMPLETE.  
!       AL=ZERO
!       BL=ZERO
!       CL=ZERO
!       AS=ZERO
!       BS=ZERO
!       CS=ZERO
!       DNOM=ZERO
!       RMASSN=ZERO     
!       RMASSD=ZERO     
!       DO 199 I=1,NMATC
!       XYI=XMOL(I)     
!       IF (I .EQ. ICACO3) XYI=ZERO
!       IF (I .EQ. ICK2O) XYI=ZERO
!       IF (I .EQ. IMCCO3) XYI=ZERO
!       IF (I .EQ. ICAOH2) XYI=ZERO
!       IF (I .EQ. IFH2O) XYI=ZERO
!       IF (I .EQ. ICAO) XYI=XYI+XMOL(ICACO3)+XMOL(IMCCO3)      
!      1+XMOL(ICAOH2)   
!       IF (I .EQ. IVK2O) XYI=XYI+XMOL(ICK2O)
!       IF (I .EQ. IMGO) XYI=XYI+XMOL(IMCCO3)
!       IF (I .EQ. IVH2O) XYI=XYI+XMOL(IFH2O)
!       AL=AL+XYI*AEQM(I,2)
!       BL=BL+XYI*BEQM(I,2)
!       CL=CL+XYI*CEQM(I,2)
!       AS=AS+XYI*AEQM(I,1)
!       BS=BS+XYI*BEQM(I,1)
!       CS=CS+XYI*CEQM(I,1)
!       DNOM=DNOM+XYI*FMMOL(I)    
!       RMASSN=RMASSN+XYI*FMMOL(I)
!       RMASSD=RMASSD+XMOL(I)*FMMOL(I)      
!   199 CONTINUE
!       RDNOM=ONE/DNOM  
!       AL=AL*RDNOM     
!       BL=BL*RDNOM     
!       CL=CL*RDNOM     
!       AS=AS*RDNOM     
!       BS=BS*RDNOM     
!       CS=CS*RDNOM     
!       ECL=CL+TCL*(BL+TCL*AL)    
!       CCL=BL+TWO*TCL*AL
!       ECS=CS+TCS*(BS+TCS*AS)    
!       CCS=BS+TWO*TCS*AS
!       ECAL=CS+TCAL*(BS+TCAL*AS) 
!       RMASS=RMASSN/RMASSD
!       RMASSL=RMASS    
! C.....CALCULATE THE SPECIFIC ENTHALPIES AT THE TEMPERATURE AT WHICH     
! C.....DECOMPOSITION OF CACO3 BEGINS AND THE TEMPERATURE AT WHICH
! C.....DECOMPOSITION OF MGCA(CO3)2 IS COMPLETE.      
!       A=ZERO
!       B=ZERO
!       C=ZERO
!       DNOM=ZERO
!       DO 299 I=1,NMATC
!       XYI=XMOL(I)     
!       IF (I .EQ. IMCCO3) XYI=ZERO
!       IF (I .EQ. ICAOH2) XYI=ZERO
!       IF (I .EQ. IFH2O) XYI=ZERO
!       IF (I .EQ. ICAO) XYI=XYI+XMOL(IMCCO3)+XMOL(ICAOH2)      
!       IF (I .EQ. IMGO) XYI=XYI+XMOL(IMCCO3)
!       IF (I .EQ. IVH2O) XYI=XYI+XMOL(IFH2O)
!       A=A+XYI*AEQM(I,1)
!       B=B+XYI*BEQM(I,1)
!       C=C+XYI*CEQM(I,1)
!       DNOM=DNOM+XYI*FMMOL(I)    
!   299 CONTINUE
!       RDNOM=ONE/DNOM  
!       A=A*RDNOM
!       B=B*RDNOM
!       C=C*RDNOM
!       ECAS=C+TCAS*(B+TCAS*A)    
!       EMCAL=C+TMCAL*(B+TMCAL*A) 
! C.....CALCULATE THE SPECIFIC ENTHALPIES AT THE TEMPERATURE AT WHICH     
! C.....DECOMPOSITION OF MGCA(CO3)2 BEGINS AND THE TEMPERATURE AT
! C.....WHICH DECOMPOSTION OF CA(OH)2 IS COMPLETE.    
!       A=ZERO
!       B=ZERO
!       C=ZERO
!       DNOM=ZERO
!       DO 399 I=1,NMATC
!       XYI=XMOL(I)     
!       IF (I .EQ. ICAOH2) XYI=ZERO
!       IF (I .EQ. IFH2O) XYI=ZERO
!       IF (I .EQ. ICAO) XYI=XYI+XMOL(ICAOH2)
!       IF (I .EQ. IVH2O) XYI=XYI+XMOL(IFH2O)
!       A=A+XYI*AEQM(I,1)
!       B=B+XYI*BEQM(I,1)
!       C=C+XYI*CEQM(I,1)
!       DNOM=DNOM+XYI*FMMOL(I)    
!   399 CONTINUE
!       RDNOM=ONE/DNOM  
!       A=A*RDNOM
!       B=B*RDNOM
!       C=C*RDNOM
!       EMCAS=C+TMCAS*(B+TMCAS*A) 
!       EBWL=C+TBWL*(B+TBWL*A)    
! C.....CALCULATE THE SPECIFIC ENTHALPIES AT THE TEMPERATURE AT 
! C.....WHICH DECOMPOSTION OF CA(OH)2 BEGINS AND THE RELEASE OF 
! C.....FREE WATER IS COMPLETE    
!       A=ZERO
!       B=ZERO
!       C=ZERO
!       DNOM=ZERO
!       DO 499 I=1,NMATC
!       XYI=XMOL(I)     
!       IF (I .EQ. IFH2O) XYI=ZERO
!       IF (I .EQ. IVH2O) XYI=XYI+XMOL(IFH2O)
!       A=A+XYI*AEQM(I,1)
!       B=B+XYI*BEQM(I,1)
!       C=C+XYI*CEQM(I,1)
!       DNOM=DNOM+XYI*FMMOL(I)    
!   499 CONTINUE
!       RDNOM=ONE/DNOM  
!       A=A*RDNOM
!       B=B*RDNOM
!       C=C*RDNOM
!       EBWS=C+TBWS*(B+TBWS*A)    
!       EFWL=C+TFWL*(B+TFWL*A)    
! C.....CALCULATE THE SPECIFIC ENTHALPY AT THE TEMPERATURE AT WHICH
! C.....RELEASE OF FREE WATER BEGINS.
!       A=ZERO
!       B=ZERO
!       C=ZERO
!       DNOM=ZERO
!       DO 599 I=1,NMATC
!       XYI=XMOL(I)     
!       A=A+XYI*AEQM(I,1)
!       B=B+XYI*BEQM(I,1)
!       C=C+XYI*CEQM(I,1)
!       DNOM=DNOM+XYI*FMMOL(I)    
!   599 CONTINUE
!       RDNOM=ONE/DNOM  
!       A=A*RDNOM
!       B=B*RDNOM
!       C=C*RDNOM
!       EFWS=C+TFWS*(B+TFWS*A)    
! C.....ASSIGN BASEMAT PROPERTIES ACCORDING TO VECTOR NOTATION. 
! C.....FIRST SET THE CONCRETE DECOMPSITION TEMPERATURE ACCORDING TO 
! C.....THE CONCRETE TYPE....
!       IF(ICTC.NE.1) GO TO 2131
!       TSCS(1)=1393.0
!       GO TO 2135
!  2131 CONTINUE
!       IF(ICTC.NE.2) GO TO 2132
!       TSCS(1)=1403.0
!       GO TO 2135
!  2132 CONTINUE
!       IF(ICTC.NE.3) GO TO 2133
!       TSCS(1)=1495.0
!       GO TO 2135
!  2133 CONTINUE
!       TSCS(1)=TDC
!  2135 CONTINUE
!       TSCS(2)=TSTLS   
!       TSCL(1)=TCL     
!       TSCL(2)=TSTLL   
!       ESCS(1)=ECS     
!       ESCS(2)=ESTLS   
!       ESCL(1)=ECL     
!       ESCL(2)=ESTLL   
!       CCSS(1)=CCS     
!       CCSS(2)=ESTLS/(TSTLS-298.15D0)      
!       CCSL(1)=CCL     
!       CCSL(2)=CSTLL   
!       CALL DENSS(TSTLS,ROSTLS)  
!       CALL DENSS(TSTLL,ROSTLL)  
!       DO 88 K=1,16    
!       XWTSS(K)=0.D0   
!    88 CONTINUE
!       XWTSS(2)=1.0    
!       IF(NSTEEL.EQ.0.AND.ICTC.LE.4) GO TO 2405 
!       IF(NSIMST.EQ.0) GO TO 2405
!       DO 2404 K=1,16
!       XWTSS(K)=XCSI(K)
!  2404 CONTINUE
!  2405 CONTINUE
!       RETURN
!       END   
! C...................................................................... 
! C.....THIS ROUTINE CALCULATES THE INITIAL CONCRETE DENSITY.   
! C...................................................................... 
!       SUBROUTINE DENSC
!       IMPLICIT DOUBLE PRECISION(A-H,O-Z)
!       COMMON/PROPI/ NMATC,NMATFI,NMATFF,ICAOH2,ICACO3,IMCCO3,IFH2O,     
!      1IVH2O,ICK2O,IVK2O,INA2O,ITIO2,ISIO2,ICAO,IMGO,IAL2O3,IFEO,IFE2O3, 
!      2IFE3O4,IFE,ICR,INI,IZR,IU,IB4C,IB,ICR2O3,INIO,IUO2,IZRO2,IB2O3,   
!      3NBCINT(999),NODES(999),NUMNOD,IMOX(28),IBAS,ILCS,ILL,NACTIV(999),     
!      4NBFRZM,NBFRZO,NABLFM,NDRNFM,NTYPMT(999,999),NDOOR,NBMADJ,NUMSHV,   
!      5NBSHL(999),NCRSTS(999),NUMSHH,NSKIPE,NACSH,NWAT,NPEND,NBCBOT,
!      6NCRTOP,NBFZOE,NBFZME,NGEOM,NL(999,999),NFRSCT,NLOGSH,NADAB,NINVIS,
!      7NSIMST,NSTEEL,NOVHT,NOVTK,NOVUM,NOVEM,NOVSIG,NPLLOC(999),NBPL,
!      8IXP(999),IYP(999),NVTPE,NSOLTP,NSOLF,NINTF,IFLGA(999),ICTYPE,ICTC,
!      9NPOURS,NSMP,NPED,NDOR,NSHL,NANULS,NSMPCV,NBOIL,NSWALL,NMVER,
!      1NCRTEM,NTHINC,NVELP,NITMAX,NENMAX,NPRINT,NPFREQ,NTIMSPC,NPLFREQ,
!      2NPLTOT,NJET,NJETP,NJETD,NJETND,NODCAP,NVELPW,NITMAXW,NENMXW,
!      3IFLGJ(999),NBEDCQ,ISHELE
!       COMMON/PRINTR/ QFEH2O,QCRH2O,QZRH2O,QFECO2,QCRCO2,QZRCO2,
!      4XFH2OU,XFCAOH,XFMGCA,XFCACO,XZRMRE,XFEMRE,XCRMRE,XZRORE,XFEORE,   
!      5XCRORE,XMH2O,XMCO2,XMCACO,XMMGCA,XMCAOH,TFWL,TFWS,TBWL,TBWS,      
!      6TMCAL,TMCAS,TCAL,TCAS,TFOS,TFOL,TFMS,TFML,XVISC(28),SVISC(28),    
!      7XMOL(28),FMMOL(28),ROM(28),ROMLIQ(28),AEQM(28,2),BEQM(28,2),
!      8CEQM(28,2),ECL,ECS,ECAL,ECAS,EMCAL,EMCAS,EBWL,EBWS,EFWL,EFWS,    
!      9STEF,GRAV,PI,TCS,TCL,CCL,CCS,RMASSL,WPCC,WPM,WPA,WPCS,ROC,RMASSS,   
!      1ANGSHL,RSLAGL,RSLAGS,HNODT,VFAV,VGAV,QXAV,XWTSS(16),  
!      2TSCS(2),TSCL(2),ESCS(2),ESCL(2),CCSS(2),CCSL(2),ROSTLS,ROSTLL,
!      3XFRGAS,HMINC,TST(99),TSTOP(99),AINTP(99),BINTP(99),DRATIO(999),
!      4XBCN(999),XDCN(999),XBLT(15),ADEC(99),BDEC(99),APOUR(16,99),
!      5BPOUR(16,99),XWTC(14),BWIDTH,THCKCV,TMBOIL,TEBOIL,VFINT,ANGFAN,
!      6ALPMAX,THSHL,XFCABL,XNDMIN,DVMX,DAVMX,DEAVMX,DEMX,TDC,QDCU,QDCUO2,
!      7TSINJ,EINJ,DTINJ,TKINJ,ROEV,CPINJ,SURFT,VSINJ,EMINJ,TSINJO,EINJO,
!      8DTINJO,TKINJO,ROEVO,CPINJO,SURFTO,VSINJO,EMINJO,XLEADE,ARSUM,
!      9DBUBOX,UTRISE,TREMSH,DJET,DFALL,WEBER,FROUDE,XPSAITO,XPEPSTN,
!      1FRAG,XMBEDT,XMBED(16),XLPENT,XLPENA,UJET,UFALL,HFALL,ERPV,
!      2TJETT(99),DJETT(99),HWATP,XDOTJET,DVMXW,DAVMXW,DEMXW,DEAVMXW,
!      3QJETW,XSTMJF,TINTSJF,ESAT,DRDOOR,DRANL,EI,QDCBUO2,QDCBU,
!      4EBEDS,EBEDB
!       DATA ZERO / 0.0 /
!       FNUM=ZERO
!       DNOM=ZERO
!       DO 199 I=1,NMATC
!       XMI=XMOL(I)*FMMOL(I)      
!       FNUM=FNUM+XMI   
!       DNOM=DNOM+XMI/ROM(I)      
!   199 CONTINUE
!       ROC=FNUM/DNOM   
!       DENSL=WPCC*ROMLIQ(ICAO)+WPM*ROMLIQ(IMGO)+WPA*ROMLIQ(IAL2O3)+WPCS*R
!      1OMLIQ(ISIO2)    
!       DENSS=WPCC*ROM(ICAO)+WPM*ROM(IMGO)+WPA*ROM(IAL2O3)+WPCS*ROM(ISIO2)
!       RSLAGL=DENSL/ROC
!       RSLAGS=DENSS/ROC
!       RETURN
!       END   
! C...................................................................... 
! C.....THIS ROUTINE CALCULATES THE CONCRETE THERMAL CONDUCTIVITY
! C.....AS A FUNCTION OF TEMPERATURE.
! C...................................................................... 
!       SUBROUTINE CONDC(TPASS,I,FK,NPASS)  
!       IMPLICIT DOUBLE PRECISION(A-H,O-Z)
!       COMMON/PROPI/ NMATC,NMATFI,NMATFF,ICAOH2,ICACO3,IMCCO3,IFH2O,     
!      1IVH2O,ICK2O,IVK2O,INA2O,ITIO2,ISIO2,ICAO,IMGO,IAL2O3,IFEO,IFE2O3, 
!      2IFE3O4,IFE,ICR,INI,IZR,IU,IB4C,IB,ICR2O3,INIO,IUO2,IZRO2,IB2O3,   
!      3NBCINT(999),NODES(999),NUMNOD,IMOX(28),IBAS,ILCS,ILL,NACTIV(999),     
!      4NBFRZM,NBFRZO,NABLFM,NDRNFM,NTYPMT(999,999),NDOOR,NBMADJ,NUMSHV,   
!      5NBSHL(999),NCRSTS(999),NUMSHH,NSKIPE,NACSH,NWAT,NPEND,NBCBOT,
!      6NCRTOP,NBFZOE,NBFZME,NGEOM,NL(999,999),NFRSCT,NLOGSH,NADAB,NINVIS,
!      7NSIMST,NSTEEL,NOVHT,NOVTK,NOVUM,NOVEM,NOVSIG,NPLLOC(999),NBPL,
!      8IXP(999),IYP(999),NVTPE,NSOLTP,NSOLF,NINTF,IFLGA(999),ICTYPE,ICTC,
!      9NPOURS,NSMP,NPED,NDOR,NSHL,NANULS,NSMPCV,NBOIL,NSWALL,NMVER,
!      1NCRTEM,NTHINC,NVELP,NITMAX,NENMAX,NPRINT,NPFREQ,NTIMSPC,NPLFREQ,
!      2NPLTOT,NJET,NJETP,NJETD,NJETND,NODCAP,NVELPW,NITMAXW,NENMXW,
!      3IFLGJ(999),NBEDCQ,ISHELE
!       COMMON/PRINTR/ QFEH2O,QCRH2O,QZRH2O,QFECO2,QCRCO2,QZRCO2,
!      4XFH2OU,XFCAOH,XFMGCA,XFCACO,XZRMRE,XFEMRE,XCRMRE,XZRORE,XFEORE,   
!      5XCRORE,XMH2O,XMCO2,XMCACO,XMMGCA,XMCAOH,TFWL,TFWS,TBWL,TBWS,      
!      6TMCAL,TMCAS,TCAL,TCAS,TFOS,TFOL,TFMS,TFML,XVISC(28),SVISC(28),    
!      7XMOL(28),FMMOL(28),ROM(28),ROMLIQ(28),AEQM(28,2),BEQM(28,2),
!      8CEQM(28,2),ECL,ECS,ECAL,ECAS,EMCAL,EMCAS,EBWL,EBWS,EFWL,EFWS,    
!      9STEF,GRAV,PI,TCS,TCL,CCL,CCS,RMASSL,WPCC,WPM,WPA,WPCS,ROC,RMASSS,   
!      1ANGSHL,RSLAGL,RSLAGS,HNODT,VFAV,VGAV,QXAV,XWTSS(16),  
!      2TSCS(2),TSCL(2),ESCS(2),ESCL(2),CCSS(2),CCSL(2),ROSTLS,ROSTLL,
!      3XFRGAS,HMINC,TST(99),TSTOP(99),AINTP(99),BINTP(99),DRATIO(999),
!      4XBCN(999),XDCN(999),XBLT(15),ADEC(99),BDEC(99),APOUR(16,99),
!      5BPOUR(16,99),XWTC(14),BWIDTH,THCKCV,TMBOIL,TEBOIL,VFINT,ANGFAN,
!      6ALPMAX,THSHL,XFCABL,XNDMIN,DVMX,DAVMX,DEAVMX,DEMX,TDC,QDCU,QDCUO2,
!      7TSINJ,EINJ,DTINJ,TKINJ,ROEV,CPINJ,SURFT,VSINJ,EMINJ,TSINJO,EINJO,
!      8DTINJO,TKINJO,ROEVO,CPINJO,SURFTO,VSINJO,EMINJO,XLEADE,ARSUM,
!      9DBUBOX,UTRISE,TREMSH,DJET,DFALL,WEBER,FROUDE,XPSAITO,XPEPSTN,
!      1FRAG,XMBEDT,XMBED(16),XLPENT,XLPENA,UJET,UFALL,HFALL,ERPV,
!      2TJETT(99),DJETT(99),HWATP,XDOTJET,DVMXW,DAVMXW,DEMXW,DEAVMXW,
!      3QJETW,XSTMJF,TINTSJF,ESAT,DRDOOR,DRANL,EI,QDCBUO2,QDCBU,
!      4EBEDS,EBEDB
!       COMMON/DATSIMS/TSIS,TSIL,CSIS,CSIL,DHSIL,RSIS,RSIL,TKSIS,TKSIL,
!      1ESIL,XCSI(16)
!       IF(NPASS.NE.2) GO TO 50   
!       CALL CONDSS(TPASS,FK)     
!       GO TO 1000      
!    50 CONTINUE
!       IF (I .NE. ILCS) GO TO 100
! C.....LIMESTONE AGGREGATE-COMMON SAND CONCRETE.     
!       T=TPASS
!       IF (T .LT. 323.15) T=323.15
!       IF (T .GT. 1073.15) T=1073.15
!       FK=-21.79199644+T*(2.101773419D-01+T*(-7.243408353D-04  
!      1+T*(1.244588158D-06+T*(-1.138827956D-09+T*(5.298586227D-13
!      2+T*(-9.870915158D-17))))))
!       GO TO 1000      
!   100 IF (I .NE. IBAS) GO TO 200
! C.....BASALTIC AGGREGATE CONCRETE.
!       T=TPASS
!       IF (T .LT. 323.15) T=323.15
!       IF (T .GT. 1073.15) T=1073.15
!       FK=-21.79199644+T*(2.101773419D-01+T*(-7.243408353D-04  
!      1+T*(1.244588158D-06+T*(-1.138827956D-09+T*(5.298586227D-13
!      2+T*(-9.870915158D-17))))))
!       GO TO 1000      
!   200 IF (I .NE. ILL) GO TO 1000
! C.....LIMESTONE AGGREGATE-LIMESTONE SAND CONCRETE.  
!       T=TPASS
!       IF (T .LT. 323.15) T=323.15
!       IF (T .GT. 1073.15) T=1073.15
!       FK=-76.31908172+T*(7.924964490D-01+T*(-3.114942496D-03  
!      1+T*(6.199581270D-06+T*(-6.668224116D-09+T*(3.700987482D-12
!      2+T*(-8.324819186D-16))))))
!  1000 CONTINUE
!       RETURN
!       END   
! C...................................................................... 
! C.....GIVEN THE SPECIFIC ENTHALPY OF THE FLUID, THIS ROUTINE CALCULATES 
! C.....THE FLUID TEMPERATURE AND THE DERIVATIVE OF THE TEMPERATURE WITH  
! C.....RESPECT TO THE SPECIFIC ENTHALPY.  THE FLUID IS ASSUMED TO CONSIST
! C.....OF DISTINCT OXIDE AND METAL PHASES EACH OF WHICH IS CHARACTERIZED 
! C.....BY A SOLIDUS AND LIQUIDUS TEMPERATURE.  THE SOLIDUS AND LIQUIDUS  
! C.....TEMPERATURES ARE REQUIRED TO BE DISTINCT AND THE ENTHALPY OF EACH 
! C.....PHASE IS ASSUMED TO INCREASE LINEARLY BETWEEN THE CURRENT SOLIDUS 
! C.....AND LIQUIDUS VALUES.      
! C...................................................................... 
!       SUBROUTINE TEF(E,HIN,T,DTDE)
!       IMPLICIT DOUBLE PRECISION(A-H,O-Z)
!       DIMENSION HIN(28),HMOL(28)
!       COMMON/PROPI/ NMATC,NMATFI,NMATFF,ICAOH2,ICACO3,IMCCO3,IFH2O,     
!      1IVH2O,ICK2O,IVK2O,INA2O,ITIO2,ISIO2,ICAO,IMGO,IAL2O3,IFEO,IFE2O3, 
!      2IFE3O4,IFE,ICR,INI,IZR,IU,IB4C,IB,ICR2O3,INIO,IUO2,IZRO2,IB2O3,   
!      3NBCINT(999),NODES(999),NUMNOD,IMOX(28),IBAS,ILCS,ILL,NACTIV(999),     
!      4NBFRZM,NBFRZO,NABLFM,NDRNFM,NTYPMT(999,999),NDOOR,NBMADJ,NUMSHV,   
!      5NBSHL(999),NCRSTS(999),NUMSHH,NSKIPE,NACSH,NWAT,NPEND,NBCBOT,
!      6NCRTOP,NBFZOE,NBFZME,NGEOM,NL(999,999),NFRSCT,NLOGSH,NADAB,NINVIS,
!      7NSIMST,NSTEEL,NOVHT,NOVTK,NOVUM,NOVEM,NOVSIG,NPLLOC(999),NBPL,
!      8IXP(999),IYP(999),NVTPE,NSOLTP,NSOLF,NINTF,IFLGA(999),ICTYPE,ICTC,
!      9NPOURS,NSMP,NPED,NDOR,NSHL,NANULS,NSMPCV,NBOIL,NSWALL,NMVER,
!      1NCRTEM,NTHINC,NVELP,NITMAX,NENMAX,NPRINT,NPFREQ,NTIMSPC,NPLFREQ,
!      2NPLTOT,NJET,NJETP,NJETD,NJETND,NODCAP,NVELPW,NITMAXW,NENMXW,
!      3IFLGJ(999),NBEDCQ,ISHELE
!       COMMON/PRINTR/ QFEH2O,QCRH2O,QZRH2O,QFECO2,QCRCO2,QZRCO2,
!      4XFH2OU,XFCAOH,XFMGCA,XFCACO,XZRMRE,XFEMRE,XCRMRE,XZRORE,XFEORE,   
!      5XCRORE,XMH2O,XMCO2,XMCACO,XMMGCA,XMCAOH,TFWL,TFWS,TBWL,TBWS,      
!      6TMCAL,TMCAS,TCAL,TCAS,TFOS,TFOL,TFMS,TFML,XVISC(28),SVISC(28),    
!      7XMOL(28),FMMOL(28),ROM(28),ROMLIQ(28),AEQM(28,2),BEQM(28,2),
!      8CEQM(28,2),ECL,ECS,ECAL,ECAS,EMCAL,EMCAS,EBWL,EBWS,EFWL,EFWS,    
!      9STEF,GRAV,PI,TCS,TCL,CCL,CCS,RMASSL,WPCC,WPM,WPA,WPCS,ROC,RMASSS,   
!      1ANGSHL,RSLAGL,RSLAGS,HNODT,VFAV,VGAV,QXAV,XWTSS(16),  
!      2TSCS(2),TSCL(2),ESCS(2),ESCL(2),CCSS(2),CCSL(2),ROSTLS,ROSTLL,
!      3XFRGAS,HMINC,TST(99),TSTOP(99),AINTP(99),BINTP(99),DRATIO(999),
!      4XBCN(999),XDCN(999),XBLT(15),ADEC(99),BDEC(99),APOUR(16,99),
!      5BPOUR(16,99),XWTC(14),BWIDTH,THCKCV,TMBOIL,TEBOIL,VFINT,ANGFAN,
!      6ALPMAX,THSHL,XFCABL,XNDMIN,DVMX,DAVMX,DEAVMX,DEMX,TDC,QDCU,QDCUO2,
!      7TSINJ,EINJ,DTINJ,TKINJ,ROEV,CPINJ,SURFT,VSINJ,EMINJ,TSINJO,EINJO,
!      8DTINJO,TKINJO,ROEVO,CPINJO,SURFTO,VSINJO,EMINJO,XLEADE,ARSUM,
!      9DBUBOX,UTRISE,TREMSH,DJET,DFALL,WEBER,FROUDE,XPSAITO,XPEPSTN,
!      1FRAG,XMBEDT,XMBED(16),XLPENT,XLPENA,UJET,UFALL,HFALL,ERPV,
!      2TJETT(99),DJETT(99),HWATP,XDOTJET,DVMXW,DAVMXW,DEMXW,DEAVMXW,
!      3QJETW,XSTMJF,TINTSJF,ESAT,DRDOOR,DRANL,EI,QDCBUO2,QDCBU,
!      4EBEDS,EBEDB
!       COMMON/DEFUNC/CPLIQ,CPSOL,EFOS,EFOL,EFMS,EFML 
!       DATA ZERO / 0.0 /
!       DATA ONE / 1.0 /
!       DATA TWO / 2.0 /
!       DATA HALF / 0.5 /
!       DATA FOURTH / 0.25 /
!       NMATFI=8
!       NMATFF=28
! C.....DEFINE THE COLLAPSED DEPTHS OF THE FLUID MATERIALS HERE GIVEN THE 
! C.....COLLAPSED DEPTHS, HIN, CALCULATED BY THE FLUID DYNAMICS 
! C.....ROUTINES.
!       DNOM=ZERO
!       DO 399 I=NMATFI,NMATFF    
!       HMOL(I)=HIN(I)*ROMLIQ(I)/FMMOL(I)   
!       DNOM=DNOM+HMOL(I)
!   399 CONTINUE
!       RDNOM=ZERO      
!       IF (DNOM .NE. ZERO) RDNOM=ONE/DNOM  
!       DO 499 I=NMATFI,NMATFF    
!       HMOL(I)=HMOL(I)*RDNOM     
!   499 CONTINUE
! C.....TEMPERATURE TABLE
! C.....TFOL:  FLUID OXIDE PHASE LIQUIDUS   
! C.....TFOS:  FLUID OXIDE PHASE SOLIDUS    
! C.....TFML:  FLUID METAL PHASE LIQUIDUS   
! C.....TFMS:  FLUID METAL PHASE SOLIDUS    
! C.....CALCULATE THE FLUID SPECIFIC ENTHALPIES CORRESPONDING TO THE      
! C.....TEMPERATURES, TFOL, TFOS, TFML, AND TFMS.     
!       TT=TFOL
!       A=ZERO
!       B=ZERO
!       C=ZERO
!       DNOM=ZERO
!       DO 599 I=NMATFI,NMATFF    
!       HMOLI=HMOL(I)   
!       DNOM=DNOM+HMOLI*FMMOL(I)  
!       J=2
!       IF(IMOX(I).EQ.1) GO TO 598
!       IF(TT.GE.TFML) GO TO 598
!       J=1   
!       IF(TT.LE.TFMS) GO TO 598
!       ELI=CEQM(I,2)+TFML*(BEQM(I,2)+TFML*AEQM(I,2)) 
!       ESI=CEQM(I,1)+TFMS*(BEQM(I,1)+TFMS*AEQM(I,1)) 
!       B=B+((ELI-ESI)/(TFML-TFMS))*HMOLI   
!       C=C+(ESI-TFMS*((ELI-ESI)/(TFML-TFMS)))*HMOLI
!       GO TO 599
!   598 CONTINUE
!       A=A+HMOLI*AEQM(I,J)
!       B=B+HMOLI*BEQM(I,J)
!       C=C+HMOLI*CEQM(I,J)
!   599 CONTINUE
!       RDNOM=ZERO      
!       IF (DNOM .NE. ZERO) RDNOM=ONE/DNOM  
!       A=A*RDNOM
!       B=B*RDNOM
!       C=C*RDNOM
!       EFOL=C+TT*(B+TT*A)
!       DEOXL=B+TWO*A*TT
! C.....CALCULATE THE SPECIFIC ENTHALPY AT THE OXIDE SOLIDUS.
!       TT=TFOS
!       A=ZERO
!       B=ZERO
!       C=ZERO
!       DNOM=ZERO
!       DO 699 I=NMATFI,NMATFF    
!       HMOLI=HMOL(I)   
!       DNOM=DNOM+HMOLI*FMMOL(I)  
!       J=1
!       IF(IMOX(I).EQ.1) GO TO 698
!       IF(TT.LE.TFMS) GO TO 698
!       J=2   
!       IF(TT.GE.TFML) GO TO 698
!       ELI=CEQM(I,2)+TFML*(BEQM(I,2)+TFML*AEQM(I,2)) 
!       ESI=CEQM(I,1)+TFMS*(BEQM(I,1)+TFMS*AEQM(I,1)) 
!       B=B+((ELI-ESI)/(TFML-TFMS))*HMOLI   
!       C=C+(ESI-TFMS*((ELI-ESI)/(TFML-TFMS)))*HMOLI
!       GO TO 699
!   698 CONTINUE
!       A=A+HMOLI*AEQM(I,J)
!       B=B+HMOLI*BEQM(I,J)
!       C=C+HMOLI*CEQM(I,J)
!   699 CONTINUE
!       RDNOM=ZERO      
!       IF (DNOM .NE. ZERO) RDNOM=ONE/DNOM  
!       A=A*RDNOM
!       B=B*RDNOM
!       C=C*RDNOM
!       EFOS=C+TT*(B+TT*A)
!       DEOXS=B+TWO*A*TT
! C.....CALCULATE THE SPECIFIC ENTHALPY AT THE METAL LIQUIDUS.
!       TT=TFML
!       A=ZERO
!       B=ZERO
!       C=ZERO
!       DNOM=ZERO
!       DO 799 I=NMATFI,NMATFF    
!       HMOLI=HMOL(I)   
!       DNOM=DNOM+HMOLI*FMMOL(I)  
!       J=2
!       IF(IMOX(I).EQ.0) GO TO 798
!       IF(TT.GE.TFOL) GO  TO 798
!       J=1   
!       IF(TT.LE.TFOS) GO TO 798
!       ELI=CEQM(I,2)+TFOL*(BEQM(I,2)+TFOL*AEQM(I,2)) 
!       ESI=CEQM(I,1)+TFOS*(BEQM(I,1)+TFOS*AEQM(I,1)) 
!       B=B+((ELI-ESI)/(TFOL-TFOS))*HMOLI   
!       C=C+(ESI-TFOS*((ELI-ESI)/(TFOL-TFOS)))*HMOLI
!       GO TO 799
!   798 CONTINUE
!       A=A+HMOLI*AEQM(I,J)
!       B=B+HMOLI*BEQM(I,J)
!       C=C+HMOLI*CEQM(I,J)
!   799 CONTINUE
!       RDNOM=ZERO      
!       IF (DNOM .NE. ZERO) RDNOM=ONE/DNOM  
!       A=A*RDNOM
!       B=B*RDNOM
!       C=C*RDNOM
!       EFML=C+TT*(B+TT*A)
!       DEML=B+TWO*A*TT
! C.....CALCULATE THE SPECIFIC ENTHALPY AT THE METAL SOLIDUS.
!       TT=TFMS
!       A=ZERO
!       B=ZERO
!       C=ZERO
!       DNOM=ZERO
!       DO 899 I=NMATFI,NMATFF    
!       HMOLI=HMOL(I)   
!       DNOM=DNOM+HMOLI*FMMOL(I)  
!       J=1   
!       IF(IMOX(I).EQ.0) GO TO 898
!       IF(TT.LE.TFOS) GO TO 898
!       J=2
!       IF(TT.GE.TFOL) GO TO 898
!       ELI=CEQM(I,2)+TFOL*(BEQM(I,2)+TFOL*AEQM(I,2)) 
!       ESI=CEQM(I,1)+TFOS*(BEQM(I,1)+TFOS*AEQM(I,1)) 
!       B=B+((ELI-ESI)/(TFOL-TFOS))*HMOLI   
!       C=C+(ESI-TFOS*((ELI-ESI)/(TFOL-TFOS)))*HMOLI
!       GO TO 899
!   898 CONTINUE
!       A=A+HMOLI*AEQM(I,J)
!       B=B+HMOLI*BEQM(I,J)
!       C=C+HMOLI*CEQM(I,J)
!   899 CONTINUE
!       RDNOM=ZERO      
!       IF (DNOM .NE. ZERO) RDNOM=ONE/DNOM  
!       A=A*RDNOM
!       B=B*RDNOM
!       C=C*RDNOM
!       EFMS=C+TT*(B+TT*A)
!       DEMS=B+TWO*A*TT
! C.....CALCULATE THE TEMPERATURE AND DERIVATIVE OF TEMPERATURE WITH      
! C.....RESPECT TO THE SPECIFIC ENTHALPY CORRESPONDING TO THE CURRENT     
! C.....FLUID SPECIFIC ENTHALPY.  
!       A=ZERO
!       B=ZERO
!       C=ZERO
!       DNOM=ZERO
!       DO 999 I=NMATFI,NMATFF    
!       HMOLI=HMOL(I)   
!       DNOM=DNOM+HMOLI*FMMOL(I)  
!       J=1
!       IF(IMOX(I).EQ.0) GO TO 905
!       IF(E.LE.EFOS) GO TO 910
!       J=2
!       IF(E.GE.EFOL) GO TO 910
!       ELI=CEQM(I,2)+TFOL*(BEQM(I,2)+TFOL*AEQM(I,2)) 
!       ESI=CEQM(I,1)+TFOS*(BEQM(I,1)+TFOS*AEQM(I,1)) 
!       B=B+((ELI-ESI)/(TFOL-TFOS))*HMOLI   
!       C=C+(ESI-TFOS*((ELI-ESI)/(TFOL-TFOS)))*HMOLI
!       GO TO 999
!   905 CONTINUE
!       IF(E.LE.EFMS) GO TO 910
!       J=2
!       IF(E.GE.EFML) GO TO 910
!       ELI=CEQM(I,2)+TFML*(BEQM(I,2)+TFML*AEQM(I,2)) 
!       ESI=CEQM(I,1)+TFMS*(BEQM(I,1)+TFMS*AEQM(I,1)) 
!       B=B+((ELI-ESI)/(TFML-TFMS))*HMOLI   
!       C=C+(ESI-TFMS*((ELI-ESI)/(TFML-TFMS)))*HMOLI
!       GO TO 999
!   910 CONTINUE     
!       A=A+HMOLI*AEQM(I,J)
!       B=B+HMOLI*BEQM(I,J)
!       C=C+HMOLI*CEQM(I,J)
!   999 CONTINUE
!       RDNOM=ZERO      
!       IF (DNOM .NE. ZERO) RDNOM=ONE/DNOM  
!       A=A*RDNOM
!       B=B*RDNOM
!       C=C*RDNOM
!       IF (ABS(A) .GT. 1.D-05) GO TO 1100
!       T=(E-C)/B
!       DEDT=ABS(B)     
!       DTDE=ABS(ONE/DEDT)
!       GO TO 1200      
!  1100 CONTINUE
!       T=(-HALF*B+SQRT(FOURTH*B*B-A*(C-E)))/A
!       DEDT=ABS(B+A*TWO*T)
!       DTDE=ABS(ONE/DEDT)
!  1200 CONTINUE
!       DESOL=DEMS      
!       IF(T.GT.TFMS.AND.DEOXS.GT.0.D0) DESOL=DEOXS   
!       CPSOL=DESOL     
!       DELIQ=DEML      
!       IF(T.GT.TFML.AND.DEOXL.GT.0.D0) DELIQ=DEOXL   
!       CPLIQ=DELIQ     
!       RETURN
!       END   
! C...................................................................... 
! C.....GIVEN THE FLUID TEMPERATURE, THIS ROUTINE CALCULATES THE FLUID    
! C.....SPECIFIC ENTHALPY AND THE DERIVATIVE OF THE TEMPERATURE WITH      
! C.....RESPECT TO THE SPECIFIC ENTHALPY. THE FLUID IS ASSUMED TO
! C.....CONSIST OF DISTINCT OXIDE AND METAL PHASES EACH OF WHICH IS
! C.....CHARACTERIZED BY DISTINCT SOLIDUS AND LIQUIDUS TEMPERATURES.      
! C...................................................................... 
!       SUBROUTINE ETF(E,HIN,T,DTDE)
!       IMPLICIT DOUBLE PRECISION(A-H,O-Z)
!       DIMENSION HIN(28),HMOL(28)
!       COMMON/PROPI/ NMATC,NMATFI,NMATFF,ICAOH2,ICACO3,IMCCO3,IFH2O,     
!      1IVH2O,ICK2O,IVK2O,INA2O,ITIO2,ISIO2,ICAO,IMGO,IAL2O3,IFEO,IFE2O3, 
!      2IFE3O4,IFE,ICR,INI,IZR,IU,IB4C,IB,ICR2O3,INIO,IUO2,IZRO2,IB2O3,   
!      3NBCINT(999),NODES(999),NUMNOD,IMOX(28),IBAS,ILCS,ILL,NACTIV(999),     
!      4NBFRZM,NBFRZO,NABLFM,NDRNFM,NTYPMT(999,999),NDOOR,NBMADJ,NUMSHV,   
!      5NBSHL(999),NCRSTS(999),NUMSHH,NSKIPE,NACSH,NWAT,NPEND,NBCBOT,
!      6NCRTOP,NBFZOE,NBFZME,NGEOM,NL(999,999),NFRSCT,NLOGSH,NADAB,NINVIS,
!      7NSIMST,NSTEEL,NOVHT,NOVTK,NOVUM,NOVEM,NOVSIG,NPLLOC(999),NBPL,
!      8IXP(999),IYP(999),NVTPE,NSOLTP,NSOLF,NINTF,IFLGA(999),ICTYPE,ICTC,
!      9NPOURS,NSMP,NPED,NDOR,NSHL,NANULS,NSMPCV,NBOIL,NSWALL,NMVER,
!      1NCRTEM,NTHINC,NVELP,NITMAX,NENMAX,NPRINT,NPFREQ,NTIMSPC,NPLFREQ,
!      2NPLTOT,NJET,NJETP,NJETD,NJETND,NODCAP,NVELPW,NITMAXW,NENMXW,
!      3IFLGJ(999),NBEDCQ,ISHELE
!       COMMON/PRINTR/ QFEH2O,QCRH2O,QZRH2O,QFECO2,QCRCO2,QZRCO2,
!      4XFH2OU,XFCAOH,XFMGCA,XFCACO,XZRMRE,XFEMRE,XCRMRE,XZRORE,XFEORE,   
!      5XCRORE,XMH2O,XMCO2,XMCACO,XMMGCA,XMCAOH,TFWL,TFWS,TBWL,TBWS,      
!      6TMCAL,TMCAS,TCAL,TCAS,TFOS,TFOL,TFMS,TFML,XVISC(28),SVISC(28),    
!      7XMOL(28),FMMOL(28),ROM(28),ROMLIQ(28),AEQM(28,2),BEQM(28,2),
!      8CEQM(28,2),ECL,ECS,ECAL,ECAS,EMCAL,EMCAS,EBWL,EBWS,EFWL,EFWS,    
!      9STEF,GRAV,PI,TCS,TCL,CCL,CCS,RMASSL,WPCC,WPM,WPA,WPCS,ROC,RMASSS,   
!      1ANGSHL,RSLAGL,RSLAGS,HNODT,VFAV,VGAV,QXAV,XWTSS(16),  
!      2TSCS(2),TSCL(2),ESCS(2),ESCL(2),CCSS(2),CCSL(2),ROSTLS,ROSTLL,
!      3XFRGAS,HMINC,TST(99),TSTOP(99),AINTP(99),BINTP(99),DRATIO(999),
!      4XBCN(999),XDCN(999),XBLT(15),ADEC(99),BDEC(99),APOUR(16,99),
!      5BPOUR(16,99),XWTC(14),BWIDTH,THCKCV,TMBOIL,TEBOIL,VFINT,ANGFAN,
!      6ALPMAX,THSHL,XFCABL,XNDMIN,DVMX,DAVMX,DEAVMX,DEMX,TDC,QDCU,QDCUO2,
!      7TSINJ,EINJ,DTINJ,TKINJ,ROEV,CPINJ,SURFT,VSINJ,EMINJ,TSINJO,EINJO,
!      8DTINJO,TKINJO,ROEVO,CPINJO,SURFTO,VSINJO,EMINJO,XLEADE,ARSUM,
!      9DBUBOX,UTRISE,TREMSH,DJET,DFALL,WEBER,FROUDE,XPSAITO,XPEPSTN,
!      1FRAG,XMBEDT,XMBED(16),XLPENT,XLPENA,UJET,UFALL,HFALL,ERPV,
!      2TJETT(99),DJETT(99),HWATP,XDOTJET,DVMXW,DAVMXW,DEMXW,DEAVMXW,
!      3QJETW,XSTMJF,TINTSJF,ESAT,DRDOOR,DRANL,EI,QDCBUO2,QDCBU,
!      4EBEDS,EBEDB
!       DATA ZERO / 0.0 /
!       DATA ONE / 1.0 /
!       DATA TWO / 2.0 /
!       NMATFI=8
!       NMATFF=28
! C.....DEFINE THE COLLAPSED DEPTHS OF THE FLUID MATERIALS HERE GIVEN THE 
! C.....COLLAPSED DEPTHS, HIN, CALCULATED BY THE FLUID DYNAMICS 
! C.....ROUTINES.
!       DNOM=ZERO
!       DO 399 I=NMATFI,NMATFF    
!       HMOL(I)=HIN(I)*ROMLIQ(I)/FMMOL(I)   
!       DNOM=DNOM+HMOL(I)
!   399 CONTINUE
!       RDNOM=ZERO      
!       IF (DNOM .NE. ZERO) RDNOM=ONE/DNOM  
!       DO 499 I=NMATFI,NMATFF    
!       HMOL(I)=HMOL(I)*RDNOM     
!   499 CONTINUE
! C.....TEMPERATURE TABLE
! C.....TFOL:  FLUID OXIDE PHASE LIQUIDUS   
! C.....TFOS:  FLUID OXIDE PHASE SOLIDUS    
! C.....TFML:  FLUID METAL PHASE LIQUIDUS   
! C.....TFMS:  FLUID METAL PHASE SOLIDUS    
! C.....CALCULATE THE SPECIFIC ENTHALPY AND DERIVATIVE OF THE TEMPERATURE 
! C.....WITH RESPECT TO THE SPECIFIC ENTHALPY CORRESPONDING TO THE
! C.....CURRENT FLUID TEMPERATURE.
!       A=ZERO
!       B=ZERO
!       C=ZERO
!       DNOM=ZERO
!       DO 999 I=NMATFI,NMATFF    
!       HMOLI=HMOL(I)   
!       DNOM=DNOM+HMOLI*FMMOL(I)  
!       J=1
!       IF(IMOX(I).EQ.0) GO TO 905
!       IF(T.LE.TFOS) GO TO 910
!       J=2
!       IF(T.GE.TFOL) GO TO 910
!       ELI=CEQM(I,2)+TFOL*(BEQM(I,2)+TFOL*AEQM(I,2)) 
!       ESI=CEQM(I,1)+TFOS*(BEQM(I,1)+TFOS*AEQM(I,1)) 
!       B=B+((ELI-ESI)/(TFOL-TFOS))*HMOLI   
!       C=C+(ESI-TFOS*((ELI-ESI)/(TFOL-TFOS)))*HMOLI
!       GO TO 999
!   905 CONTINUE
!       IF(T.LE.TFMS) GO TO 910
!       J=2
!       IF(T.GE.TFML) GO TO 910
!       ELI=CEQM(I,2)+TFML*(BEQM(I,2)+TFML*AEQM(I,2)) 
!       ESI=CEQM(I,1)+TFMS*(BEQM(I,1)+TFMS*AEQM(I,1)) 
!       B=B+((ELI-ESI)/(TFML-TFMS))*HMOLI   
!       C=C+(ESI-TFMS*((ELI-ESI)/(TFML-TFMS)))*HMOLI
!       GO TO 999
!   910 CONTINUE     
!       A=A+HMOLI*AEQM(I,J)
!       B=B+HMOLI*BEQM(I,J)
!       C=C+HMOLI*CEQM(I,J)
!   999 CONTINUE
!       RDNOM=ZERO      
!       IF (DNOM .NE. ZERO) RDNOM=ONE/DNOM  
!       A=A*RDNOM
!       B=B*RDNOM
!       C=C*RDNOM
!       IF (ABS(A) .GT. 1.D-05) GO TO 1100
!       E=B*T+C
!       DEDT=ABS(B)     
!       DTDE=ABS(ONE/DEDT)
!       GO TO 1200      
!  1100 E=C+T*(B+T*A)   
!       DEDT=ABS(B+A*TWO*T)
!       DTDE=ABS(ONE/DEDT)
!  1200 CONTINUE
!       RETURN
!       END   
! C...................................................................... 
! C.....GIVEN THE TEMPERATURE, THIS ROUTINE CALCULATES THE THERMAL
! C.....CONDUCTIVITY OF THE FLUID METALLIC PHASES.    
! C...................................................................... 
!       SUBROUTINE CONDM(T,HMOL,FKM)
!       IMPLICIT DOUBLE PRECISION(A-H,O-Z)
!       DIMENSION HMOL(28)
!       COMMON/PROPI/ NMATC,NMATFI,NMATFF,ICAOH2,ICACO3,IMCCO3,IFH2O,     
!      1IVH2O,ICK2O,IVK2O,INA2O,ITIO2,ISIO2,ICAO,IMGO,IAL2O3,IFEO,IFE2O3, 
!      2IFE3O4,IFE,ICR,INI,IZR,IU,IB4C,IB,ICR2O3,INIO,IUO2,IZRO2,IB2O3,   
!      3NBCINT(999),NODES(999),NUMNOD,IMOX(28),IBAS,ILCS,ILL,NACTIV(999),     
!      4NBFRZM,NBFRZO,NABLFM,NDRNFM,NTYPMT(999,999),NDOOR,NBMADJ,NUMSHV,   
!      5NBSHL(999),NCRSTS(999),NUMSHH,NSKIPE,NACSH,NWAT,NPEND,NBCBOT,
!      6NCRTOP,NBFZOE,NBFZME,NGEOM,NL(999,999),NFRSCT,NLOGSH,NADAB,NINVIS,
!      7NSIMST,NSTEEL,NOVHT,NOVTK,NOVUM,NOVEM,NOVSIG,NPLLOC(999),NBPL,
!      8IXP(999),IYP(999),NVTPE,NSOLTP,NSOLF,NINTF,IFLGA(999),ICTYPE,ICTC,
!      9NPOURS,NSMP,NPED,NDOR,NSHL,NANULS,NSMPCV,NBOIL,NSWALL,NMVER,
!      1NCRTEM,NTHINC,NVELP,NITMAX,NENMAX,NPRINT,NPFREQ,NTIMSPC,NPLFREQ,
!      2NPLTOT,NJET,NJETP,NJETD,NJETND,NODCAP,NVELPW,NITMAXW,NENMXW,
!      3IFLGJ(999),NBEDCQ,ISHELE
!       COMMON/PRINTR/ QFEH2O,QCRH2O,QZRH2O,QFECO2,QCRCO2,QZRCO2,
!      4XFH2OU,XFCAOH,XFMGCA,XFCACO,XZRMRE,XFEMRE,XCRMRE,XZRORE,XFEORE,   
!      5XCRORE,XMH2O,XMCO2,XMCACO,XMMGCA,XMCAOH,TFWL,TFWS,TBWL,TBWS,      
!      6TMCAL,TMCAS,TCAL,TCAS,TFOS,TFOL,TFMS,TFML,XVISC(28),SVISC(28),    
!      7XMOL(28),FMMOL(28),ROM(28),ROMLIQ(28),AEQM(28,2),BEQM(28,2),
!      8CEQM(28,2),ECL,ECS,ECAL,ECAS,EMCAL,EMCAS,EBWL,EBWS,EFWL,EFWS,    
!      9STEF,GRAV,PI,TCS,TCL,CCL,CCS,RMASSL,WPCC,WPM,WPA,WPCS,ROC,RMASSS,   
!      1ANGSHL,RSLAGL,RSLAGS,HNODT,VFAV,VGAV,QXAV,XWTSS(16),  
!      2TSCS(2),TSCL(2),ESCS(2),ESCL(2),CCSS(2),CCSL(2),ROSTLS,ROSTLL,
!      3XFRGAS,HMINC,TST(99),TSTOP(99),AINTP(99),BINTP(99),DRATIO(999),
!      4XBCN(999),XDCN(999),XBLT(15),ADEC(99),BDEC(99),APOUR(16,99),
!      5BPOUR(16,99),XWTC(14),BWIDTH,THCKCV,TMBOIL,TEBOIL,VFINT,ANGFAN,
!      6ALPMAX,THSHL,XFCABL,XNDMIN,DVMX,DAVMX,DEAVMX,DEMX,TDC,QDCU,QDCUO2,
!      7TSINJ,EINJ,DTINJ,TKINJ,ROEV,CPINJ,SURFT,VSINJ,EMINJ,TSINJO,EINJO,
!      8DTINJO,TKINJO,ROEVO,CPINJO,SURFTO,VSINJO,EMINJO,XLEADE,ARSUM,
!      9DBUBOX,UTRISE,TREMSH,DJET,DFALL,WEBER,FROUDE,XPSAITO,XPEPSTN,
!      1FRAG,XMBEDT,XMBED(16),XLPENT,XLPENA,UJET,UFALL,HFALL,ERPV,
!      2TJETT(99),DJETT(99),HWATP,XDOTJET,DVMXW,DAVMXW,DEMXW,DEAVMXW,
!      3QJETW,XSTMJF,TINTSJF,ESAT,DRDOOR,DRANL,EI,QDCBUO2,QDCBU,
!      4EBEDS,EBEDB
!       DATA ONE / 1.0 /
!       IF (T .GT. TFMS) GO TO 100
!       TP=T  
!       IF(TP.LT.300.D0) TP=300.D0
!       TR=TP*1700.0/TFMS
!       FKSS=8.116+1.618D-02*TR   
!       TR=T*2098.0/TFMS
!       FKZRY=7.51+TR*(2.09D-02+TR*(-1.45D-05+TR*(7.67D-09)))   
!       TR=T*1405.0/TFMS
!       FKU=2.1635307D+01+TR*(1.8595179D-02+TR*(3.5391148D-06)) 
!       TR=T*2743.0/TFMS
!       IF (TR .GT. 2580.40) TR=2580.40     
!       IF (TR .LT. 469.30) TR=469.30
!       FKB4C=65.51286538+TR*(-1.624753495D-01+TR*(2.289314544D-04
!      1+TR*(-1.785593996D-07+TR*(7.891660314D-11+TR*(-1.833381383D-14    
!      2+TR*(1.736062459D-18))))))
!       FKM=((HMOL(IFE)+HMOL(ICR)+HMOL(INI))*FKSS+HMOL(IZR)*FKZRY
!      1+HMOL(IU)*FKU+(HMOL(IB4C)+HMOL(IB))*FKB4C)    
!      2/(HMOL(IFE)+HMOL(ICR)+HMOL(INI)+HMOL(IZR)+HMOL(IU)+HMOL(IB4C)     
!      3+HMOL(IB))      
!       GO TO 1000      
!   100 CONTINUE
!       TR=1700.0
!       FKSS=8.116+1.618D-02*TR   
!       TR=2098.0
!       FKZRY=7.51+TR*(2.09D-02+TR*(-1.45D-05+TR*(7.67D-09)))   
!       TR=1405.0
!       FKU=2.1635307D+01+TR*(1.8595179D-02+TR*(3.5391148D-06)) 
!       TR=2743.0
!       IF (TR .GT. 2580.40) TR=2580.40     
!       IF (TR .LT. 469.30) TR=469.30
!       FKB4C=65.51286538+TR*(-1.624753495D-01+TR*(2.289314544D-04
!      1+TR*(-1.785593996D-07+TR*(7.891660314D-11+TR*(-1.833381383D-14    
!      2+TR*(1.736062459D-18))))))
!       FKMS=((HMOL(IFE)+HMOL(ICR)+HMOL(INI))*FKSS+HMOL(IZR)*FKZRY
!      1+HMOL(IU)*FKU+(HMOL(IB4C)+HMOL(IB))*FKB4C)    
!      2/(HMOL(IFE)+HMOL(ICR)+HMOL(INI)+HMOL(IZR)+HMOL(IU)+HMOL(IB4C)     
!      3+HMOL(IB))      
!       FKML=FKMS/1.6   
!       FKM=FKML
!       IF (T .GE. TFML) GO TO 1000
!       X=(T-TFMS)/(TFML-TFMS)    
!       FKM=ONE/((ONE-X)/FKMS+X/FKML)
!  1000 CONTINUE
!       RETURN
!       END   
! C...................................................................... 
! C.....GIVEN THE TEMPERATURE, THIS ROUTINE CALCULATES THE THERMAL
! C.....CONDUCTIVITY OF THE FLUID OXIDIC PHASES.      
! C...................................................................... 
!       SUBROUTINE CONDO(T,HMOL,FKO)
!       IMPLICIT DOUBLE PRECISION(A-H,O-Z)
!       DIMENSION HMOL(28)
!       COMMON/PROPI/ NMATC,NMATFI,NMATFF,ICAOH2,ICACO3,IMCCO3,IFH2O,     
!      1IVH2O,ICK2O,IVK2O,INA2O,ITIO2,ISIO2,ICAO,IMGO,IAL2O3,IFEO,IFE2O3, 
!      2IFE3O4,IFE,ICR,INI,IZR,IU,IB4C,IB,ICR2O3,INIO,IUO2,IZRO2,IB2O3,   
!      3NBCINT(999),NODES(999),NUMNOD,IMOX(28),IBAS,ILCS,ILL,NACTIV(999),     
!      4NBFRZM,NBFRZO,NABLFM,NDRNFM,NTYPMT(999,999),NDOOR,NBMADJ,NUMSHV,   
!      5NBSHL(999),NCRSTS(999),NUMSHH,NSKIPE,NACSH,NWAT,NPEND,NBCBOT,
!      6NCRTOP,NBFZOE,NBFZME,NGEOM,NL(999,999),NFRSCT,NLOGSH,NADAB,NINVIS,
!      7NSIMST,NSTEEL,NOVHT,NOVTK,NOVUM,NOVEM,NOVSIG,NPLLOC(999),NBPL,
!      8IXP(999),IYP(999),NVTPE,NSOLTP,NSOLF,NINTF,IFLGA(999),ICTYPE,ICTC,
!      9NPOURS,NSMP,NPED,NDOR,NSHL,NANULS,NSMPCV,NBOIL,NSWALL,NMVER,
!      1NCRTEM,NTHINC,NVELP,NITMAX,NENMAX,NPRINT,NPFREQ,NTIMSPC,NPLFREQ,
!      2NPLTOT,NJET,NJETP,NJETD,NJETND,NODCAP,NVELPW,NITMAXW,NENMXW,
!      3IFLGJ(999),NBEDCQ,ISHELE
!       COMMON/PRINTR/ QFEH2O,QCRH2O,QZRH2O,QFECO2,QCRCO2,QZRCO2,
!      4XFH2OU,XFCAOH,XFMGCA,XFCACO,XZRMRE,XFEMRE,XCRMRE,XZRORE,XFEORE,   
!      5XCRORE,XMH2O,XMCO2,XMCACO,XMMGCA,XMCAOH,TFWL,TFWS,TBWL,TBWS,      
!      6TMCAL,TMCAS,TCAL,TCAS,TFOS,TFOL,TFMS,TFML,XVISC(28),SVISC(28),    
!      7XMOL(28),FMMOL(28),ROM(28),ROMLIQ(28),AEQM(28,2),BEQM(28,2),
!      8CEQM(28,2),ECL,ECS,ECAL,ECAS,EMCAL,EMCAS,EBWL,EBWS,EFWL,EFWS,    
!      9STEF,GRAV,PI,TCS,TCL,CCL,CCS,RMASSL,WPCC,WPM,WPA,WPCS,ROC,RMASSS,   
!      1ANGSHL,RSLAGL,RSLAGS,HNODT,VFAV,VGAV,QXAV,XWTSS(16),  
!      2TSCS(2),TSCL(2),ESCS(2),ESCL(2),CCSS(2),CCSL(2),ROSTLS,ROSTLL,
!      3XFRGAS,HMINC,TST(99),TSTOP(99),AINTP(99),BINTP(99),DRATIO(999),
!      4XBCN(999),XDCN(999),XBLT(15),ADEC(99),BDEC(99),APOUR(16,99),
!      5BPOUR(16,99),XWTC(14),BWIDTH,THCKCV,TMBOIL,TEBOIL,VFINT,ANGFAN,
!      6ALPMAX,THSHL,XFCABL,XNDMIN,DVMX,DAVMX,DEAVMX,DEMX,TDC,QDCU,QDCUO2,
!      7TSINJ,EINJ,DTINJ,TKINJ,ROEV,CPINJ,SURFT,VSINJ,EMINJ,TSINJO,EINJO,
!      8DTINJO,TKINJO,ROEVO,CPINJO,SURFTO,VSINJO,EMINJO,XLEADE,ARSUM,
!      9DBUBOX,UTRISE,TREMSH,DJET,DFALL,WEBER,FROUDE,XPSAITO,XPEPSTN,
!      1FRAG,XMBEDT,XMBED(16),XLPENT,XLPENA,UJET,UFALL,HFALL,ERPV,
!      2TJETT(99),DJETT(99),HWATP,XDOTJET,DVMXW,DAVMXW,DEMXW,DEAVMXW,
!      3QJETW,XSTMJF,TINTSJF,ESAT,DRDOOR,DRANL,EI,QDCBUO2,QDCBU,
!      4EBEDS,EBEDB
!       IF (T .GT. TFOS) GO TO 100
!       TP=T  
!       IF(TP.LT.300.D0) TP=300.D0
!       TR=TP*3120.0/TFOS
!       FKUO2=1.403599D+01+TR*(-2.315178D-02+TR*(2.076437D-05   
!      1+TR*(-9.661433D-09+TR*(1.797122D-12+TR*(1.101231D-16    
!      2+TR*(-5.381369D-20))))))  
!       TR=T*2973.0/TFOS
!       FKZRO2=0.835+1.81D-04*TR  
!       TR=T*2888.8/TFOS
!       IF (TR .GT. 1196.0) TR=1196.0
!       IF (TR .LT. 341.2) TR=341.2
!       FKCAO=2.6196084D-02+TR*(2.2088636D-01+TR*(-1.1079761D-03
!      1+TR*(2.4330727D-06+TR*(-2.7308447D-09+TR*(1.5341573D-12 
!      2+TR*(-3.4218790D-16)))))) 
!       TR=T*3098.0/TFOS
!       IF (TR .GT. 2500.0) TR=2500.0
!       FKMGO=1.2355582D+02+TR*(-3.7919920D-01+TR*(5.3942299D-04
!      1+TR*(-4.1502281D-07+TR*(1.7582266D-10+TR*(-3.8058761D-14
!      2+TR*(3.2907056D-18))))))  
!       TR=T*1996.0/TFOS
!       IF (TR .GT. 800.0) TR=800.0
!       FKSIO2=22.55797774+TR*(-1.041591475D-01+TR*(2.277627020D-04
!      1+TR*(-2.354335549D-07+TR*(9.425353223D-11)))) 
!       TR=T*1870.0/TFOS
!       FKFE3O=4.14     
!       FKO=(HMOL(IUO2)*FKUO2+HMOL(IZRO2)*FKZRO2      
!      1+HMOL(ICAO)*FKCAO+HMOL(IMGO)*FKMGO+HMOL(ISIO2)*FKSIO2   
!      2+(HMOL(IFEO)+HMOL(ICR2O3))*FKFE3O)  
!      3/(HMOL(IUO2)+HMOL(IZRO2)+HMOL(ICAO)+HMOL(IMGO)+HMOL(ISIO2)
!      4+HMOL(IFEO)+HMOL(ICR2O3)) 
!       GO TO 1000      
!   100 CONTINUE
!       TR=3120.0
!       FKUO2=1.403599D+01+TR*(-2.315178D-02+TR*(2.076437D-05   
!      1+TR*(-9.661433D-09+TR*(1.797122D-12+TR*(1.101231D-16    
!      2+TR*(-5.381369D-20))))))  
!       TR=2973.0
!       FKZRO2=0.835+1.81D-04*TR  
!       TR=2888.8
!       IF (TR .GT. 1196.0) TR=1196.0
!       IF (TR .LT. 341.2) TR=341.2
!       FKCAO=2.6196084D-02+TR*(2.2088636D-01+TR*(-1.1079761D-03
!      1+TR*(2.4330727D-06+TR*(-2.7308447D-09+TR*(1.5341573D-12 
!      2+TR*(-3.4218790D-16)))))) 
!       TR=3098.0
!       IF (TR .GT. 2500.0) TR=2500.0
!       FKMGO=1.2355582D+02+TR*(-3.7919920D-01+TR*(5.3942299D-04
!      1+TR*(-4.1502281D-07+TR*(1.7582266D-10+TR*(-3.8058761D-14
!      2+TR*(3.2907056D-18))))))  
!       TR=1996.0
!       IF (TR .GT. 800.0) TR=800.0
!       FKSIO2=22.55797774+TR*(-1.041591475D-01+TR*(2.277627020D-04
!      1+TR*(-2.354335549D-07+TR*(9.425353223D-11)))) 
!       TR=1870.0
!       FKFE3O=4.14     
!       FKO=(HMOL(IUO2)*FKUO2+HMOL(IZRO2)*FKZRO2      
!      1+HMOL(ICAO)*FKCAO+HMOL(IMGO)*FKMGO+HMOL(ISIO2)*FKSIO2   
!      2+(HMOL(IFEO)+HMOL(ICR2O3))*FKFE3O)  
!      3/(HMOL(IUO2)+HMOL(IZRO2)+HMOL(ICAO)+HMOL(IMGO)+HMOL(ISIO2)
!      4+HMOL(IFEO)+HMOL(ICR2O3)) 
!  1000 CONTINUE
!       RETURN
!       END   
! C...................................................................... 
! C.....GIVEN THE TEMPERATURE OF THE FLUID MATERIAL, THIS ROUTINE
! C.....CALCULATES THE THERMAL CONDUCTIVITY OF THE OXIDE AND METAL
! C.....PHASES AS WELL AS THE THERMAL CONDUCTIVITY OF THE OXIDE-
! C.....METAL MIXTURE.  
! C...................................................................... 
!       SUBROUTINE CONDF(T,HMOL,FKO,FKM,FK) 
!       IMPLICIT DOUBLE PRECISION(A-H,O-Z)
!       DIMENSION HMOL(28)
!       COMMON/PROPI/ NMATC,NMATFI,NMATFF,ICAOH2,ICACO3,IMCCO3,IFH2O,     
!      1IVH2O,ICK2O,IVK2O,INA2O,ITIO2,ISIO2,ICAO,IMGO,IAL2O3,IFEO,IFE2O3, 
!      2IFE3O4,IFE,ICR,INI,IZR,IU,IB4C,IB,ICR2O3,INIO,IUO2,IZRO2,IB2O3,   
!      3NBCINT(999),NODES(999),NUMNOD,IMOX(28),IBAS,ILCS,ILL,NACTIV(999),     
!      4NBFRZM,NBFRZO,NABLFM,NDRNFM,NTYPMT(999,999),NDOOR,NBMADJ,NUMSHV,   
!      5NBSHL(999),NCRSTS(999),NUMSHH,NSKIPE,NACSH,NWAT,NPEND,NBCBOT,
!      6NCRTOP,NBFZOE,NBFZME,NGEOM,NL(999,999),NFRSCT,NLOGSH,NADAB,NINVIS,
!      7NSIMST,NSTEEL,NOVHT,NOVTK,NOVUM,NOVEM,NOVSIG,NPLLOC(999),NBPL,
!      8IXP(999),IYP(999),NVTPE,NSOLTP,NSOLF,NINTF,IFLGA(999),ICTYPE,ICTC,
!      9NPOURS,NSMP,NPED,NDOR,NSHL,NANULS,NSMPCV,NBOIL,NSWALL,NMVER,
!      1NCRTEM,NTHINC,NVELP,NITMAX,NENMAX,NPRINT,NPFREQ,NTIMSPC,NPLFREQ,
!      2NPLTOT,NJET,NJETP,NJETD,NJETND,NODCAP,NVELPW,NITMAXW,NENMXW,
!      3IFLGJ(999),NBEDCQ,ISHELE
!       COMMON/DATOVER/COVS,COVL,DHSOV,XMOLOV,ROVS,ROVL,TKOVS,TKOVL,VISOV,
!      1EMOV,SIGOV
!       COMMON/PRINTR/ QFEH2O,QCRH2O,QZRH2O,QFECO2,QCRCO2,QZRCO2,
!      4XFH2OU,XFCAOH,XFMGCA,XFCACO,XZRMRE,XFEMRE,XCRMRE,XZRORE,XFEORE,   
!      5XCRORE,XMH2O,XMCO2,XMCACO,XMMGCA,XMCAOH,TFWL,TFWS,TBWL,TBWS,      
!      6TMCAL,TMCAS,TCAL,TCAS,TFOS,TFOL,TFMS,TFML,XVISC(28),SVISC(28),    
!      7XMOL(28),FMMOL(28),ROM(28),ROMLIQ(28),AEQM(28,2),BEQM(28,2),
!      8CEQM(28,2),ECL,ECS,ECAL,ECAS,EMCAL,EMCAS,EBWL,EBWS,EFWL,EFWS,    
!      9STEF,GRAV,PI,TCS,TCL,CCL,CCS,RMASSL,WPCC,WPM,WPA,WPCS,ROC,RMASSS,   
!      1ANGSHL,RSLAGL,RSLAGS,HNODT,VFAV,VGAV,QXAV,XWTSS(16),  
!      2TSCS(2),TSCL(2),ESCS(2),ESCL(2),CCSS(2),CCSL(2),ROSTLS,ROSTLL,
!      3XFRGAS,HMINC,TST(99),TSTOP(99),AINTP(99),BINTP(99),DRATIO(999),
!      4XBCN(999),XDCN(999),XBLT(15),ADEC(99),BDEC(99),APOUR(16,99),
!      5BPOUR(16,99),XWTC(14),BWIDTH,THCKCV,TMBOIL,TEBOIL,VFINT,ANGFAN,
!      6ALPMAX,THSHL,XFCABL,XNDMIN,DVMX,DAVMX,DEAVMX,DEMX,TDC,QDCU,QDCUO2,
!      7TSINJ,EINJ,DTINJ,TKINJ,ROEV,CPINJ,SURFT,VSINJ,EMINJ,TSINJO,EINJO,
!      8DTINJO,TKINJO,ROEVO,CPINJO,SURFTO,VSINJO,EMINJO,XLEADE,ARSUM,
!      9DBUBOX,UTRISE,TREMSH,DJET,DFALL,WEBER,FROUDE,XPSAITO,XPEPSTN,
!      1FRAG,XMBEDT,XMBED(16),XLPENT,XLPENA,UJET,UFALL,HFALL,ERPV,
!      2TJETT(99),DJETT(99),HWATP,XDOTJET,DVMXW,DAVMXW,DEMXW,DEAVMXW,
!      3QJETW,XSTMJF,TINTSJF,ESAT,DRDOOR,DRANL,EI,QDCBUO2,QDCBU,
!      4EBEDS,EBEDB
!       DATA ZERO / 0.0 /
!       DATA ONE / 1.0 /
!       DATA FKSOLM /2.58D0/      
!       DATA FKMMLM /28.8D0/      
! C.....CHECK IF INPUT DATA IS BEING USED TO OVERWRITE THE THERMAL 
! C.....CONDUCTIVITY DATA AND IF SO, SET ACCORDINGLY.
!       IF(NOVTK.EQ.0) GO TO 887
!       IF(T.GT.TFOS) GO TO 888
!       FKM=TKOVS
!       FKO=TKOVS
!       FK=TKOVS
!       GO TO 4788 
!   888 CONTINUE
!       FKM=TKOVL
!       FKO=TKOVL
!       FK=TKOVL
!       GO TO 4788
!   887 CONTINUE
! C.....FOR GENERAL CASE, CALCULATE THE COLLAPSED VOLUME FRACTIONS, VFLO 
! C.....AND VLFM, OF THE COLLAPSED OXIDE AND METAL PHASES.
!       HT=ZERO
!       HTM=ZERO
!       HTO=ZERO
!       DO 399 I=NMATFI,NMATFF    
!       HMOLI=HMOL(I)   
!       HT=HT+HMOLI     
!       IF(IMOX(I).NE.1) GO TO 299
!       HTO=HTO+HMOLI   
!       GO TO 399
!   299 CONTINUE
!       HTM=HTM+HMOLI   
!   399 CONTINUE
!       DENOM=0.D0      
!       IF(HT.GT.0.D0) DENOM=ONE/HT
!       VFLM=HTM*DENOM  
!       VFLO=HTO*DENOM  
!       IF(VFLM.GT.0.D0.OR.VFLO.GT.0.D0) GO TO 351    
!       FK=FKSOLM
!       GO TO 4788      
!   351 CONTINUE
!       TSEND=T
!       IF(VFLM.LE.0.D0) GO TO 402
!       CALL CONDM(TSEND,HMOL,FKM)
!   402 CONTINUE
!       IF(VFLO.LE.0.D0) GO TO 403
!       CALL CONDO(TSEND,HMOL,FKO)
!   403 CONTINUE
!       IF (VFLM .GT. 0.5) GO TO 210
!       VFC=VFLO
!       VFD=VFLM
!       FKC=FKO
!       FKD=FKM
!       GO TO 220
!   210 VFC=VFLM
!       VFD=VFLO
!       FKC=FKM
!       FKD=FKO
!   220 CONTINUE
! C.....THE FOLLOWING CALCULATES THE EFFECTIVE THERMAL CONDUCTIVITY OF THE
! C.....OXIDE-METAL MIXTURE USING THE EQUATION OF WILLHITE, KUNII, AND    
! C.....SMITH.
!       FK=FKD
!       IF(VFD.LE.0.D0) FK=FKC    
!       IF(VFD.GT.0.D0.AND.VFC.GT.0.D0) FK=(FKC**VFC)*(FKD**VFD)
!       FK=DMAX1(FK,FKSOLM)
!       FK=DMIN1(FK,FKMMLM)
!  4788 CONTINUE
!       RETURN
!       END   
! C...................................................................... 
! C.....GIVEN THE FLUID TEMPERATURE AND THE COLLAPSED DEPTHS OF THE
! C.....FLUID CONSTITUENT MATERIALS, THIS ROUTINE CALCULATES THE
! C.....VISCOSITIES, VISFLO AND VISFLM, OF THE LIQUID OXIDE AND 
! C.....METAL PHASES AS WELL AS THE EFFECTIVE VISCOSITY, VISF, OF
! C.....THE OXIDE-METAL MIXTURE.  
! C...................................................................... 
!       SUBROUTINE VISCF(T,HSEND,VISFLO,VISFLM,VISF,VISRE)
!       IMPLICIT DOUBLE PRECISION(A-H,O-Z)
!       DIMENSION HMOL(28),HSEND(28)
!       COMMON/PROPI/ NMATC,NMATFI,NMATFF,ICAOH2,ICACO3,IMCCO3,IFH2O,     
!      1IVH2O,ICK2O,IVK2O,INA2O,ITIO2,ISIO2,ICAO,IMGO,IAL2O3,IFEO,IFE2O3, 
!      2IFE3O4,IFE,ICR,INI,IZR,IU,IB4C,IB,ICR2O3,INIO,IUO2,IZRO2,IB2O3,   
!      3NBCINT(999),NODES(999),NUMNOD,IMOX(28),IBAS,ILCS,ILL,NACTIV(999),     
!      4NBFRZM,NBFRZO,NABLFM,NDRNFM,NTYPMT(999,999),NDOOR,NBMADJ,NUMSHV,   
!      5NBSHL(999),NCRSTS(999),NUMSHH,NSKIPE,NACSH,NWAT,NPEND,NBCBOT,
!      6NCRTOP,NBFZOE,NBFZME,NGEOM,NL(999,999),NFRSCT,NLOGSH,NADAB,NINVIS,
!      7NSIMST,NSTEEL,NOVHT,NOVTK,NOVUM,NOVEM,NOVSIG,NPLLOC(999),NBPL,
!      8IXP(999),IYP(999),NVTPE,NSOLTP,NSOLF,NINTF,IFLGA(999),ICTYPE,ICTC,
!      9NPOURS,NSMP,NPED,NDOR,NSHL,NANULS,NSMPCV,NBOIL,NSWALL,NMVER,
!      1NCRTEM,NTHINC,NVELP,NITMAX,NENMAX,NPRINT,NPFREQ,NTIMSPC,NPLFREQ,
!      2NPLTOT,NJET,NJETP,NJETD,NJETND,NODCAP,NVELPW,NITMAXW,NENMXW,
!      3IFLGJ(999),NBEDCQ,ISHELE
!       COMMON/DATOVER/COVS,COVL,DHSOV,XMOLOV,ROVS,ROVL,TKOVS,TKOVL,VISOV,
!      1EMOV,SIGOV
!       COMMON/PRINTR/ QFEH2O,QCRH2O,QZRH2O,QFECO2,QCRCO2,QZRCO2,
!      4XFH2OU,XFCAOH,XFMGCA,XFCACO,XZRMRE,XFEMRE,XCRMRE,XZRORE,XFEORE,   
!      5XCRORE,XMH2O,XMCO2,XMCACO,XMMGCA,XMCAOH,TFWL,TFWS,TBWL,TBWS,      
!      6TMCAL,TMCAS,TCAL,TCAS,TFOS,TFOL,TFMS,TFML,XVISC(28),SVISC(28),    
!      7XMOL(28),FMMOL(28),ROM(28),ROMLIQ(28),AEQM(28,2),BEQM(28,2),
!      8CEQM(28,2),ECL,ECS,ECAL,ECAS,EMCAL,EMCAS,EBWL,EBWS,EFWL,EFWS,    
!      9STEF,GRAV,PI,TCS,TCL,CCL,CCS,RMASSL,WPCC,WPM,WPA,WPCS,ROC,RMASSS,   
!      1ANGSHL,RSLAGL,RSLAGS,HNODT,VFAV,VGAV,QXAV,XWTSS(16),  
!      2TSCS(2),TSCL(2),ESCS(2),ESCL(2),CCSS(2),CCSL(2),ROSTLS,ROSTLL,
!      3XFRGAS,HMINC,TST(99),TSTOP(99),AINTP(99),BINTP(99),DRATIO(999),
!      4XBCN(999),XDCN(999),XBLT(15),ADEC(99),BDEC(99),APOUR(16,99),
!      5BPOUR(16,99),XWTC(14),BWIDTH,THCKCV,TMBOIL,TEBOIL,VFINT,ANGFAN,
!      6ALPMAX,THSHL,XFCABL,XNDMIN,DVMX,DAVMX,DEAVMX,DEMX,TDC,QDCU,QDCUO2,
!      7TSINJ,EINJ,DTINJ,TKINJ,ROEV,CPINJ,SURFT,VSINJ,EMINJ,TSINJO,EINJO,
!      8DTINJO,TKINJO,ROEVO,CPINJO,SURFTO,VSINJO,EMINJO,XLEADE,ARSUM,
!      9DBUBOX,UTRISE,TREMSH,DJET,DFALL,WEBER,FROUDE,XPSAITO,XPEPSTN,
!      1FRAG,XMBEDT,XMBED(16),XLPENT,XLPENA,UJET,UFALL,HFALL,ERPV,
!      2TJETT(99),DJETT(99),HWATP,XDOTJET,DVMXW,DAVMXW,DEMXW,DEAVMXW,
!      3QJETW,XSTMJF,TINTSJF,ESAT,DRDOOR,DRANL,EI,QDCBUO2,QDCBU,
!      4EBEDS,EBEDB
!       COMMON/PRINTB/ELEVAT(999),ELOLD(999),XDIST(999,999),XBTW(999,999),
!      1TEMP(999,999),ENTHP(999,999),EOLD(999,999),ENBLK(999),EBKOLD(999),
!      2TBULK(999),HITE(16,999),HITOLD(16,999),HTOT(999),HTOLD(999),
!      3HTCFT(999),HTCOEF(999),QFLUXT(999),QFLUXB(999),VEL(999),ELO(999),
!      4VELOLD(999),SRSCOR(16),AREA(999),RAD(999),ARC(999),VOLCN(16),
!      5VOID(999),VGJ(999),ZABLAT(999),ZABOLD(999),DCRUST(999),
!      6DCROLD(999),DABCON(999),DABOLD(999),DFILMT(999),DFOLT(999),
!      7SMFLX(4,999),XLSMF(4,999),TOTVOL,XFACMS(999),XMFLXA,XMCORT,
!      8VCORT,TOTOX,TOTMET,QFLXT,QFLXB,TIME,DTIME,XMCOR(16),VCOR(16),
!      9TCONI,RSAND,HDOWNC,TBOUND,EMISCN,PDRYWL,XDISTO(999),QOXT(999),
!      1XLENSH,XBTWO(999),RCOMP,WDOOR,RSUMP,RSHELL,RPED,TPED,ELSMP,
!      1TENDP(10,999),TFRZSH,TDEBRS,TKDEBR,PDEBR,CPDEBR,ENENDP(10,999),
!      2ENOLDP(10,999),DXVERT,DXSNK,XDSTE(10,999),XBTE(10,999),HXLA(999),
!      3HXLB(999),TSFEB(999),DCRS(999),DCRSLD(999),HCRS(16,999),
!      4HCRSLD(16,999),THETE0(10,999),THETE1(10,999),QSHELL,QSHELE,TSHELI,
!      5SIGOXE(999),FKOXE(999),RINJC,XLSEC,ANGSEC,ANINJC,XLCHAN,WCHNL,
!      6TEFZX(999),TIMSPC(999),DXNODE(999),TNORM(999),FRCSOL(999),
!      7ALPSPR(999),CRAMCON,HINTF,TSHLMX,XFRMX(999),XFROX(999),XFRTX(999),
!      8XMLMX(999),XMLOX(999),XMLTX(999),XTOTX(999),TIMEO,TMAX,EDOWN(999),
!      9HCP(999)
!       DATA ZERO / 0.0 /
!       DATA ONE / 1.0 /
!       DATA R / 8.3143 /
!       C2R3=2.0/3.0    
! C.....CHECK IF VISCOSITY IS CALCULATED USING A USER-SPECIFIED VALUE; IF
! C.....SO, CALL APPROPRIATE SUPPORT SUBROUTINE.
!       IF(NOVUM.EQ.0) GO TO 7622
!       CALL VISCS(T,HSEND,VISFLO,VISFLM,VISF,VISRE)
!       GO TO 900
!  7622 CONTINUE
! C.....CALCULATE THE COLLAPSED MOLE FRACTIONS, HMOL, HERE.     
! C.....CALCULATE THE OXIDE AND METAL LIQUID PHASE VISCOSITIES USING      
! C.....THE DA ANDRADE FORMULA AT A MELTING TEMPERATURE CORRESPONDING     
! C.....TO THE SOLIDUS TEMPERATURE.
!       DNOM=ZERO
!       DO 899 I=NMATFI,NMATFF    
!       HMOL(I)=HSEND(I)*ROMLIQ(I)/FMMOL(I)
!       DNOM=DNOM+HMOL(I)
!   899 CONTINUE
!       RDNOM=ZERO      
!       IF (DNOM .NE. ZERO) RDNOM=ONE/DNOM  
!       DO 999 I=NMATFI,NMATFF    
!       HMOL(I)=HMOL(I)*RDNOM     
!   999 CONTINUE
!       ANUM=ZERO
!       VNUM=ZERO
!       DNOM=ZERO
!       DO 399 I=NMATFI,NMATFF    
!       IF (IMOX(I) .NE. 1) GO TO 399
!       HMOLI=HMOL(I)   
!       ANUM=ANUM+HMOLI*FMMOL(I)  
!       VNUM=VNUM+HMOLI*FMMOL(I)/ROMLIQ(I)  
!       DNOM=DNOM+HMOLI 
!   399 CONTINUE
!       IF(DNOM.LE.ZERO) GO TO 1810
!       TEV=DMAX1(T,TFOS)
!       RDNOM=ONE/DNOM  
!       A=1000.0*ANUM*RDNOM
!       V=1.0D+06*VNUM*RDNOM      
!       VISFOS=6.12D-05*SQRT(TFOS*A)/V**C2R3
!       Q=1.8033*TFOS**1.348      
!       C=VISFOS/DEXP(Q/(R*TFOS))  
!       VISFLO=C*DEXP(Q/(R*TEV))   
!  1810 CONTINUE
!       ANUM=ZERO
!       VNUM=ZERO
!       DNOM=ZERO
!       DO 499 I=NMATFI,NMATFF    
!       IF (IMOX(I) .NE. 0) GO TO 499
!       HMOLI=HMOL(I)   
!       ANUM=ANUM+HMOLI*FMMOL(I)  
!       VNUM=VNUM+HMOLI*FMMOL(I)/ROMLIQ(I)  
!       DNOM=DNOM+HMOLI 
!   499 CONTINUE
!       IF(DNOM.LE.ZERO) GO TO 1812
!       TEV=DMAX1(T,TFMS)
!       RDNOM=ONE/DNOM  
!       A=1000.0*ANUM*RDNOM
!       V=1.0D+06*VNUM*RDNOM      
!       VISFMS=6.12D-05*SQRT(TFMS*A)/V**C2R3
!       Q=1.8033*TFMS**1.348      
!       C=VISFMS/DEXP(Q/(R*TFMS))  
!       VISFLM=C*DEXP(Q/(R*TEV))   
!  1812 CONTINUE
! C.....CALCULATE THE OXIDE PHASE LIQUID VISCOSITY USING THE    
! C.....METHODOLOGY OF CORCON MOD2 BASED UPON THE GEOLOGICAL    
! C.....APPROACH OF SHAW.
!       IF (HMOL(ISIO2) .LE. 0.01) GO TO 600
!       SNUM=ZERO
!       SDNOM=ZERO      
!       SHMOL=ZERO      
!       DO 599 I=NMATFI,NMATFF    
!       IF (IMOX(I) .NE. 1) GO TO 599
!       HMOLI=HMOL(I)   
!       XVISCI=XVISC(I) 
!       SNUM=SNUM+HMOLI*XVISCI*SVISC(I)     
!       SDNOM=SDNOM+HMOLI*XVISCI  
!       SHMOL=SHMOL+HMOLI
!   599 CONTINUE
!       TEV=DMAX1(T,TFOS)
!       S=SNUM*HMOL(ISIO2)/(SDNOM*(SHMOL+HMOL(ISIO2)))
!       VISFLG=DEXP(S*(1.0D+04/TEV-1.5)-6.4) 
!       IF (VISFLO .LT. VISFLG) VISFLO=VISFLG
!   600 CONTINUE
! C.....CALCULATE THE EFFECTIVE VISCOSITY OF THE LIQUID OXIDE-METAL
! C.....MIXTURE USING EITHER THE ISHII-ZUBER CORRELATION OR THE 
! C.....RAMACCIOTTI CORRELATION.  HOWEVER, FIRST GET THE SOLID
! C.....FRACTION OF THE MIXTURE.
!       CALL SOLCALC(T,HSEND,VFM,VFO,VSOLM,VSOLO,VSOLT)
!       VLIQT=ONE-VSOLT
!       DENOM=ZERO
!       IF(VLIQT.GT.ZERO) DENOM=ONE/VLIQT
!       VISCC=DENOM*((ONE-VSOLM)*VFM*VISFLM+(ONE-VSOLO)*VFO*VISFLO)
!       DENOM=ZERO
!       IF(VSOLT.GT.ZERO) DENOM=ONE/VSOLT
!       VISCD=DENOM*(VSOLM*VFM*VISFMS+VSOLO*VFO*VISFOS)
!       IF(VSOLT.GT.ZERO) GO TO 1815
!       VISF=VISCC      
!       VISRE=VISF      
!       GO TO 900
!  1815 CONTINUE
! C.....CALCULATE THE EFFECTIVE VISCOSITY OF THE LIQUID-SOLID   
! C.....PARTICULATE MIXTURE USING THE EXPRESSION PROPOSED BY    
! C.....ISHII AND ZUBER.
!       VISNUM=VISCD    
!       IF(VSOLT.LT.ONE.AND.VISCC.GT.ZERO) VISNUM=VISCC      
!       IF(NVTPE.EQ.2) GO TO 88
!       VFDMAX=ALPMAX      
!       EXPFAC=(2.5*VFDMAX*(VISCD+0.4*VISCC))/(VISCD+VISCC)     
!       VFPART=DMIN1(VSOLT/VFDMAX,ONE)
!       VSDFAC=ONE/(ONE+1.D-07-VFPART)**EXPFAC
!       GO TO 89
!    88 CONTINUE
!       ARG=2.5*CRAMCON*VSOLT
!       VSDFAC=DEXP(ARG)
!    89 CONTINUE
!       VISF=VSDFAC*VISNUM
!       VISRE=VISF      
!   900 CONTINUE
!       RETURN
!       END   
! C...................................................................... 
! C.....SUBROUTINE EMISC EVALUATES THE CONCRETE EMMISIVITY AS A FUNCTION  
! C.....OF TEMPERATURE. 
! C...................................................................... 
!       SUBROUTINE EMISC(T,ICT,EMIS,NPASS)  
!       IMPLICIT DOUBLE PRECISION(A-H,O-Z)
!       COMMON/PROPI/ NMATC,NMATFI,NMATFF,ICAOH2,ICACO3,IMCCO3,IFH2O,     
!      1IVH2O,ICK2O,IVK2O,INA2O,ITIO2,ISIO2,ICAO,IMGO,IAL2O3,IFEO,IFE2O3, 
!      2IFE3O4,IFE,ICR,INI,IZR,IU,IB4C,IB,ICR2O3,INIO,IUO2,IZRO2,IB2O3,   
!      3NBCINT(999),NODES(999),NUMNOD,IMOX(28),IBAS,ILCS,ILL,NACTIV(999),     
!      4NBFRZM,NBFRZO,NABLFM,NDRNFM,NTYPMT(999,999),NDOOR,NBMADJ,NUMSHV,   
!      5NBSHL(999),NCRSTS(999),NUMSHH,NSKIPE,NACSH,NWAT,NPEND,NBCBOT,
!      6NCRTOP,NBFZOE,NBFZME,NGEOM,NL(999,999),NFRSCT,NLOGSH,NADAB,NINVIS,
!      7NSIMST,NSTEEL,NOVHT,NOVTK,NOVUM,NOVEM,NOVSIG,NPLLOC(999),NBPL,
!      8IXP(999),IYP(999),NVTPE,NSOLTP,NSOLF,NINTF,IFLGA(999),ICTYPE,ICTC,
!      9NPOURS,NSMP,NPED,NDOR,NSHL,NANULS,NSMPCV,NBOIL,NSWALL,NMVER,
!      1NCRTEM,NTHINC,NVELP,NITMAX,NENMAX,NPRINT,NPFREQ,NTIMSPC,NPLFREQ,
!      2NPLTOT,NJET,NJETP,NJETD,NJETND,NODCAP,NVELPW,NITMAXW,NENMXW,
!      3IFLGJ(999),NBEDCQ,ISHELE
!       COMMON/DATSIMS/TSIS,TSIL,CSIS,CSIL,DHSIL,RSIS,RSIL,TKSIS,TKSIL,
!      1ESIL,XCSI(16)
!       IF(NPASS.NE.2) GO TO 50   
!       EMIS=0.33D0     
!       IF(NSIMST.EQ.1) EMIS=ESIL
!       GO TO 100
!    50 CONTINUE
!       EMIS=0.83
!   100 CONTINUE
!       RETURN
!       END   
! C...................................................................... 
! C.....SUBROUTINE EMISF EVALUATES THE BULK MELT EMISSIVITY GIVEN THE     
! C.....MELT CONSTITUENT HEIGHT VECTOR, H, AND THE MELT TEMPERATURE, T.   
! C...................................................................... 
!       SUBROUTINE EMISF(T,H,EMIS)
!       IMPLICIT DOUBLE PRECISION(A-H,O-Z)
!       COMMON/PROPI/ NMATC,NMATFI,NMATFF,ICAOH2,ICACO3,IMCCO3,IFH2O,     
!      1IVH2O,ICK2O,IVK2O,INA2O,ITIO2,ISIO2,ICAO,IMGO,IAL2O3,IFEO,IFE2O3, 
!      2IFE3O4,IFE,ICR,INI,IZR,IU,IB4C,IB,ICR2O3,INIO,IUO2,IZRO2,IB2O3,   
!      3NBCINT(999),NODES(999),NUMNOD,IMOX(28),IBAS,ILCS,ILL,NACTIV(999),     
!      4NBFRZM,NBFRZO,NABLFM,NDRNFM,NTYPMT(999,999),NDOOR,NBMADJ,NUMSHV,   
!      5NBSHL(999),NCRSTS(999),NUMSHH,NSKIPE,NACSH,NWAT,NPEND,NBCBOT,
!      6NCRTOP,NBFZOE,NBFZME,NGEOM,NL(999,999),NFRSCT,NLOGSH,NADAB,NINVIS,
!      7NSIMST,NSTEEL,NOVHT,NOVTK,NOVUM,NOVEM,NOVSIG,NPLLOC(999),NBPL,
!      8IXP(999),IYP(999),NVTPE,NSOLTP,NSOLF,NINTF,IFLGA(999),ICTYPE,ICTC,
!      9NPOURS,NSMP,NPED,NDOR,NSHL,NANULS,NSMPCV,NBOIL,NSWALL,NMVER,
!      1NCRTEM,NTHINC,NVELP,NITMAX,NENMAX,NPRINT,NPFREQ,NTIMSPC,NPLFREQ,
!      2NPLTOT,NJET,NJETP,NJETD,NJETND,NODCAP,NVELPW,NITMAXW,NENMXW,
!      3IFLGJ(999),NBEDCQ,ISHELE
!       COMMON/DATOVER/COVS,COVL,DHSOV,XMOLOV,ROVS,ROVL,TKOVS,TKOVL,VISOV,
!      1EMOV,SIGOV
!       DIMENSION H(28) 
!       DATA EMISM/0.30D0/
!       DATA EMISO/0.83D0/
!       DATA ONE/1.D0/  
!       DATA ZERO/0.D0/ 
! C.....CHECK IF INPUT DATA IS BEING USED TO OVERWRITE THE EMISSIVITY
! C.....CONDUCTIVITY DATA AND IF SO, SET ACCORDINGLY.
!       IF(NOVEM.EQ.0) GO TO 887
!       EMIS=EMOV
!       GO TO 4788 
! C.....GENERAL CASE DONE HERE.
!   887 CONTINUE
!       HT=ZERO
!       HTM=ZERO
!       HTO=ZERO
!       DO 399 I=NMATFI,NMATFF    
!       HMOLI=H(I)      
!       HT=HT+HMOLI     
!       IF(IMOX(I).NE.1) GO TO 299
!       HTO=HTO+HMOLI   
!       GO TO 399
!   299 CONTINUE
!       HTM=HTM+HMOLI   
!   399 CONTINUE
!       DENOM=0.D0      
!       IF(HT.GT.0.D0) DENOM=ONE/HT
!       VFLM=HTM*DENOM  
!       VFLO=HTO*DENOM  
!       EMIS=VFLM*EMISM+VFLO*EMISO
!       EMIS=DMAX1(EMISM,EMIS)    
!       EMIS=DMIN1(EMISO,EMIS)    
!  4788 CONTINUE
!       RETURN
!       END   
! C...................................................................... 
! C.....SUBROUTINE PRINTS WRITES TO THE OUTPUT FILE THE COMPUTED
! C.....INFORMATION AT THE END OF THE TIMESTEP.
! C...................................................................... 
!       SUBROUTINE PRINTS(NPRNT)
!       IMPLICIT DOUBLE PRECISION(A-H,O-Z)
!       REAL(8) KL
!       DIMENSION NX(900),NY(900),NT(900),TP(900),XL(900)
!       COMMON/PRINTR/ QFEH2O,QCRH2O,QZRH2O,QFECO2,QCRCO2,QZRCO2,
!      4XFH2OU,XFCAOH,XFMGCA,XFCACO,XZRMRE,XFEMRE,XCRMRE,XZRORE,XFEORE,   
!      5XCRORE,XMH2O,XMCO2,XMCACO,XMMGCA,XMCAOH,TFWL,TFWS,TBWL,TBWS,      
!      6TMCAL,TMCAS,TCAL,TCAS,TFOS,TFOL,TFMS,TFML,XVISC(28),SVISC(28),    
!      7XMOL(28),FMMOL(28),ROM(28),ROMLIQ(28),AEQM(28,2),BEQM(28,2),
!      8CEQM(28,2),ECL,ECS,ECAL,ECAS,EMCAL,EMCAS,EBWL,EBWS,EFWL,EFWS,    
!      9STEF,GRAV,PI,TCS,TCL,CCL,CCS,RMASSL,WPCC,WPM,WPA,WPCS,ROC,RMASSS,   
!      1ANGSHL,RSLAGL,RSLAGS,HNODT,VFAV,VGAV,QXAV,XWTSS(16),  
!      2TSCS(2),TSCL(2),ESCS(2),ESCL(2),CCSS(2),CCSL(2),ROSTLS,ROSTLL,
!      3XFRGAS,HMINC,TST(99),TSTOP(99),AINTP(99),BINTP(99),DRATIO(999),
!      4XBCN(999),XDCN(999),XBLT(15),ADEC(99),BDEC(99),APOUR(16,99),
!      5BPOUR(16,99),XWTC(14),BWIDTH,THCKCV,TMBOIL,TEBOIL,VFINT,ANGFAN,
!      6ALPMAX,THSHL,XFCABL,XNDMIN,DVMX,DAVMX,DEAVMX,DEMX,TDC,QDCU,QDCUO2,
!      7TSINJ,EINJ,DTINJ,TKINJ,ROEV,CPINJ,SURFT,VSINJ,EMINJ,TSINJO,EINJO,
!      8DTINJO,TKINJO,ROEVO,CPINJO,SURFTO,VSINJO,EMINJO,XLEADE,ARSUM,
!      9DBUBOX,UTRISE,TREMSH,DJET,DFALL,WEBER,FROUDE,XPSAITO,XPEPSTN,
!      1FRAG,XMBEDT,XMBED(16),XLPENT,XLPENA,UJET,UFALL,HFALL,ERPV,
!      2TJETT(99),DJETT(99),HWATP,XDOTJET,DVMXW,DAVMXW,DEMXW,DEAVMXW,
!      3QJETW,XSTMJF,TINTSJF,ESAT,DRDOOR,DRANL,EI,QDCBUO2,QDCBU,
!      4EBEDS,EBEDB
!       COMMON/PRINTB/ELEVAT(999),ELOLD(999),XDIST(999,999),XBTW(999,999),
!      1TEMP(999,999),ENTHP(999,999),EOLD(999,999),ENBLK(999),EBKOLD(999),
!      2TBULK(999),HITE(16,999),HITOLD(16,999),HTOT(999),HTOLD(999),
!      3HTCFT(999),HTCOEF(999),QFLUXT(999),QFLUXB(999),VEL(999),ELO(999),
!      4VELOLD(999),SRSCOR(16),AREA(999),RAD(999),ARC(999),VOLCN(16),
!      5VOID(999),VGJ(999),ZABLAT(999),ZABOLD(999),DCRUST(999),
!      6DCROLD(999),DABCON(999),DABOLD(999),DFILMT(999),DFOLT(999),
!      7SMFLX(4,999),XLSMF(4,999),TOTVOL,XFACMS(999),XMFLXA,XMCORT,
!      8VCORT,TOTOX,TOTMET,QFLXT,QFLXB,TIME,DTIME,XMCOR(16),VCOR(16),
!      9TCONI,RSAND,HDOWNC,TBOUND,EMISCN,PDRYWL,XDISTO(999),QOXT(999),
!      1XLENSH,XBTWO(999),RCOMP,WDOOR,RSUMP,RSHELL,RPED,TPED,ELSMP,
!      1TENDP(10,999),TFRZSH,TDEBRS,TKDEBR,PDEBR,CPDEBR,ENENDP(10,999),
!      2ENOLDP(10,999),DXVERT,DXSNK,XDSTE(10,999),XBTE(10,999),HXLA(999),
!      3HXLB(999),TSFEB(999),DCRS(999),DCRSLD(999),HCRS(16,999),
!      4HCRSLD(16,999),THETE0(10,999),THETE1(10,999),QSHELL,QSHELE,TSHELI,
!      5SIGOXE(999),FKOXE(999),RINJC,XLSEC,ANGSEC,ANINJC,XLCHAN,WCHNL,
!      6TEFZX(999),TIMSPC(999),DXNODE(999),TNORM(999),FRCSOL(999),
!      7ALPSPR(999),CRAMCON,HINTF,TSHLMX,XFRMX(999),XFROX(999),XFRTX(999),
!      8XMLMX(999),XMLOX(999),XMLTX(999),XTOTX(999),TIMEO,TMAX,EDOWN(999),
!      9HCP(999)
!       COMMON/HCONS/HMETAL(999),HOXIDE(999)  
!       COMMON/PROPI/ NMATC,NMATFI,NMATFF,ICAOH2,ICACO3,IMCCO3,IFH2O,     
!      1IVH2O,ICK2O,IVK2O,INA2O,ITIO2,ISIO2,ICAO,IMGO,IAL2O3,IFEO,IFE2O3, 
!      2IFE3O4,IFE,ICR,INI,IZR,IU,IB4C,IB,ICR2O3,INIO,IUO2,IZRO2,IB2O3,   
!      3NBCINT(999),NODES(999),NUMNOD,IMOX(28),IBAS,ILCS,ILL,NACTIV(999),     
!      4NBFRZM,NBFRZO,NABLFM,NDRNFM,NTYPMT(999,999),NDOOR,NBMADJ,NUMSHV,   
!      5NBSHL(999),NCRSTS(999),NUMSHH,NSKIPE,NACSH,NWAT,NPEND,NBCBOT,
!      6NCRTOP,NBFZOE,NBFZME,NGEOM,NL(999,999),NFRSCT,NLOGSH,NADAB,NINVIS,
!      7NSIMST,NSTEEL,NOVHT,NOVTK,NOVUM,NOVEM,NOVSIG,NPLLOC(999),NBPL,
!      8IXP(999),IYP(999),NVTPE,NSOLTP,NSOLF,NINTF,IFLGA(999),ICTYPE,ICTC,
!      9NPOURS,NSMP,NPED,NDOR,NSHL,NANULS,NSMPCV,NBOIL,NSWALL,NMVER,
!      1NCRTEM,NTHINC,NVELP,NITMAX,NENMAX,NPRINT,NPFREQ,NTIMSPC,NPLFREQ,
!      2NPLTOT,NJET,NJETP,NJETD,NJETND,NODCAP,NVELPW,NITMAXW,NENMXW,
!      3IFLGJ(999),NBEDCQ,ISHELE
!       COMMON /WATVARS/FCRUST(999),VLW(999),VLWOLD(999),DWAT(999),
!      1DWATOLD(999),EWAT(999),EWATOLD(999),TWAT(999),CORDDC(999),
!      2DSRDC(999),DHDC(999),TSRDC,TINTDC,HWATB(999),TSURFW(999),XMS(999),
!      3XMST,XINTS,ESRDTW(999),TSRDTW(999),DSRDTW(999),TSRDW,TINTDW,
!      4TWATI,ELDCO(999),ELDCX(999,99),CRDCX(999,99),TIMINJ(999,99),
!      5XDTINJ(999,99),TDTINJ(999,99),ELWATI,XMWAT,XMWATO,XBALW,
!      6HDRY(999),EINTW,XMCT(199),XMCDT(16,999),TMPCDT(999),CMPCDT(999),
!      7FDC(999),FCOV(999),FBED(999),FHEAT(999),XFACJ(999),
!      8XMBEDJ(16,999),XMBEDJT(999),PBED,QBED(999),QWATER(999),
!      9QSURFACE(999),QWATERT(999),HBED(999),POROSBED,XMCRDT(16,999),
!      1XMCRT(999),XMBDINT(999),XMT(999)
!       COMMON /WATINT/NDOWNC,NDC(999),NPTDC(999),NINJ,NINJP(999),
!      1NPTINJ(999)
!       COMMON/DATOVER/COVS,COVL,DHSOV,XMOLOV,ROVS,ROVL,TKOVS,TKOVL,VISOV,
!      1EMOV,SIGOV
!       COMMON/DEFUNC/CPLIQ,CPSOL,EFOS,EFOL,EFMS,EFML 
!       COMMON/PROPB/CPBM(999),FKB(999,999),DENB(999,999),DTDEB(999,999),
!      1EMIBM(999),DENCRS(999),ENCRS(999),FKRF(999),DENRF(999),CPRF(999)
!       COMMON/PROPM/DTDEM(999),CPMLT(999),FKMLT(999),DENMLT(999),
!      1SIGMLT(999),UMMLT(999),EMIMLT(999)
!       COMMON/DATSIMS/TSIS,TSIL,CSIS,CSIL,DHSIL,RSIS,RSIL,TKSIS,TKSIL,
!      1ESIL,XCSI(16)
!       DATA CENT /100.D0/
!       IF(NPRNT.GT.0) GO TO 1000
! C.....WRITE OUT HEADER INFORMATION.
!       WRITE(6,10)     
!    10 FORMAT(1X,'RESULTS OF MELTSPREAD3 ANALYSIS')   
!       WRITE(6,149)    
!   149 FORMAT(1X,30('-'))
!       WRITE(6,151)    
!   151 FORMAT(1X,30('-'),///)    
!       WRITE(6,152)    
!   152 FORMAT(1X,'USER-SPECIFIED INPUT DATA & COMPUTATIONAL OPTIONS:')   
!       WRITE(6,148)    
!   148 FORMAT(1X,49('-'),//)     
!       WRITE(6,153) TFOS,TFOL,TFMS,TFML    
!   153 FORMAT(1X,'OXIDE & METAL PHASE LIQUIDUS & SOLIDUS TEMPERATURES (K)
!      1',//,5X,'TFOS=',G12.5,5X,'TFOL=',G12.5,5X,'TFMS=',G12.5,5X,'TFML='
!      2,G12.5,//)      
!       IF(ICTC.LE.3) GO TO 1883  
!       IF(ICTC.EQ.4) GO TO 1885
!       WRITE(6,1886)
!  1886 FORMAT(1X,'BASEMAT IS COMPOSED ENTIRELY OF STEEL',//)
!       GO TO 1887
!  1885 CONTINUE
!       WRITE(6,1884)   
!  1884 FORMAT(1X,'CONCRETE TYPE IS USER-SPECIFIED',//)
!       GO TO 158
!  1883 CONTINUE
!       GO TO(154,155,156) ICTYPE 
!   154 WRITE(6,157)    
!   157 FORMAT(1X,'CONCRETE TYPE IS DEFAULT LIMESTONE COMMON SAND',//)    
!       GO TO 158
!   155 WRITE(6,159)    
!   159 FORMAT(1X,'CONCRETE TYPE IS DEFAULT BASALT',//)
!       GO TO 158
!   156 WRITE(6,160)    
!   160 FORMAT(1X,'CONCRETE TYPE IS DEFAULT LIMESTONE-LIMESTONE',//)      
!   158 CONTINUE
!       WRITE(6,161) TFWS,TFWL,TBWS,TBWL,TMCAS,TMCAL,TCAS,TCAL,TCS,TCL    
!   161 FORMAT(5X,'CONCRETE DECOMPOSITION TEMPERATURE RANGES (K)
!      1',//,5X,'TH2O,S=',G12.5,10X,'TH2O,L=',G12.5,10X,'TCA(OH)2,S=',G12.
!      25,4X,'TCA(OH)2,L=',G12.5,/,5X,'TMGCA(CO3)2,S=',G12.5,3X,'TMGCA(CO3
!      3)2,L=',G12.5,3X,'TCA(CO3)2,S=',G12.5,3X,'TCA(CO3)2,L=',G12.5,/,   
!      45X,'TSOLIDUS=',G12.5,8X,'TLIQUIDUS=',G12.5,//)
!       PFWS=EFWS/1.D6  
!       PFWL=EFWL/1.D6  
!       PBWS=EBWS/1.D6  
!       PBWL=EBWL/1.D6  
!       PMCAS=EMCAS/1.D6
!       PMCAL=EMCAL/1.D6
!       PCAS=ECAS/1.D6  
!       PCAL=ECAL/1.D6  
!       PCS=ECS/1.D6    
!       PCL=ECL/1.D6    
!       WRITE(6,233) PFWS,PFWL,PBWS,PBWL,PMCAS,PMCAL,PCAS,PCAL,PCS,PCL    
!   233 FORMAT(5X,'CORRESPONDING CONCRETE DECOMPOSITION ENTHALPIES (MJ/KG)
!      1',//,5X,'EH2O,S=',G12.5,10X,'EH2O,L=',G12.5,10X,'ECA(OH)2,S=',G12.
!      25,4X,'ECA(OH)2,L=',G12.5,/,5X,'EMGCA(CO3)2,S=',G12.5,3X,'EMGCA(CO3
!      3)2,L=',G12.5,3X,'ECA(CO3)2,S=',G12.5,3X,'ECA(CO3)2,L=',G12.5,/,/, 
!      45X,'ESOLIDUS=',G12.5,8X,'ELIQUIDUS=',G12.5,//)
!       WRITE(6,162) TCONI,RSAND  
!   162 FORMAT(5X,'INITIAL CONCRETE TEMPERATURE & EQUIVALENT CONCRETE ROUG
!      1HNESS',//,5X,'TCONI=',G12.5,' K',3X,'RSAND=',G12.5,//)  
!       P1=XMOL(IMGO)*CENT
!       P2=XMOL(ICAO)*CENT
!       P3=XMOL(ISIO2)*CENT
!       P4=XMOL(IAL2O3)*CENT      
!       P5=XMOL(ICAOH2)*CENT      
!       P6=XMOL(ICACO3)*CENT      
!       P7=XMOL(IMCCO3)*CENT      
!       P8=(XMOL(IFH2O)+XMOL(IVH2O))*CENT   
!       P9=(XMOL(ICK2O)+XMOL(IVK2O))*CENT   
!       P10=XMOL(ITIO2)*CENT      
!       P11=XMOL(INA2O)*CENT      
!       P12=XMOL(IFEO)*CENT
!       P13=XMOL(IFE2O3)*CENT     
!       P14=XMOL(IFE3O4)*CENT     
!       P15=XMOL(IFE)*CENT
!       P16=XMOL(ICR)*CENT
!       WRITE(6,199) P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,P11,P12,P13,P14,P15,P1
!      16     
!   199 FORMAT(5X,'CONSTITUENT',9X,'MOLE',/,23X,'FRACTION',//,  
!      15X,'MGO',11X,G12.5,/,     
!      15X,'CAO',11X,G12.5,/,     
!      15X,'SIO2',10X,G12.5,/,    
!      15X,'AL2O3',9X,G12.5,/,    
!      15X,'CA(OH)2',7X,G12.5,/,  
!      15X,'CACO3',9X,G12.5,/,    
!      15X,'MGCA(CO3)2',4X,G12.5,/,
!      15X,'H2O',11X,G12.5,/,     
!      15X,'K2O',11X,G12.5,/,     
!      15X,'TIO2',10X,G12.5,/,    
!      15X,'NA2O',10X,G12.5,/,    
!      15X,'FEO',11X,G12.5,/,     
!      15X,'FE2O3',9X,G12.5,/,    
!      15X,'FE3O4',9X,G12.5,/,    
!      15X,'FE',12X,G12.5,/,      
!      15X,'CR',12X,G12.5,//)     
!       P1=ROC*RMASSS   
!       P2=ROC*RSLAGS   
!       P3=ROC*RSLAGL   
!       WRITE(6,89) ROC,P1,P2,P3  
!    89 FORMAT(5X,'CONCRETE AND SLAG DENSITIES (KG/M**3)',//,   
!      15X,'ROC=',4X,G12.5,/,     
!      15X,'ROC,S=',2X,G12.5,/,   
!      15X,'RSLAG,S=',G12.5,/,    
!      15X,'RSLAG,L=',G12.5,//)   
!  1887 CONTINUE
! C.....IF SIMULANT STEEL IS USED, WRITE OUT PROPERTY DATA
!       IF(NSTEEL.EQ.0.AND.ICTC.LE.4) GO TO 797
!       IF(NSIMST.EQ.0) GO TO 797
!       WRITE(6,2305) TSIS,TSIL,CSIS,CSIL,DHSIL,RSIS,RSIL,TKSIS,TKSIL,ESIL
!  2305 FORMAT(5X,'SIMULANT STEEL DATA USED, PROPERTIES FOLLOW:',//,5X,
!      1 'SOLIDUS TEMPERATURE=  ',1X,G12.5,' K',/,5X, 
!      2 'LIQUIDUS TEMPERATURE= ',1X,G12.5,' K',/,5X, 
!      3 'SOLID SPECIFIC HEAT=  ',1X,G12.5,' J/KG-K',/,5X, 
!      4 'LIQUID SPECIFIC HEAT= ',1X,G12.5,' J/KG-K',/,5X, 
!      5 'HEAT OF FUSION=',1X,G12.5,' J/KG',/,5X, 
!      6 'SOLID PHASE DENSITY=  ',1X,G12.5,' KG/M**3',/,5X, 
!      7 'LIQUID PHASE DENSITY= ',1X,G12.5,' KG/M**3',/,5X, 
!      8 'SOLID PHASE COND.=    ',1X,G12.5,' W/M-K',/,5X, 
!      9 'LIQUID PHASE COND.=   ',1X,G12.5,' W/M-K',/,5X, 
!      1 'MATERIAL EMISSIVITY=  ',1X,G12.5) 
!       WRITE(6,2300) 
!  2300 FORMAT(/,5X,'SIMULANT STEEL FRACTIONAL COMPOSITION')
!       WRITE(6,1268) (XCSI(K),K=1,16)
!  1268 FORMAT(/,5X, ' ZR=',G12.5,5X,' FE=',G12.5,5X,' CR=',G12.5,5X,' NI=
!      1',G12.5,/,6X,' B=',G12.5,6X,' U=',G12.5,4X,' B4C=',G12.5,/,3X,' ZR
!      2O2=',G12.5,4X,' FEO=',G12.5,2X,' FE2O3=',G12.5,2X,' FE3O4=',G12.5,
!      3/,3X,'CR2O3=',G12.5,4X,' NIO=',G12.5,3X,' B2O3=',G12.5,4X,' UO2='
!      4,G12.5,/3X,' SLAG=',G12.5,//)
!   797 CONTINUE
!       WRITE(6,15)     
!    15 FORMAT(1X,'HEAT TRANSFER, SOLIDIFACTION, CRUST FORMATION, CRUST PO
!      1ROSITY, AND ABLATED SUBSTRATE ENTRAINMENT OPTIONS',//)
!       IF(NADAB.EQ.0) GO TO 1141
!       WRITE(6,2151)
!  2151 FORMAT(5X,'NADAB=1:   ADIABATIC SPREADING OPTION SELECTED',//)
!       GO TO 1839
!  1141 CONTINUE
!    16 FORMAT(5X,'NBFRZM=1:  BULK FREEZING (NO CRUST FORMATION) FOR METAL
!      1 PHASE')
!    17 FORMAT(5X,'NBFRZM=2:  STABLE CRUST GROWTH WITH BULK FREEZING FOR M
!      1ETAL PHASE')    
!    18 FORMAT(5X,'NBFRZO=1:  BULK FREEZING (NO CRUST FORMATION) FOR OXIDE
!      1 PHASE')
!    19 FORMAT(5X,'NBFRZO=2:  STABLE CRUST GROWTH WITH BULK FREEZING FOR O
!      1XIDE PHASE')    
!    20 FORMAT(5X,'NDRNFM=1:  STABLE GROWING CRUST IS POROUS')  
!    21 FORMAT(5X,'NDRNFM=2:  STABLE GROWING CRUST IS NON-POROUS')
!    22 FORMAT(5X,'NABLFM=1:  ABLATED SUBSTRATE REMAINS AS FILM ON SURFACE
!      1')    
!    23 FORMAT(5X,'NABLFM=2:  ABLATED SUBSTRATE MIXED OFF SURFACE INTO BUL
!      1K MELT')
!    24 FORMAT(5X,'MELT BULK SOLID FRACTION AT SOLIDIFICATION: ALPMAX=',
!      1G12.5)
!       WRITE(6,24) ALPMAX
!       IF(NBFRZM.EQ.1) WRITE(6,16)
!       IF(NBFRZM.EQ.2) WRITE(6,17)
!       IF(NBFRZO.EQ.1) WRITE(6,18)
!       IF(NBFRZO.EQ.2) WRITE(6,19)
!       IF(NBFRZO.EQ.1.AND.NBFRZM.EQ.1) GO TO 916     
!       IF(NDRNFM.EQ.1) WRITE(6,20)
!       IF(NDRNFM.EQ.2) WRITE(6,21)
!   916 CONTINUE
!       IF(NABLFM.EQ.1) WRITE(6,22)
!       IF(NABLFM.EQ.2) WRITE(6,23)
!       IF(NWAT.GT.0) GO TO 135   
!       WRITE(6,136) PDRYWL,TBOUND,EMISCN   
!   136 FORMAT(//,1X,'CONTAINMENT ATMOSPHERIC CONDITIONS',      
!      1//,5X,'THE CAVITY IS DRY',//,10X,'ATMOSPHERIC PRESSURE=',G12.5,   
!      2' MPA',/,10X,'BOUNDARY STRUCTURE TEMPERATURE=',G12.5,' K',/,      
!      310X,'BOUNDARY STRUCTURE RADIATIVE EMMISIVITY=',G12.5,//)
!       GO TO 137
!   135 CONTINUE
!       CALL CONWAT(TSAT,KL,PL,CL,UL,HLV,EWL,EWV,CWV,SIGMA,PDRYWL)
!       IF(NWAT.EQ.2) GO TO 888
!       WRITE(6,134) PDRYWL,TBOUND,EMISCN,TSAT,HDOWNC      
!   134 FORMAT(//,1X,'SPREADING CAVITY ATMOSPHERIC CONDITIONS'  
!      1,//,5X,'THE CAVITY IS WET',//,10X,'ATMOSPHERIC PRESSURE=',G12.5,  
!      2' MPA',/,10X,'BOUNDARY STRUCTURE TEMPERATURE=',G12.5,' K',/,10X,  
!      3'BOUNDARY STRUCTURE RADIATIVE EMMISIVITY=',G12.5,/,10X,'SYSTEM SAT
!      4URATION TEMPERATURE=',G12.5,' K',/,10X,'MAX. WATER HEIGHT=',G12.5, 
!      5' M',//)
!       GO TO 137
!   888 CONTINUE
!       OPEN(UNIT=3,FILE='waterdata.dat')
!       WRITE(3,533)
!   533 FORMAT(3X,'TIME(S)',5X,'FINJ(KG/S)',5X,'FDC(KG/S)',4X,'FSTM(KG/S)'
!      1 ,5X,'TINJ(KG)',7X,'TDC(KG)',6X,'TSTM(KG)',5X,'TWATFLR(KG)',4X,
!      2 'WBAL(KG)',4X,'FSTMJT(KG/S)',3X,'TSTMJT(KG)')
!       WRITE(6,234) PDRYWL,TBOUND,EMISCN,TSAT,TWATI,ELWATI
!   234 FORMAT(//,1X,'SPREADING CAVITY ATMOSPHERIC CONDITIONS'  
!      1,//,5X,'THE CAVITY IS WET',//,10X,'ATMOSPHERIC PRESSURE=',G12.5,  
!      2' MPA',/,10X,'BOUNDARY STRUCTURE TEMPERATURE=',G12.5,' K',/,10X,  
!      3'BOUNDARY STRUCTURE RADIATIVE EMMISIVITY=',G12.5,/,10X,'SYSTEM SAT
!      4URATION TEMPERATURE=',G12.5,' K',/,10X,'INITIAL WATER TEMPERATURE=
!      5',G12.5,' K',/,10X,'INITIAL WATER HEIGHT=',G12.5, ' M',//) 
!       IF(NINJ.EQ.0) GO TO 798 
!       WRITE(6,733) 
!   733 FORMAT(5X,'WATER INJECTION AT THE FOLLOWING NODES:',//) 
!       WRITE(6,*) (NINJP(I),I=1,NINJ)
!   798 CONTINUE
!       IF(NDOWNC.EQ.0) GO TO 137
!       WRITE(6,334)
!   334 FORMAT(//,5X,'WATER SPILLOVER ALLOWED AT THE FOLLOWING NODES:',//)
!       WRITE(6,*) (NDC(I),I=1,NDOWNC)
!   137 CONTINUE
!       WRITE(6,26)     
!    26 FORMAT(//,1X,'MELT/SUBSTRATE INTERFACIAL HEAT TRANSFER CORRELATION
!      1 OPTION',//)
!    33 FORMAT(5X,'BRADLEY MODEL WITH CONDUCTION LIMIT')
!    34 FORMAT(5X,'KAO & KAZIMI REVISED PERIODIC CONTACT MODEL WITH CONDUC
!      1TION LIMIT')    
!   839 FORMAT(5X,'SUM OF FORCED CONVECTION AND BRADLEY MODELS')
!   841 FORMAT(5X,'SUM OF FORCED CONVECTION AND PERIODIC CONTACT MODELS') 
!    49 FORMAT(5X,'DITTUS-BOLTLER FORCED CONVECTION CORRELATION')
!       IF(NBCBOT.EQ.1) WRITE(6,33)
!       IF(NBCBOT.EQ.2) WRITE(6,34)
!       IF(NBCBOT.EQ.3) WRITE(6,49)
!       IF(NBCBOT.EQ.4) WRITE(6,839)
!       IF(NBCBOT.EQ.5) WRITE(6,841)
!       WRITE(6,44)     
!    44 FORMAT(//,1X,'THIN TOP CRUST BOUNDARY CONDITION OPTION',//)
!    45 FORMAT(5X,'THIN CRUST EXISTS REGARDLESS OF GAS FLUX',//)
!    46 FORMAT(5X,'THIN CRUST EXISTS UNLESS LOCAL GAS FLUX IS NON-ZERO',//
!      1)     
!    47 FORMAT(5X,'MELT-SUBSTRATE INTERFACE HEAT TRANSFER RESISTANCE = ',
!      1G12.5,' W/m**2-K',//)
!       ND=NCRTOP+1     
!       IF(ND.EQ.1) WRITE(6,46)   
!       IF(ND.EQ.2) WRITE(6,45)   
!       IF(NINTF.EQ.1) WRITE(6,47) HINTF
!  1839 CONTINUE
!       IF(NGEOM.EQ.2) WRITE(6,831)
!   831 FORMAT(1X,'GENERAL USER-SPECIFIED NODALIZATION INPUT OPTION')     
!       IF(NGEOM.EQ.1) WRITE(6,164) RSUMP,RPED,TPED,RSHELL,WDOOR,NDOOR,RCO
!      1MP    
!   164 FORMAT(1X,'MARK I CONTAINMENT GEOMETRY DIMENSIONS ',//,5X,'SUMP HY
!      1DRAULIC RADIUS=',G12.5,' M',/,5X,'PEDESTAL WALL INNER RADIUS=',G12
!      2.5,' M',/,5X,'PEDESTAL WALL THICKNESS=',G12.5,' M',/,5X,'DRYWELL S
!      3HELL RADIUS=',G12.5,' M',/,5X,'PEDESTAL DOORWAY WIDTH=',G12.5,' M'
!      4,/,5X,'NUMBER OF PEDESTAL DOORWAY OPENINGS=',I5,/,5X,'MELT SOURCE 
!      5DISPERSION RADIUS=',G12.5,' M')     
!       WRITE(6,166)    
!   166 FORMAT(//,1X,'SPREADING NODAL RADII, ARC LENGTHS, AREAS, AND ELEVA
!      1TIONS',//)      
!       WRITE(6,11)     
!    11 FORMAT(6X,'NODE',5X,'RADIUS',9X,'ARC',10X,'AREA',7X,'ELEVATION',7X
!      1,'CAP HEIGHT')  
!       WRITE(6,61)     
!    61 FORMAT(7X,'NO.',7X,'(M)',10X,'(M)',9X,'(M**2)',9X,'(M)',13X,'(M)',
!      1/)
!       DO 12 KN=1,NUMNOD
!       WRITE(6,13) KN,RAD(KN),ARC(KN),AREA(KN),ELEVAT(KN),HCP(KN)      
!    12 CONTINUE
!    13 FORMAT(7X,I3,5(2X,G12.5)) 
!       NUP=NUMNOD+1    
!       WRITE(6,14) ARC(NUP)      
!    14 FORMAT(25X,G12.5)
!       IF(NJET.EQ.0) GO TO 119
!       OPEN(UNIT=4,FILE='jetdata.dat')
!       WRITE(4,333)
!   333 FORMAT(3X,'TIME(S)',6X,'HFALL(M)',5X,'DJET(M)',6X,'DFALL(M)',5X,
!      1'UJET(M)',6X,'UFALL(M)',5X,'WEBER(-)',5X,'FROUDE(-)',4X,
!      2'XPSAITO(M)',3X,'XPEPSTN(M)',3X,'XLPENT(M)',4X,'XLPENA(M)',5X,
!      3'DWAT(M)',6X,'FRAG(-)',5X,'XMBEDT(KG)',3X,'XMCORT(KG)',3X,
!      4'TSINJO(K)',5X,'TSINJ(K)',3X,'EINJO(J/KG)',3X,'EINJ(J/KG)',3X,
!      5'PV(KG/M3)',4X,'PL(KG/M3)',3X,'XDOTJ(KG/S)')
!       IF(NJET.EQ.1) WRITE(6,113) ERPV
!   113 FORMAT(//,1X,'MELT JET BREAKUP MODEL WITH THERMAL MIXING INVOKED,
!      1 RPV ELEVATION= ',G12.5, ' M')
!       IF(NJET.EQ.2) WRITE(6,114) ERPV,POROSBED
!   114 FORMAT(//,1X,'MELT JET BREAKUP MODEL WITH PARTICLE BED FORMATION A
!      1SSUMED, RPV ELEVATION= ',G12.5,' M, BED POROSITY= ',G12.5)
!       WRITE(6,115)
!   115 FORMAT(//,5X,'RPV HOLE DIAMETER INTERPOLATION TABLE',//,8X,'TIME (
!      1SEC)',6X,'DJET (M)',/)
!       DO 116 K=1,NJETD
!       WRITE(6,117) TJETT(K),DJETT(K)
!   117 FORMAT(6X,G12.5,6X,G12.5)
!   116 CONTINUE
!       WRITE(6,1152) 
!  1152 FORMAT(/,'NODES THAT ARE RECEPTORS FOR FRAGMENTED JET DEBRIS:',/)
!       DO 1153 K=1,NUMNOD
!       IF(IFLGJ(K).EQ.1) WRITE(6,1120) K
!  1120 FORMAT(5X,I3)
!  1153 CONTINUE
!   119 CONTINUE
!       IF(NINVIS.EQ.1) WRITE(6,1151)
!  1151 FORMAT(//,1X,'INVISID MELT SPREADING OPTION HAS BEEN SELECTED')
!       IF(NOVHT.EQ.0) GO TO 3306
!       WRITE(6,3305) XMOLOV,COVS,COVL,DHSOV,ROVS,ROVL
!  3305 FORMAT(//,5X,'SIMULANT MELT DATA USED, PROPERTIES FOLLOW:',//,5X,
!      1 'MOLECULAR WEIGHT= ',1X,G12.5,' G/MOLE',/,5X,
!      2 'SOLID PHASE SPECIFIC HEAT=  ',1X,G12.5,' J/KG-K',/,5X, 
!      3 'LIQUID PHASE SPECIFIC HEAT= ',1X,G12.5,' J/KG-K',/,5X, 
!      4 'HEAT OF FUSION=   ',1X,G12.5,' J/KG',/,5X, 
!      5 'SOLID PHASE DENSITY=',1X,G12.5,' KG/M**3',/,5X, 
!      6 'LIQUID PHASE DENSITY=',1X,G12.5,' KG/M**3')
!  3306 CONTINUE
!       IF(NOVTK.EQ.1) WRITE(6,3307) TKOVS,TKOVL
!  3307 FORMAT(//,5X,'USER-INPUT MELT THERMAL COND. DATA USED:',//,5X,
!      1 'SOLID PHASE CONDUCTIVITY=',1X,G12.5,' W/M-K',/,5X, 
!      2 'LIQUID PHASE CONDUCTIVITY=',1X,G12.5,' W/M-K')
!       IF(NOVUM.EQ.1) WRITE(6,3308) VISOV
!  3308 FORMAT(//,5X,'USER-INPUT MELT LIQUID PHASE VISCOSITY DATA USED:'
!      1 ,//,5X,'LIQUID PHASE VISCOSITY =',1X,G12.5,' KG/M-SEC')
!       IF(NOVUM.EQ.1) GO TO 3315
!       IF(NVTPE.EQ.1) WRITE(6,3312) 
!  3312 FORMAT(//,5X,'MELT VISCOSITY CALCULATED WITH ISHII-ZUBER CORRELATI
!      1ON')
!       IF(NVTPE.EQ.2) WRITE(6,3313) CRAMCON
!  3313 FORMAT(//,5X,'MELT VISCOSITY CALCULATED WITH THE RAMACCIOTTI CORRE
!      1LATION, CONSTANT = ',G12.5)
!       IF(NSOLTP.EQ.2) GO TO 3319
!       WRITE(6,3314)
!  3314 FORMAT(//,5X,'OXIDE PHASE SOLID CONTENT CALCULATED ASSUMING A LINE
!      1AR VARIATION BETWEEN THE LIQUIDUS AND SOLIDUS')
!       GO TO 3315
!  3319 CONTINUE
!       WRITE(6,3316) 
!  3316 FORMAT(//,5X,'OXIDE PHASE SOLID CONTENT CALCULATED WITH A USER-SUP
!      1PLIED INTERPOLATION TABLE:',//,14X,'TNORM',9X,'FSOL',/)
!       DO 3317 K=1,NSOLF
!       WRITE(6,3318) TNORM(K),FRCSOL(K)
!  3318 FORMAT(10X,2(G12.5,2X))
!  3317 CONTINUE
!  3315 CONTINUE
!       IF(NOVEM.EQ.1) WRITE(6,3309) EMOV
!  3309 FORMAT(//,5X,'USER-INPUT MELT EMISSIVITY DATA USED:',//,5X,
!      1 'EMISSIVITY =',1X,G12.5)
!       IF(NOVSIG.EQ.1) WRITE(6,3310) SIGOV
!  3310 FORMAT(//,5X,'USER-INPUT MELT SURFACE TENSION DATA USED:',//,5X,
!      1 'MELT SURFACE TENSION =',1X,G12.5,' N/M')
!       IF(NSKIPE.GT.0) GO TO 75  
!       WRITE(6,76)     
!    76 FORMAT(//,1X,'SHELL HEATUP CALCULATION IS NOT TO BE PERFORMED')   
!       GO TO 62
!    75 CONTINUE
!       DP=DXVERT*CENT  
!       NP=NUMSHV-1     
!       WRITE(6,77) HNODT,DP,ANGSHL,NUMSHH,NP,NBMADJ  
!    77 FORMAT(//,1X,'SHELL HEATUP MODEL SPECIFICATIONS',//,5X,'TOTAL HEIG
!      1HT OF NODALIZED SHELL=',G12.5,' M',/,5X,'VERTICAL NODE HEIGHTS=',F
!      212.5,' CM',/,5X,'SHELL ANGLE WITH RESPECT TO VERTICAL=',G12.5,' DE
!      3GREES',/,5X,'NUMBER OF HORIZONTAL NODES=',I5,/,5X,'NUMBER OF VERTI
!      4CAL NODES=',I5,/,5X,'HORIZONTAL SPREADING NODE ADJACENT TO SHELL='
!      5,I5,/,5X,'SHELL CRUST GROWTH OPTIONS:',//)    
!       IF(NBFZOE.EQ.2.AND.NBFZME.EQ.2) WRITE(6,65)   
!       IF(NBFZOE.EQ.1.AND.NBFZME.EQ.1) WRITE(6,66)   
!       IF(NBFZOE.EQ.1.AND.NBFZME.EQ.2) WRITE(6,67)   
!       IF(NBFZOE.EQ.2.AND.NBFZME.EQ.1) WRITE(6,68)   
!    65 FORMAT(10X,'CRUST GROWTH PERMITTED ON SHELL',//)
!    66 FORMAT(10X,'NO CRUST GROWTH PERMITTED ON SHELL',//)     
!    67 FORMAT(10X,'METAL CRUST GROWTH PERMITTED ON SHELL',//)  
!    68 FORMAT(10X,'OXIDE CRUST GROWTH PERMITTED ON SHELL',//)  
!       WRITE(6,55)     
!    55 FORMAT(5X,'HORIZONTAL NODE DISTANCES FROM SHELL SURFACE',//,10X,'H
!      1ORIZONTAL',4X,'DISTANCE',/,11X,'NODE NO.',7X,'(CM)',//) 
!       XLE=0.D0
!       DO 56 KN=1,NUMSHH
!       IF(KN.GT.1) XLE=XLE+CENT*XDSTE(KN-1,1)
!       WRITE(6,57) KN,XLE
!    57 FORMAT(14X,I2,6X,G12.5)   
!    56 CONTINUE
!    62 CONTINUE
!       WRITE(6,451)    
!   451 FORMAT(//,1X,'****END SUMMARY OF USER INPUT DATA; CALCULATION IS I
!      1NITIATED****')  
!       WRITE(6,411)    
!   411 FORMAT(//)      
!       GO TO 1100      
!  1000 CONTINUE
!       WRITE(6,3552) TIME
!  3552 FORMAT(1X,'TIME=',G12.5,/)      
!       NACPLT=0
!       DO 899 KDP=1,NUMNOD
!       IF(NACTIV(KDP).EQ.1) NACPLT=NACPLT+1
!   899 CONTINUE
!       IF(NACPLT.GT.0) GO TO 901 
!       WRITE(6,902)    
!   902 FORMAT(5X,'PRINTS ROUTINE CALLED, BUT NO CORE ON THE FLOOR')      
!       GO TO 1100      
!   901 CONTINUE
!       NDRP=NACPLT
!       IF(NWAT.EQ.2) NDRP=NUMNOD
!       IF(NWAT.LT.2) WRITE(6,3553)
!  3553 FORMAT(1X,'BOUNDARY CONDITION, BASEMAT ELEVATION, SURFACE TEMPERAT
!      1URE, ABLATION DEPTH,  ',/,1X,'CRUST DEPTH, FILM DEPTH, AND SPREADI
!      2NG VELOCITY',//,5X,'NODE',3X,'BC',5X,'ELEVATION',6X,'SURFACE',6X,'
!      3ABLATION',8X,'CRUST',9X,'FILM',8X,'VELOCITY',/,6X,'NO.',2X,'FLAG',
!      47X,'(M)',9X,'TEMP (K)',4X,'DEPTH (CM)',4X,'DEPTH (CM)',4X,'DEPTH (
!      5CM)',7X,'(M/S)',/)
!       IF(NWAT.EQ.2) WRITE(6,4553)
!  4553 FORMAT(1X,'BOUNDARY CONDITION, BASEMAT ELEVATION, SURFACE TEMPERAT
!      1URE, ABLATION DEPTH,  ',/,1X,'CRUST DEPTH, FILM DEPTH, AND SPREADI
!      2NG VELOCITIES',//,5X,'NODE',3X,'BC',5X,'ELEVATION',6X,'SURFACE',6X
!      3,'ABLATION',8X,'CRUST',9X,'FILM',8X,'MELT VEL',4X,'WATER VEL',/,6X
!      4,'NO.',2X,'FLAG',7X,'(M)',9X,'TEMP (K)',4X,'DEPTH (CM)',5X,'DEPTH
!      4(CM)',4X,'DEPTH (CM)',6X,'(M/S)',7X,'(M/S)',/)
!       DO 3555 KN=1,NDRP
!       DA=CENT*DABCON(KN)
!       DC=CENT*DCRUST(KN)
!       DF=CENT*DFILMT(KN)
!       VL=VEL(KN)      
!       VW=VLW(KN)
!       IF(NWAT.LT.2)WRITE(6,5556) KN,NBCINT(KN),ELEVAT(KN),TEMP(1,KN),
!      1 DA,DC,DF,VL
!       IF(NWAT.EQ.2) WRITE(6,3556) KN,NBCINT(KN),ELEVAT(KN),TEMP(1,KN),
!      1 DA,DC,DF,VL,VW     
!  3555 CONTINUE
!  3556 FORMAT(5X,I4,2X,I4,7(2X,G12.5))     
!  5556 FORMAT(5X,I4,2X,I4,6(2X,G12.5))     
!       IF(NWAT.LT.2) WRITE(6,6557)
!  6557 FORMAT(//,1X,'MELT TEMPERATURE, ENTHALPY, COLLAPSED DEPTHS, TOP AN
!      1D BOTTOM HEAT FLUXES,',/,1X,'AND OXIDATION ENERGY FLUX',//,5X,'NOD
!      2E',3X,'TEMPERATURE',4X,'ENTHALPY',5X,'METAL DEPTH',3X,'OXIDE DEPTH
!      3',3X,'TOTAL DEPTH',4X,'TOP FLUX',5X,'BOTTOM FLUX',3X,'OXID. FLUX',
!      4/,6X,'NO.',7X,'(K)',9X,'(MJ/KG)',9X,'(CM)',10X,'(CM)',10X,'(CM)',7
!      5X,'(MW/M**2)',5X,'(MW/M**2)',5X,'(MW/M**2)',/)
!       IF(NWAT.EQ.2) WRITE(6,3557)
!  3557 FORMAT(//,1X,'MELT TEMPERATURE, ENTHALPY, COLLAPSED DEPTHS, TOP AN
!      1D BOTTOM HEAT FLUXES,',/,1X,'OXIDATION ENERGY FLUX, AND WATER DEPT
!      2H-TEMPERATURE',//,5X,'NODE',3X,'TEMPERATURE',4X,'ENTHALPY',5X,'MET
!      3AL DEPTH',3X,'OXIDE DEPTH',3X,'TOTAL DEPTH',4X,'TOP FLUX',4X,'BOTT
!      4OM FLUX', 3X,'OXID. FLUX',4X,'WATER TEMP',3X,'WATER DEPTH',/,6X,'N
!      4O.',7X,'(K)',9X,'(MJ/KG)',9X,'(CM)',10X,'(CM)',10X,'(CM)',7X,'(MW/
!      5M**2)',4X,'(MW/M**2)',5X,'(MW/M**2)',7X,'(K)',11X,'(CM)',/)
!       DO 3559 KN=1,NDRP
!       EN=1.D-6*ENBLK(KN)
!       HM=CENT*HMETAL(KN)
!       HO=CENT*HOXIDE(KN)
!       HT=CENT*HTOT(KN)
!       DW=CENT*DWAT(KN)
!       QT=1.D-6*QFLUXT(KN)
!       QB=1.D-6*QFLUXB(KN)
!       QO=1.D-6*QOXT(KN)
!       IF(NWAT.LT.2) WRITE(6,4560) KN,TBULK(KN),EN,HM,HO,HT,QT,QB,QO
!       IF(NWAT.EQ.2) WRITE(6,3560) KN,TBULK(KN),EN,HM,HO,HT,QT,QB,QO,
!      1 TWAT(KN),DW
!  3559 CONTINUE
!  4560 FORMAT(5X,I4,8(2X,G12.5)) 
!  3560 FORMAT(5X,I4,10(2X,G12.5)) 
!       WRITE(6,3561)   
!  3561 FORMAT(//,1X,'CONCRETE DECOMPOSITION GAS MASS FLUXES, AND CORRESPO
!      1NDING SUPERFICAL GAS VELOCITY',/,1X,'AND MELT VOID FRACTION',//,5X
!      1,'NODE',3X,'FREE WATER',6X,'CA(OH)2',6X,'MCA(CO3)2',7X,'CACO3',5X,
!      2'GAS VELOCITY',2X,'VOID FRACTION',/,6X,'NO.',3X,'(KG/M**2 S)',3X,'
!      3(KG/M**2 S)',3X,'(KG/M**2 S)',3X,'(KG/M**2 S)',6X,'(M/S)',10X,'(-)
!      4',/)  
!       DO 3564 KN=1,NACPLT
!       WRITE(6,3565) KN,SMFLX(1,KN),SMFLX(2,KN),SMFLX(3,KN),SMFLX(4,KN),V
!      1GJ(KN),VOID(KN) 
!  3564 CONTINUE
!  3565 FORMAT(5X,I4,6(2X,G12.5)) 
!       WRITE(6,7233)   
!  7233 FORMAT(//,1X,'SPREADING MELT THERMOPHYSICAL PROPERTIES',//,5X,'NOD
!      1E',7X,'K',13X,'P',12X,'CP',11X,'SIGMA',7X,'VISCOSITY',5X,'EMISIVIT
!      2Y',7X,'DT/DE',5X,'SOL. FRAC.',/,13X,'(W/M*K)',6X,'(KG/M**3)',5X,'(
!      3J/KG*K)',8X,'(N/M)',7X,'(KG/M*S)',9X,'(-)',8X,'(KG*K/J)',6X,'(-)',
!      4/)   
!       DO 7324 KDP=1,NACPLT      
!       IF(HTOT(KDP).LE.0.D0) GO TO 7324    
!       WRITE(6,7326) KDP,FKMLT(KDP),DENMLT(KDP),CPMLT(KDP),SIGMLT(KDP),  
!      1UMMLT(KDP),EMIMLT(KDP),DTDEM(KDP),ALPSPR(KDP)
!  7326 FORMAT(5X,I3,8(2X,G12.5)) 
!  7324 CONTINUE
!       WRITE(6,268)    
!   268 FORMAT(//,1X,'MASS OF MELT CONSTITUENTS EJECTED FROM VESSEL (KG)')
!       WRITE(6,167) (XMCOR(KD),KD=1,16)
!   167 FORMAT(//,5X,'MZR=',G12.5,5X,'MFE=',G12.5,5X,'MCR=',G12.5,5X,'MNI=
!      1',G12.5,/,6X,'MB=',G12.5,6X,'MU=',G12.5,4X,'MB4C=',G12.5,3X,'MZRO2
!      2=',G12.5,/,4X,'MFEO=',G12.5,2X,'MFE2O3=',G12.5,2X,'MFE3O4=',G12.5,
!      32X,'MCR2O3=',G12.5,/,4X,'MNIO=',G12.5,3X,'MB2O3=',G12.5,4X,'MUO2='
!      4,G12.5,3X,'MSLAG=',G12.5,//)
!       XFMET=0.D0      
!       XFOX=0.D0
!       DO 221 KD=1,16  
!       CALL INDEX(KD,KJ)
!       RFAC=ROMLIQ(KJ) 
!       IF(KD.EQ.16) RFAC=RSLAGL*ROC
!       VOLCN(KD)=VOLCN(KD)*RFAC  
!       IF(KD.LE.7) XFMET=XFMET+VOLCN(KD)   
!       IF(KD.GE.8) XFOX=XFOX+VOLCN(KD)     
!   221 CONTINUE
!       XFTOT=XFMET+XFOX
!       IF(NJET.LT.2) GO TO 223
!       WRITE(6,368)    
!   368 FORMAT(1X,'TOTAL MASS OF MELT CONSTITUENTS RENDERED IN A PARTICLE 
!      1BED (KG)')
!       WRITE(6,167) (XMBED(KD),KD=1,16)
!       WRITE(6,2152) 
!  2152 FORMAT(/,'PARTICLE BED MASS IN SPECIFIED RECEPTOR NODES:',/)
!       DO 2153 K=1,NUMNOD
!       IF(IFLGJ(K).EQ.1) WRITE(6,2120) K,XMBEDJT(K)
!  2120 FORMAT(5X,'NODE=',I3,' MASS=',G12.5,' KG')
!  2153 CONTINUE
!       WRITE(6,411)
!   223 CONTINUE
!       WRITE(6,170)    
!   170 FORMAT(1X,'MASS OF MELT AND SLAG CONSTITUENTS REMAINING IN MOLTEN 
!      2STATE ON BASEMAT FLOOR (KG)')
!       WRITE(6,167) (VOLCN(KT),KT=1,16)
!       DO 222 KD=1,16  
!       CALL INDEX(KD,KJ)
!       RFAC=1.D0/ROMLIQ(KJ)      
!       IF(KD.EQ.16) RFAC=1.D0/(RSLAGL*ROC) 
!       VOLCN(KD)=VOLCN(KD)*RFAC  
!   222 CONTINUE
!       XQT=1.D-6*QFLXT 
!       XQB=1.D-6*QFLXB 
!       XQO=1.D-6*QXAV  
!       EINTWP=1.D-6*EINTW
!       IF(NWAT.LT.2) WRITE(6,3566) XMCORT,XFMET,XFOX,XFTOT,XQT,XQB,XQO,
!      1XMFLXA,VGAV,VFAV,XMBEDT
!  3566 FORMAT(1X,'GLOBAL MASS INVENTORIES, AVERAGE HEAT FLUXES, AVERAGE 
!      1CONCRETE DEGASSING RATES, ',/,1X,'AND AVERAGE MELT VOID FRACTION'
!      2,//,5X,'TOTAL MASS DRAINAGE FROM VESSEL=',G12.5,' KG',/,5X,'TOTAL 
!      3MOLTEN METAL MASS ON FLOOR=',G12.5,' KG',/,5X,'TOTAL MOLTEN OXIDE 
!      4MASS ON FLOOR=',G12.5,' KG',/,5X,'TOTAL MOLTEN MASS ON FLOOR=',G12
!      5.5,' KG',/,5X,'AVERAGE TOP HEAT FLUX=',G12.5,' MW/M**2',/,5X,'AVER
!      6AGE BOTTOM HEAT FLUX=',G12.5,' MW/M**2',/,5X,'AVERAGE OXIDATION EN
!      7ERGY FLUX=',G12.5,' MW/M**2',/,5X,'AVERAGE CONCRETE DEGASSING MASS
!      8 FLUX=',G12.5,' KG/(M**2 S)',/,5X,'AVERAGE SUPERFICIAL GAS VELOCIT
!      9Y=',G12.5,' M/S',/,5X,'AVERAGE MELT VOID FRACTION=',G12.5,/,5X,'PA
!      1RTICLE BED MASS=',G12.5,' KG')     
!       IF(NWAT.EQ.2) WRITE(6,4566) XMCORT,XFMET,XFOX,XFTOT,XQT,XQB,XQO,
!      1XMFLXA,VGAV,VFAV,XMBEDT,XMWAT,TINTDW,XINTS,TINTDC,TINTSJF,
!      2XBALW,EINTWP
!  4566 FORMAT(1X,'GLOBAL MASS INVENTORIES, AVERAGE HEAT FLUXES, AVERAGE
!      1CONCRETE DEGASSING RATES, ',/,1X,'AND AVERAGE MELT VOID FRACTION'
!      2,//,5X,'TOTAL MASS DRAINAGE FROM VESSEL=',G12.5,' KG',/,5X,'TOTAL 
!      3MOLTEN METAL MASS ON FLOOR=',G12.5,' KG',/,5X,'TOTAL MOLTEN OXIDE 
!      4MASS ON FLOOR=',G12.5,' KG',/,5X,'TOTAL MOLTEN MASS ON FLOOR=',G12
!      5.5,' KG',/,5X,'AVERAGE TOP HEAT FLUX=',G12.5,' MW/M**2',/,5X,'AVER
!      6AGE BOTTOM HEAT FLUX=',G12.5,' MW/M**2',/,5X,'AVERAGE OXIDATION EN
!      7ERGY FLUX=',G12.5,' MW/M**2',/,5X,'AVERAGE CONCRETE DEGASSING MASS
!      8 FLUX=',G12.5,' KG/(M**2 S)',/,5X,'AVERAGE SUPERFICIAL GAS VELOCIT
!      9Y=',G12.5,' M/S',/,5X,'AVERAGE MELT VOID FRACTION=',G12.5,/,5X,'PA
!      1RTICLE BED MASS=',G12.5,' KG',/,5X,'WATER MASS ON FLOOR=',G12.5,' 
!      2KG',/,5X,'INJECTED WATER MASS=',G12.5,' KG',/,5X,'TOTAL MASS OF ST
!      3EAM PRODUCED=',G12.5,' KG',/,5X,'WATER SPILLOVER INTO DOWCOMERS=',
!      4G12.5,' KG',/,5X,'STEAM FROM JET FRAG.=',G12.5,' KG',/,5X,'WATER M
!      5ASS BALANCE=',G12.5,' KG',/,5X,'INTEGRATED HEAT TRANSFER TO WATER=
!      6',G12.5,' MJ')
!       IF(NSKIPE.EQ.0.OR.NACSH.EQ.0) GO TO 69
!       IF(ISHELE.EQ.1) GO TO 69
!       WRITE(6,319)    
!   319 FORMAT(/,1X,'SHELL TEMPERATURE AND CRUST DEPTHS AS A FUNCTION OF L
!      1ENGTH ALONG SHELL',/)      
!    80 FORMAT(9X,'LENGTH',9X,'T1',12X,'T2',12X,'T3',10X,'DCRUST')
!    81 FORMAT(9X,'LENGTH',9X,'T1',12X,'T2',12X,'T3',12X,'T4',10X,'DCRUST'
!      1)     
!    82 FORMAT(9X,'LENGTH',9X,'T1',12X,'T2',12X,'T3',12X,'T4',12X,'T5',10X
!      1,'DCRUST')      
!    83 FORMAT(9X,'LENGTH',9X,'T1',12X,'T2',12X,'T3',12X,'T4',12X,'T5',12X
!      1,'T6',10X,'DCRUST')
!    84 FORMAT(10X,'(M)',11X,'(K)',11X,'(K)',11X,'(K)',10X,'(CM)',/)      
!    85 FORMAT(10X,'(M)',11X,'(K)',11X,'(K)',11X,'(K)',11X,'(K)',10X,'(CM)
!      1',/)  
!    86 FORMAT(10X,'(M)',11X,'(K)',11X,'(K)',11X,'(K)',11X,'(K)',11X,'(K)'
!      1,10X,'(CM)',/)  
!    87 FORMAT(10X,'(M)',11X,'(K)',11X,'(K)',11X,'(K)',11X,'(K)',11X,'(K)'
!      1,11X,'(K)',10X,'(CM)',/)  
!       NPHOR=NUMSHH    
!       IF(NPHOR.GT.6) NPHOR=6    
!       EV=1.5D0*DXVERT+FLOAT(NPEND-1)*DXVERT
!       IF(NPHOR.EQ.3) WRITE(6,80)
!       IF(NPHOR.EQ.3) WRITE(6,84)
!       IF(NPHOR.EQ.4) WRITE(6,81)
!       IF(NPHOR.EQ.4) WRITE(6,85)
!       IF(NPHOR.EQ.5) WRITE(6,82)
!       IF(NPHOR.EQ.5) WRITE(6,86)
!       IF(NPHOR.EQ.6) WRITE(6,83)
!       IF(NPHOR.EQ.6) WRITE(6,87)
!       DO 88 KV=2,NPEND+1
!       ID=NPEND+3-KV   
!       DP=CENT*DCRS(ID)
!       EV=EV-DXVERT    
!       IF(NPHOR.EQ.3) WRITE(6,71) EV,(TENDP(I,ID),I=1,NPHOR),DP
!       IF(NPHOR.EQ.4) WRITE(6,72) EV,(TENDP(I,ID),I=1,NPHOR),DP
!       IF(NPHOR.EQ.5) WRITE(6,73) EV,(TENDP(I,ID),I=1,NPHOR),DP
!       IF(NPHOR.EQ.6) WRITE(6,74) EV,(TENDP(I,ID),I=1,NPHOR),DP
!    88 CONTINUE
!    69 CONTINUE
!    71 FORMAT(3X,5(2X,G12.5))    
!    72 FORMAT(3X,6(2X,G12.5))    
!    73 FORMAT(3X,7(2X,G12.5))    
!    74 FORMAT(3X,8(2X,G12.5))    
!       WRITE(6,411)    
!       IF(NPRNT.EQ.1) GO TO 1100
!       IARG=0
!       NTOT=0
!       DO 200 KN=1,NACPLT
!       NTOT=NTOT+NODES(KN)
!       DO 201 KV=1,NODES(KN)     
!       IARG=IARG+1     
!       NX(IARG)=KN     
!       NY(IARG)=KV     
!       NT(IARG)=NL(KV,KN)
!       TP(IARG)=TEMP(KV,KN)      
!       XL(IARG)=0.D0   
!       IF(KV.EQ.2) XL(IARG)=ZABLAT(KN)*CENT
!       IF(KV.GT.2) XL(IARG)=XL(IARG)+XDIST(KV-1,KN)*CENT
!   201 CONTINUE
!   200 CONTINUE
!       WRITE(6,225)    
!   225 FORMAT(1X,'BASEMAT NODAL TEMPERATURES, MATERIAL TYPES, & NODE DIST
!      1ANCE FROM SURFACE',//)    
!       WRITE(6,226)    
!   226 FORMAT(5(2X,'NX',1X,'NY',1X,'TP',3X,'TEMP',2X,'DIST '),/)
!       XNIN=FLOAT(NTOT)/5.D0     
!       NIN=IDINT(XNIN)  
!       DREM=XNIN-FLOAT(NIN)      
!       DO 231 KD=1,NIN 
!       N1=5*(KD-1)+1   
!       N2=N1+4
!       WRITE(6,232) (NX(I),NY(I),NT(I),TP(I),XL(I),I=N1,N2,1)  
!   232 FORMAT(5(1X,3(1X,I2),1X,F7.2,1X,F5.2))
!   231 CONTINUE
!       N1=5*NIN+1      
!       IF(DREM.EQ.0.D0) GO TO 1105
!       IF(DREM.GT.0.2D0) GO TO 271
!       WRITE(6,266) NX(N1),NY(N1),NT(N1),TP(N1),XL(N1)
!   266 FORMAT(1X,3(1X,I2),1X,F7.2,1X,F5.2) 
!       GO TO 1105      
!   271 CONTINUE
!       IF(DREM.GT.0.4D0) GO TO 272
!       N2=N1+1
!       WRITE(6,269) (NX(I),NY(I),NT(I),TP(I),XL(I),I=N1,N2,1)  
!   269 FORMAT(2(1X,3(1X,I2),1X,F7.2,1X,F5.2))
!       GO TO 1105      
!   272 CONTINUE
!       IF(DREM.GT.0.6D0) GO TO 288
!       N2=N1+2
!       WRITE(6,295) (NX(I),NY(I),NT(I),TP(I),XL(I),I=N1,N2,1)  
!   295 FORMAT(3(1X,3(1X,I2),1X,F7.2,1X,F5.2))
!       GO TO 1105      
!   288 CONTINUE
!       N2=N1+3
!       WRITE(6,279) (NX(I),NY(I),NT(I),TP(I),XL(I),I=N1,N2,1)  
!   279 FORMAT(4(1X,3(1X,I2),1X,F7.2,1X,F5.2))
!  1105 CONTINUE
!       WRITE(6,411)    
!  1100 CONTINUE
!       RETURN
!       END   
! C...................................................................... 
! C.....SUBROUTINE TEN EVALUATES THE MELT SURFACE TENSION GIVEN THE
! C.....COLLAPSED MELT HEIGHT VECTOR, H.    
! C...................................................................... 
!       SUBROUTINE TEN(TPASS,H,SIG)
!       IMPLICIT DOUBLE PRECISION(A-H,O-Z)
!       COMMON/PROPI/ NMATC,NMATFI,NMATFF,ICAOH2,ICACO3,IMCCO3,IFH2O,     
!      1IVH2O,ICK2O,IVK2O,INA2O,ITIO2,ISIO2,ICAO,IMGO,IAL2O3,IFEO,IFE2O3, 
!      2IFE3O4,IFE,ICR,INI,IZR,IU,IB4C,IB,ICR2O3,INIO,IUO2,IZRO2,IB2O3,   
!      3NBCINT(999),NODES(999),NUMNOD,IMOX(28),IBAS,ILCS,ILL,NACTIV(999),     
!      4NBFRZM,NBFRZO,NABLFM,NDRNFM,NTYPMT(999,999),NDOOR,NBMADJ,NUMSHV,   
!      5NBSHL(999),NCRSTS(999),NUMSHH,NSKIPE,NACSH,NWAT,NPEND,NBCBOT,
!      6NCRTOP,NBFZOE,NBFZME,NGEOM,NL(999,999),NFRSCT,NLOGSH,NADAB,NINVIS,
!      7NSIMST,NSTEEL,NOVHT,NOVTK,NOVUM,NOVEM,NOVSIG,NPLLOC(999),NBPL,
!      8IXP(999),IYP(999),NVTPE,NSOLTP,NSOLF,NINTF,IFLGA(999),ICTYPE,ICTC,
!      9NPOURS,NSMP,NPED,NDOR,NSHL,NANULS,NSMPCV,NBOIL,NSWALL,NMVER,
!      1NCRTEM,NTHINC,NVELP,NITMAX,NENMAX,NPRINT,NPFREQ,NTIMSPC,NPLFREQ,
!      2NPLTOT,NJET,NJETP,NJETD,NJETND,NODCAP,NVELPW,NITMAXW,NENMXW,
!      3IFLGJ(999),NBEDCQ,ISHELE
!       COMMON/DATOVER/COVS,COVL,DHSOV,XMOLOV,ROVS,ROVL,TKOVS,TKOVL,VISOV,
!      1EMOV,SIGOV
!       DIMENSION H(28) 
!       DATA SIGM/1.73D0/
!       DATA SIGO/0.52D0/
!       DATA ONE/1.D0/  
!       DATA ZERO/0.D0/ 
! C.....CHECK IF INPUT DATA IS BEING USED TO OVERWRITE THE SURFACE 
! C.....TENSION DATA AND IF SO, SET ACCORDINGLY.
!       IF(NOVSIG.EQ.0) GO TO 887
!       SIG=SIGOV
!       GO TO 4788 
! C.....GENERAL CASE DONE HERE.
!   887 CONTINUE
!       HT=ZERO
!       HTM=ZERO
!       HTO=ZERO
!       DO 399 I=NMATFI,NMATFF    
!       HMOLI=H(I)      
!       HT=HT+HMOLI     
!       IF(IMOX(I).NE.1) GO TO 299
!       HTO=HTO+HMOLI   
!       GO TO 399
!   299 CONTINUE
!       HTM=HTM+HMOLI   
!   399 CONTINUE
!       DENOM=0.D0      
!       IF(HT.GT.0.D0) DENOM=ONE/HT
!       VFLM=HTM*DENOM  
!       VFLO=HTO*DENOM  
!       SIG=VFLM*SIGM+VFLO*SIGO   
!       SIG=DMAX1(SIGO,SIG)
!       SIG=DMIN1(SIGM,SIG)
!  4788 CONTINUE
!       RETURN
!       END   
! C...................................................................... 
! C.....SUBROUTINE SHELL CALCULATES THE DRYWELL SHELL FORWARD ELIMINATION 
! C.....COEFFICIENTS FOR THE SOLUTION OF SHELL ENTHALPIES & TEMPERATURES.  
! C...................................................................... 
!       SUBROUTINE SHELL(IFAILJ)
!       IMPLICIT DOUBLE PRECISION(A-H,O-Z)
!       REAL(8) KL
!       DIMENSION DENE(10,999),FKE(10,999),ALPE(10,999),TARA(999)   
!       DIMENSION TARB(999),P(10),Q(10),A(10),B(10),C(10),D(10)  
!       COMMON/PRINTB/ELEVAT(999),ELOLD(999),XDIST(999,999),XBTW(999,999),
!      1TEMP(999,999),ENTHP(999,999),EOLD(999,999),ENBLK(999),EBKOLD(999),
!      2TBULK(999),HITE(16,999),HITOLD(16,999),HTOT(999),HTOLD(999),
!      3HTCFT(999),HTCOEF(999),QFLUXT(999),QFLUXB(999),VEL(999),ELO(999),
!      4VELOLD(999),SRSCOR(16),AREA(999),RAD(999),ARC(999),VOLCN(16),
!      5VOID(999),VGJ(999),ZABLAT(999),ZABOLD(999),DCRUST(999),
!      6DCROLD(999),DABCON(999),DABOLD(999),DFILMT(999),DFOLT(999),
!      7SMFLX(4,999),XLSMF(4,999),TOTVOL,XFACMS(999),XMFLXA,XMCORT,
!      8VCORT,TOTOX,TOTMET,QFLXT,QFLXB,TIME,DTIME,XMCOR(16),VCOR(16),
!      9TCONI,RSAND,HDOWNC,TBOUND,EMISCN,PDRYWL,XDISTO(999),QOXT(999),
!      1XLENSH,XBTWO(999),RCOMP,WDOOR,RSUMP,RSHELL,RPED,TPED,ELSMP,
!      1TENDP(10,999),TFRZSH,TDEBRS,TKDEBR,PDEBR,CPDEBR,ENENDP(10,999),
!      2ENOLDP(10,999),DXVERT,DXSNK,XDSTE(10,999),XBTE(10,999),HXLA(999),
!      3HXLB(999),TSFEB(999),DCRS(999),DCRSLD(999),HCRS(16,999),
!      4HCRSLD(16,999),THETE0(10,999),THETE1(10,999),QSHELL,QSHELE,TSHELI,
!      5SIGOXE(999),FKOXE(999),RINJC,XLSEC,ANGSEC,ANINJC,XLCHAN,WCHNL,
!      6TEFZX(999),TIMSPC(999),DXNODE(999),TNORM(999),FRCSOL(999),
!      7ALPSPR(999),CRAMCON,HINTF,TSHLMX,XFRMX(999),XFROX(999),XFRTX(999),
!      8XMLMX(999),XMLOX(999),XMLTX(999),XTOTX(999),TIMEO,TMAX,EDOWN(999),
!      9HCP(999)
!       COMMON/PROPI/ NMATC,NMATFI,NMATFF,ICAOH2,ICACO3,IMCCO3,IFH2O,     
!      1IVH2O,ICK2O,IVK2O,INA2O,ITIO2,ISIO2,ICAO,IMGO,IAL2O3,IFEO,IFE2O3, 
!      2IFE3O4,IFE,ICR,INI,IZR,IU,IB4C,IB,ICR2O3,INIO,IUO2,IZRO2,IB2O3,   
!      3NBCINT(999),NODES(999),NUMNOD,IMOX(28),IBAS,ILCS,ILL,NACTIV(999),     
!      4NBFRZM,NBFRZO,NABLFM,NDRNFM,NTYPMT(999,999),NDOOR,NBMADJ,NUMSHV,   
!      5NBSHL(999),NCRSTS(999),NUMSHH,NSKIPE,NACSH,NWAT,NPEND,NBCBOT,
!      6NCRTOP,NBFZOE,NBFZME,NGEOM,NL(999,999),NFRSCT,NLOGSH,NADAB,NINVIS,
!      7NSIMST,NSTEEL,NOVHT,NOVTK,NOVUM,NOVEM,NOVSIG,NPLLOC(999),NBPL,
!      8IXP(999),IYP(999),NVTPE,NSOLTP,NSOLF,NINTF,IFLGA(999),ICTYPE,ICTC,
!      9NPOURS,NSMP,NPED,NDOR,NSHL,NANULS,NSMPCV,NBOIL,NSWALL,NMVER,
!      1NCRTEM,NTHINC,NVELP,NITMAX,NENMAX,NPRINT,NPFREQ,NTIMSPC,NPLFREQ,
!      2NPLTOT,NJET,NJETP,NJETD,NJETND,NODCAP,NVELPW,NITMAXW,NENMXW,
!      3IFLGJ(999),NBEDCQ,ISHELE
!       COMMON/PRINTR/ QFEH2O,QCRH2O,QZRH2O,QFECO2,QCRCO2,QZRCO2,
!      4XFH2OU,XFCAOH,XFMGCA,XFCACO,XZRMRE,XFEMRE,XCRMRE,XZRORE,XFEORE,   
!      5XCRORE,XMH2O,XMCO2,XMCACO,XMMGCA,XMCAOH,TFWL,TFWS,TBWL,TBWS,      
!      6TMCAL,TMCAS,TCAL,TCAS,TFOS,TFOL,TFMS,TFML,XVISC(28),SVISC(28),    
!      7XMOL(28),FMMOL(28),ROM(28),ROMLIQ(28),AEQM(28,2),BEQM(28,2),
!      8CEQM(28,2),ECL,ECS,ECAL,ECAS,EMCAL,EMCAS,EBWL,EBWS,EFWL,EFWS,    
!      9STEF,GRAV,PI,TCS,TCL,CCL,CCS,RMASSL,WPCC,WPM,WPA,WPCS,ROC,RMASSS,   
!      1ANGSHL,RSLAGL,RSLAGS,HNODT,VFAV,VGAV,QXAV,XWTSS(16),  
!      2TSCS(2),TSCL(2),ESCS(2),ESCL(2),CCSS(2),CCSL(2),ROSTLS,ROSTLL,
!      3XFRGAS,HMINC,TST(99),TSTOP(99),AINTP(99),BINTP(99),DRATIO(999),
!      4XBCN(999),XDCN(999),XBLT(15),ADEC(99),BDEC(99),APOUR(16,99),
!      5BPOUR(16,99),XWTC(14),BWIDTH,THCKCV,TMBOIL,TEBOIL,VFINT,ANGFAN,
!      6ALPMAX,THSHL,XFCABL,XNDMIN,DVMX,DAVMX,DEAVMX,DEMX,TDC,QDCU,QDCUO2,
!      7TSINJ,EINJ,DTINJ,TKINJ,ROEV,CPINJ,SURFT,VSINJ,EMINJ,TSINJO,EINJO,
!      8DTINJO,TKINJO,ROEVO,CPINJO,SURFTO,VSINJO,EMINJO,XLEADE,ARSUM,
!      9DBUBOX,UTRISE,TREMSH,DJET,DFALL,WEBER,FROUDE,XPSAITO,XPEPSTN,
!      1FRAG,XMBEDT,XMBED(16),XLPENT,XLPENA,UJET,UFALL,HFALL,ERPV,
!      2TJETT(99),DJETT(99),HWATP,XDOTJET,DVMXW,DAVMXW,DEMXW,DEAVMXW,
!      3QJETW,XSTMJF,TINTSJF,ESAT,DRDOOR,DRANL,EI,QDCBUO2,QDCBU,
!      4EBEDS,EBEDB
!       COMMON /WATVARS/FCRUST(999),VLW(999),VLWOLD(999),DWAT(999),
!      1DWATOLD(999),EWAT(999),EWATOLD(999),TWAT(999),CORDDC(999),
!      2DSRDC(999),DHDC(999),TSRDC,TINTDC,HWATB(999),TSURFW(999),XMS(999),
!      3XMST,XINTS,ESRDTW(999),TSRDTW(999),DSRDTW(999),TSRDW,TINTDW,
!      4TWATI,ELDCO(999),ELDCX(999,99),CRDCX(999,99),TIMINJ(999,99),
!      5XDTINJ(999,99),TDTINJ(999,99),ELWATI,XMWAT,XMWATO,XBALW,
!      6HDRY(999),EINTW,XMCT(199),XMCDT(16,999),TMPCDT(999),CMPCDT(999),
!      7FDC(999),FCOV(999),FBED(999),FHEAT(999),XFACJ(999),
!      8XMBEDJ(16,999),XMBEDJT(999),PBED,QBED(999),QWATER(999),
!      9QSURFACE(999),QWATERT(999),HBED(999),POROSBED,XMCRDT(16,999),
!      1XMCRT(999),XMBDINT(999),XMT(999)
!       COMMON/PROPM/DTDEM(999),CPMLT(999),FKMLT(999),DENMLT(999),
!      1SIGMLT(999),UMMLT(999),EMIMLT(999)      
!       COMMON/DATSIMS/TSIS,TSIL,CSIS,CSIL,DHSIL,RSIS,RSIL,TKSIS,TKSIL,
!      1ESIL,XCSI(16)
!       DATA EMISS / 0.3D0 /    
! C.....FIRST CHECK TO SEE IF THE CALCULATION IS TO BE PERORMED...
!       IF(NSKIPE.EQ.0.OR.NADAB.EQ.1) GO TO 8017
!       IF(ISHELE.EQ.1) GO TO 8017
!       IF(NACSH.EQ.0) GO TO 8017 
! C.....FIND HEAT TRANSFER COEFFICIENT TO SOLIDIFIED DEBRIS IF BULK
! C.....FREEZING HAS OCCURED ADJACENT TO THE SHELL.   
!       IF(NFRSCT.EQ.1) GO TO 1111
!       HDEBRS=0.D0     
!       GO TO 1112      
!  1111 CONTINUE
!       TEV=TIME-TFRZSH 
!       IF(TEV.LT.DTIME) TEV=DTIME
!       DENOM=PDEBR*CPDEBR
!       AFDEBR=0.D0     
!       IF(DENOM.GT.0.D0) AFDEBR=TKDEBR/DENOM
!       DENOM=0.D0      
!       IF(AFDEBR.GT.0.D0) DENOM=1.D0/SQRT(PI*TEV*AFDEBR)
!       HDEBRS=TKDEBR*DENOM
!  1112 CONTINUE
!       IF(HTOT(NBMADJ).LE.0.D0) GO TO 9310 
!       NS=NBMADJ
!       ALPBLK=DTDEM(NS)
!       CMS=CPMLT(NS)   
!       PMS=DENMLT(NS)  
!       UMS=UMMLT(NS)   
!       TKMS=FKMLT(NS)  
!       CALL SHELLM(TBULK(NS),VGJ(NS),VEL(NS),VOID(NS),CMS,PMS,TKMS,UMS,HT
!      1OT(NS),HSHELL,XLENSH)     
!       GO TO 9313      
!  9310 CONTINUE
!       HSHELL=0.D0     
!       ALPBLK=0.D0     
!  9313 CONTINUE
! C.....FIND SHELL FORWARD ELIMINATION COEFFICIENTS.  FIRST FIND SHELL    
! C.....PROPERTIES.     
!       DO 9300 KV=1,NUMSHV
!       DO 9300 KH=1,NUMSHH
!       CALL DENSS(TENDP(KH,KV),DENE(KH,KV))
!       CALL CONDSS(TENDP(KH,KV),FKE(KH,KV))
!       CALL TESS(ENENDP(KH,KV),TPS,ALPE(KH,KV))      
!  9300 CONTINUE
!       ANFAR=(PI*ANGSHL)/180.D0  
!       ANSIN=COS(ANFAR)
!       VFMAX=VOID(NBMADJ)
!       IF(VFMAX.GE.0.3) VFMAX=0.3
!       THM=HTOT(NBMADJ)/(ANSIN*(1.D0-VFMAX))+ELEVAT(NBMADJ)/ANSIN 
!       IF(THM.LT.HNODT) GO TO 8830 
!       WRITE(6,7671) TIME,HNODT,HTOT(NBMADJ),THM
!       WRITE(2,7671) TIME,HNODT,HTOT(NBMADJ),THM
!  7671 FORMAT(//,'****MELT DEPTH ADJACENT TO SHELL HAS EXCEEDED THE NODAL
!      1IZED LENGTH; INCREASE HNODT AND RESTART',/,' TIME=',G12.5,/,' NODA
!      2LIZED LENGTH=',G12.5,/,' MELT DEPTH=',G12.5,/,' LENGTH COVERED BY 
!      3VOIDED MELT=',G12.5)
!       IFAILJ=1
!       GO TO 110
!  8830 CONTINUE 
!       HENP=-DXVERT/2.D0
!       IF(NWAT.GT.0) CALL CONWAT(TSAT,KL,PL,CL,UL,HLV,EWL,EWV,CWV,SIGMA,
!      1PDRYWL)
!       TSUB=0.D0
!       IF(NWAT.EQ.2) TSUB=DMAX1(TSAT-TWAT(NBMADJ),0.D0)
!       DO 9301 KV=1,NUMSHV
! C.....ASSIGN CRUST PROPERTIES.  
!       TKC=FKOXE(KV)   
!       SIGC=SIGOXE(KV) 
!       IF(KV.EQ.1) GO TO 8924    
!       HENP=HENP+DXVERT
!       HENT=HENP+DXVERT/2.D0     
!       HENB=HENP-DXVERT/2.D0     
!  8924 CONTINUE
!       XVERT=DXSNK     
!       IF(KV.GT.1) XVERT=DXVERT  
!       DO 9319 KH=1,NUMSHH
! C.....CALCULATE CONDUCTANCES.   
!       CHM=0.D0
!       IF(KH.NE.1) CHM=(FKE(KH-1,KV)*FKE(KH,KV))/(XBTE(KH-1,KV)*FKE(KH,KV
!      1)+(XDSTE(KH-1,KV)-XBTE(KH-1,KV))*FKE(KH-1,KV))
!       CHP=0.D0
!       IF(KH.NE.NUMSHH) CHP=(FKE(KH,KV)*FKE(KH+1,KV))/(XBTE(KH,KV)*FKE(KH
!      1+1,KV)+(XDSTE(KH,KV)-XBTE(KH,KV))*FKE(KH,KV)) 
!       CVM=0.D0
!       IF(KV.EQ.2) CVM=(2.D0*FKE(KH,KV-1)*FKE(KH,KV))/(DXSNK*FKE(KH,KV)+D
!      1XVERT*FKE(KH,KV-1))
!       IF(KV.GT.2) CVM=(2.D0*FKE(KH,KV-1)*FKE(KH,KV))/(DXVERT*(FKE(KH,KV)
!      1+FKE(KH,KV-1))) 
!       CVP=0.D0
!       IF(KV.EQ.1) CVP=(2.D0*FKE(KH,KV)*FKE(KH,KV+1))/(DXSNK*FKE(KH,KV+1)
!      1+DXVERT*FKE(KH,KV))
!       IF(KV.GT.1) CVP=(2.D0*FKE(KH,KV)*FKE(KH,KV+1))/(DXVERT*(FKE(KH,KV)
!      1+FKE(KH,KV+1))) 
!       IF(KH.GT.1) GO TO 9302    
!       IF(KV.GT.1) GO TO 9303    
!       HXLA(KV)=0.D0   
!       HXLB(KV)=0.D0   
!       TARA(KV)=0.D0   
!       TARB(KV)=0.D0   
!       TSFEB(KV)=0.D0  
!       GO TO 9304      
!  9303 CONTINUE
!       XFACM=(THM-HENB)/(HENT-HENB)
!       XFACM=DMAX1(XFACM,0.D0)   
!       IF(XFACM.GT.1.D0) XFACM=1.D0
!       XFACA=1.D0-XFACM
!       IF(ELEVAT(NBMADJ)/ANSIN.LT.HENB) GO TO 1113   
!       TARA(KV)=TDEBRS 
!       HXLA(KV)=HDEBRS*DXVERT    
!       HXLB(KV)=0.D0   
!       TARB(KV)=0.D0   
!       TSFEB(KV)=TENDP(KH,KV)    
!       GO TO 9304      
!  1113 CONTINUE
!       TSFEB(KV)=TENDP(KH,KV)    
!       IF(NBSHL(KV).EQ.1) GO TO 9400
!       IF(NBSHL(KV).EQ.3) GO TO 9400
!       TSFEB(KV)=TEFZX(KV)
!  9400 CONTINUE
!       IF(XFACA.GT.0.D0) GO TO 9401
!       HXLA(KV)=0.D0   
!       TARA(KV)=0.D0   
!       GO TO 9402      
!  9401 CONTINUE
!       IF(NWAT.GT.0) GO TO 9403  
!       TARA(KV)=TBOUND 
!       RADCST=STEF/(1.D0/EMISCN+1.D0/EMISS-1.D0)     
!       HTC=RADCST*(TSFEB(KV)**2+TARA(KV)**2)*(TSFEB(KV)+TARA(KV))
!       IF(NBSHL(KV).EQ.3) HTC=(HTC*TKC)/(DCRS(KV)*HTC+
!      1TKC)  
!       HXLA(KV)=XFACA*DXVERT*HTC 
!       GO TO 9402      
!  9403 CONTINUE
!       TARA(KV)=TSAT   
!       CALL SHELLW(TSFEB(KV),TSUB,PDRYWL,HTC,ANGSHL)      
!       IF(NBSHL(KV).EQ.3) HTC=(HTC*TKC)/(DCRS(KV)*HTC+
!      1TKC)  
!       HXLA(KV)=XFACA*DXVERT*HTC 
!       IF(TSFEB(KV).LT.TSAT+1.0) GO TO 666
!   666 CONTINUE
!  9402 CONTINUE
!       IF(XFACM.GT.0.D0) GO TO 9405
!       TARB(KV)=0.D0   
!       HXLB(KV)=0.D0   
!       GO TO 9304      
!  9405 CONTINUE
!       TARB(KV)=TBULK(NBMADJ)    
!       HXLB(KV)=XFACM*DXVERT*HSHELL
!  9304 CONTINUE
!       A1=(DENE(KH,KV)*XVERT*XBTE(KH,KV))/DTIME      
!       A2=XBTE(KH,KV)*ALPE(KH,KV)*(CVP+CVM)
!       IF(NBSHL(KV).NE.2) GO TO 4353  
!       IF(DCRS(KV).GT.0.D0) GO TO 9353  
!  4353 CONTINUE
!       IF(NBSHL(KV).NE.3) GO TO 7322 
!       IF(XFACM.GT.0.D0.AND.DCRS(KV).GT.0.D0) GO TO 9351
!  7322 CONTINUE
!       A3=CHP*XVERT*ALPE(KH,KV)+(HXLA(KV)+HXLB(KV))*ALPE(KH,KV)
!       GO TO 9352      
!  9351 CONTINUE
!       A3=XVERT*(TKC/DCRS(KV)+CHP)*ALPE(KH,KV)
!       GO TO 9352      
!  9353 CONTINUE
!       HTCC=HXLB(KV)/XVERT
!       SG1=(HTCC*(TBULK(NBMADJ)-TSFEB(KV)))/SIGC     
!       DTEV=TSFEB(KV)-TENDP(KH,KV)
!       DTEV=DMAX1(DTEV,0.D0)     
!       SG2=4.D0*(DCRSLD(KV)**2+(TKC*DTEV)/SIGC)      
!       GAM=SQRT(SG1**2+SG2)      
!       WJP1=-TKC/(SIGC*GAM)      
!       SB1=((TBULK(NBMADJ)-TSFEB(KV))*HTCC**2)/(GAM*SIGC**2)   
!       WBLK=0.5D0*(SB1-HTCC/SIGC)
!       A3=XVERT*(CHP+(TKC*(TSFEB(KV)-TENDP(KH,KV))*WJP1)/DCRS(KV)**2+TKC/
!      1DCRS(KV))*ALPE(KH,KV)     
!  9352 CONTINUE
!       A(KH)=A1+A2+A3  
!       B(KH)=XVERT*CHP*ALPE(KH+1,KV)
!       C(KH)=0.D0      
!       D1=(DENE(KH,KV)*XVERT*XBTE(KH,KV)*(ENENDP(KH,KV)-ENOLDP(KH,KV)))/D
!      1TIME  
!       D2=0.D0
!       IF(KH.LT.NUMSHH) D2=XVERT*CHP*(TENDP(KH,KV)-TENDP(KH+1,KV)) 
!       D3=0.D0
!       IF(KV.GT.1) D3=XBTE(KH,KV)*CVM*(TENDP(KH,KV-1)-TENDP(KH,KV)) 
!       D4=0.
!       IF(KV.LT.NUMSHV) D4=XBTE(KH,KV)*CVP*(TENDP(KH,KV)-TENDP(KH,KV+1))
!       IF(NBSHL(KV).NE.2) GO TO 6211
!       IF(DCRS(KV).GT.0.D0) GO TO 9355
!  6211 CONTINUE
!       IF(NBSHL(KV).NE.3) GO TO 7211
!       IF(XFACM.GT.0.D0.AND.DCRS(KV).GT.0.D0) GO TO 9355 
!  7211 CONTINUE
!       D5=HXLA(KV)*(TARA(KV)-TENDP(KH,KV))+HXLB(KV)*(TARB(KV)-TENDP(KH,KV
!      1))    
!       OMEG=HXLB(KV)*ALPBLK      
!       GO TO 9357      
!  9355 CONTINUE
!       D5=(XVERT*TKC*(TSFEB(KV)-TENDP(KH,KV)))/DCRS(KV)
!       OMEG=0.D0
!       IF(NBSHL(KV).EQ.2) OMEG=-(D5*WBLK*ALPBLK)/DCRS(KV)      
!  9357 CONTINUE
!       D(KH)=-D1-D2+D3-D4+D5     
!       GO TO 9319      
!  9302 CONTINUE
!       XHOR=XDSTE(KH-1,KV)-XBTE(KH-1,KV)   
!       IF(KH.NE.NUMSHH) XHOR=XBTE(KH,KV)+XHOR
!       A1=(DENE(KH,KV)*XVERT*XHOR)/DTIME   
!       A2=XVERT*(CHM+CHP)*ALPE(KH,KV)      
!       A3=XHOR*(CVP+CVM)*ALPE(KH,KV)
!       A(KH)=A1+A2+A3  
!       B(KH)=0.
!       IF(KH.LT.NUMSHH) B(KH)=XVERT*CHP*ALPE(KH+1,KV)
!       C(KH)=XVERT*CHM*ALPE(KH-1,KV)
!       D1=(DENE(KH,KV)*XVERT*XHOR*(ENENDP(KH,KV)-ENOLDP(KH,KV)))/DTIME   
!       D2=XVERT*CHM*(TENDP(KH-1,KV)-TENDP(KH,KV))    
!       D3=0.
!       IF(KH.LT.NUMSHH) D3=XVERT*CHP*(TENDP(KH,KV)-TENDP(KH+1,KV))     
!       D4=0.
!       IF(KV.GT.1) D4=XHOR*CVM*(TENDP(KH,KV-1)-TENDP(KH,KV))
!       D5=0.
!       IF(KV.LT.NUMSHV) D5=XHOR*CVP*(TENDP(KH,KV)-TENDP(KH,KV+1))     
!       D(KH)=-D1+D2-D3+D4-D5     
!  9319 CONTINUE
! C.....CONSTRUCT SHELL FORWARD ELIMINATION COEFFICIENTS GIVEN TDMA MATRIX
! C.....FOR THE KH'TH HORIZONTAL NODAL VECTOR.
!       P(1)=B(1)/A(1)  
!       Q(1)=D(1)/A(1)  
!       DO 9325 KD=2,NUMSHH
!       P(KD)=B(KD)/(A(KD)-C(KD)*P(KD-1))   
!       Q(KD)=(D(KD)+C(KD)*Q(KD-1))/(A(KD)-C(KD)*P(KD-1))
!  9325 CONTINUE
!       THETE0(NUMSHH,KV)=Q(NUMSHH)
!       DO 9326 KD=1,NUMSHH-1     
!       IARG=NUMSHH-KD  
!       THETE0(IARG,KV)=P(IARG)*THETE0(IARG+1,KV)+Q(IARG)
!  9326 CONTINUE
!       IF(ALPBLK.GT.0.D0.AND.HXLB(KV).GT.0.D0) GO TO 9327      
!       DO 9328 KD=1,NUMSHH
!       THETE1(KD,KV)=0.D0
!  9328 CONTINUE
!       GO TO 9301      
!  9327 CONTINUE
!       Q(1)=OMEG/A(1)  
!       DO 9329 KD=2,NUMSHH
!       Q(KD)=(C(KD)*Q(KD-1))/(A(KD)-C(KD)*P(KD-1))   
!  9329 CONTINUE
!       THETE1(NUMSHH,KV)=Q(NUMSHH)
!       DO 9330 KD=1,NUMSHH-1     
!       IARG=NUMSHH-KD  
!       THETE1(IARG,KV)=P(IARG)*THETE1(IARG+1,KV)+Q(IARG)
!  9330 CONTINUE
!  9301 CONTINUE
! C.....DETERMINE INTEGRATED HEAT LOAD INTO SHELL FOR SOLUTION OF BULK    
! C.....CONSERVATION OF ENERGY EQUATION.    
!       QSHELL=0.D0     
!       QSHELE=0.D0     
!       DO 9398 KD=1,NUMSHV
!       QSHELL=QSHELL+HXLB(KD)*(TBULK(NBMADJ)-TSFEB(KD)-ALPE(1,KD)*THETE0(
!      11,KD))
!       QSHELE=QSHELE+HXLB(KD)*(ALPBLK-ALPE(1,KD)*THETE1(1,KD)) 
!  9398 CONTINUE
!  8017 CONTINUE
!   110 CONTINUE
!       RETURN
!       END   
! C...................................................................... 
! C.....PROGRAM OXID CALCULATES THE FRACTION OF OXIDATION OF STEAM
! C.....AND CO2 IN A SPHERICAL BUBBLE AFTER RISING THROUGH A MELT
! C.....LAYER OF FINITE DEPTH DUE TO OXIDATION OF THE MELT.  INPUT
! C.....INFORMATION IS P=SYSTEM PRESSURE IN MPA, TEMPC=INITIAL GAS
! C.....TEMPERATURE IN BUBBLE UPON RELEASE FROM SURFACE, TEMPM=MELT
! C.....TEMPERATURE, D=BUBBLE DIAMETER, DEPTH=DEPTH OF MELT LAYER,
! C.....AND UT=BUBBLE TERMINAL RISE VELOCITY.  OXH2O AND OXCO2 ARE
! C.....THE CALCULATED FRACTIONS OF H2O AND CO2 WHICH ARE OXIDIZED AS     
! C.....THE BUBBLE ASSENDS THROUGH THE LAYER.
! C...................................................................... 
!       SUBROUTINE OXID(P,TEMPC,TEMPM,D,DEPTH,UT,OXH2O,OXCO2)   
!       IMPLICIT DOUBLE PRECISION(A-H,O-Z)
!       CONV=1.D-4      
!       TCONI=300.D0    
!       PI=3.141592654D0
!       TASIGN=TEMPC    
!       IF(TASIGN.LT.TCONI) TASIGN=TCONI    
!       TEMP1=TASIGN    
!       TEMP2=TEMP1     
!       CALL TTODAB(TEMP1,TEMP2,DAB1,DAB2,P)
!       CH2O=(DAB1*DEPTH)/(UT*D*D)
!       CCO2=(DAB2*DEPTH)/(UT*D*D)
!       SUMH2O=0.D0     
!       SUMCO2=0.D0     
!       DO 70 KD=1,10   
!       SMH2LD=SUMH2O   
!       SMCOLD=SUMCO2   
!       RN2=(FLOAT(KD)*PI)*(FLOAT(KD)*PI)   
!       ARH2O=4.D0*RN2*CH2O
!       ARCO2=4.D0*RN2*CCO2
!       IF(ARH2O.GT.100.D0.OR.ARCO2.GT.100.D0) GO TO 100
!       SUMH2O=SUMH2O+6.D0/(RN2*DEXP(ARH2O)) 
!       SUMCO2=SUMCO2+6.D0/(RN2*DEXP(ARCO2)) 
!       DSH2O=ABS(SUMH2O-SMH2LD)  
!       DSCO2=ABS(SUMCO2-SMCOLD)  
!       IF(DSH2O.LE.CONV.AND.DSCO2.LE.CONV) GO TO 100 
!    70 CONTINUE
!   100 CONTINUE
!       OXH2O=1.D0-SUMH2O
!       OXCO2=1.D0-SUMCO2
!       OXH2O=DMAX1(0.D0,OXH2O)   
!       OXCO2=DMAX1(0.D0,OXCO2)   
!       IF(OXH2O.GT.1.D0) OXH2O=1.D0
!       IF(OXCO2.GT.1.D0) OXCO2=1.D0
!       RETURN
!       END   
! C...................................................................... 
! C.....SUBROUTINE TTODAB CALCULATES THE BINARY DIFFUSION COEFFICIENTS    
! C.....FOR H2O/H2 AND CO2/CO USING HIRSCHFELDER'S EQUATION.    
! C...................................................................... 
!       SUBROUTINE TTODAB(TEMP1,TEMP2,D1,D2,P)
!       IMPLICIT DOUBLE PRECISION(A-H,O-Z)
!       X1=TEMP1/((59.7*809.1)**.5)
!       OMEGA1=1.579-0.352*X1+.0567*X1*X1-.00317*X1*X1*X1
!       D1=.001858D-4*TEMP1**1.5*(1./18.+1./2.)**.5   
!       D1=D1/(P*10.*OMEGA1*(.5*(2.827+2.641))**2)    
!       X2=TEMP2/((91.7*195.2)**.5)
!       OMEGA2=1.070-.0626*X2+.0039*X2*X2-.87D-4*X2*X2*X2
!       D2=.001858D-4*TEMP2**1.5*(1./28.+1./44.)**.5  
!       D2=D2/(P*10.*OMEGA2*(.5*(3.690+3.941))**2)    
!       RETURN
!       END   
! C...................................................................... 
! C.....GIVEN THE TEMPERATURE, SUBROUTINE ETSS FINDS THE SPECIFIC
! C.....ENTHALPY FOR CARBON STEEL.
! C...................................................................... 
!       SUBROUTINE ETSS(E,T,DTDE) 
!       IMPLICIT DOUBLE PRECISION(A-H,O-Z)
!       COMMON/DATSH/TS,TL,ES,EL,DFUS,CL    
!       DATA TREF/298.15D0/
!       IF(T.GT.TS) GO TO 10      
!       E=(ES*(T-TREF))/(TS-TREF) 
!       DTDE=(TS-TREF)/ES
!       GO TO 200
!    10 CONTINUE
!       IF(T.GT.TL) GO TO 20      
!       E=ES+(DFUS*(T-TS))/(TL-TS)
!       DTDE=(TL-TS)/DFUS
!       GO TO 200
!    20 CONTINUE
!       E=EL+CL*(T-TL)  
!       DTDE=1.D0/CL    
!   200 CONTINUE
!       RETURN
!       END   
! C...................................................................... 
! C.....GIVEN THE SPECIFIC ENTHALPY, SUBROUTINE TESS FINDS THE  
! C.....TEMPERATURE FOR CARBON STEEL.
! C...................................................................... 
!       SUBROUTINE TESS(E,T,DTDE) 
!       IMPLICIT DOUBLE PRECISION(A-H,O-Z)
!       COMMON/DATSH/TS,TL,ES,EL,DFUS,CL    
!       DATA TREF/298.15D0/
!       IF(E.GT.ES) GO TO 10      
!       T=TREF+(E*(TS-TREF))/ES   
!       DTDE=(TS-TREF)/ES
!       GO TO 200
!    10 CONTINUE
!       IF(E.GT.EL) GO TO 20      
!       T=TS+((E-ES)*(TL-TS))/DFUS
!       DTDE=(TL-TS)/DFUS
!       GO TO 200
!    20 CONTINUE
!       T=TL+(E-EL)/CL  
!       DTDE=1.D0/CL    
!   200 CONTINUE
!       RETURN
!       END   
! C...................................................................... 
! C.....SUBROUTINE DENSS  DETERMINES THE DENSITY AS A FUNCTION OF
! C.....TEMPERATURE FOR CARBON STEEL.
! C...................................................................... 
!       SUBROUTINE DENSS(T,P)     
!       IMPLICIT DOUBLE PRECISION(A-H,O-Z)
!       COMMON/PROPI/ NMATC,NMATFI,NMATFF,ICAOH2,ICACO3,IMCCO3,IFH2O,     
!      1IVH2O,ICK2O,IVK2O,INA2O,ITIO2,ISIO2,ICAO,IMGO,IAL2O3,IFEO,IFE2O3, 
!      2IFE3O4,IFE,ICR,INI,IZR,IU,IB4C,IB,ICR2O3,INIO,IUO2,IZRO2,IB2O3,   
!      3NBCINT(999),NODES(999),NUMNOD,IMOX(28),IBAS,ILCS,ILL,NACTIV(999),     
!      4NBFRZM,NBFRZO,NABLFM,NDRNFM,NTYPMT(999,999),NDOOR,NBMADJ,NUMSHV,   
!      5NBSHL(999),NCRSTS(999),NUMSHH,NSKIPE,NACSH,NWAT,NPEND,NBCBOT,
!      6NCRTOP,NBFZOE,NBFZME,NGEOM,NL(999,999),NFRSCT,NLOGSH,NADAB,NINVIS,
!      7NSIMST,NSTEEL,NOVHT,NOVTK,NOVUM,NOVEM,NOVSIG,NPLLOC(999),NBPL,
!      8IXP(999),IYP(999),NVTPE,NSOLTP,NSOLF,NINTF,IFLGA(999),ICTYPE,ICTC,
!      9NPOURS,NSMP,NPED,NDOR,NSHL,NANULS,NSMPCV,NBOIL,NSWALL,NMVER,
!      1NCRTEM,NTHINC,NVELP,NITMAX,NENMAX,NPRINT,NPFREQ,NTIMSPC,NPLFREQ,
!      2NPLTOT,NJET,NJETP,NJETD,NJETND,NODCAP,NVELPW,NITMAXW,NENMXW,
!      3IFLGJ(999),NBEDCQ,ISHELE
!       COMMON/DATSIMS/TSIS,TSIL,CSIS,CSIL,DHSIL,RSIS,RSIL,TKSIS,TKSIL,
!      1ESIL,XCSI(16)
!       IF(NSIMST.EQ.0) GO TO 33
!       P=RSIS
!       IF(T.GT.TSIS) P=RSIL
!       GO TO 200
!    33 CONTINUE 
!       IF(T.LT.1811.D0) GO TO 10 
!       P=7010.D0-8.3419D-1*(T-1811.D0)     
!       GO TO 200
!    10 CONTINUE
!       IF(T.LE.1185.D0) GO TO 20 
!       FL=-1.7680D0+2.33D-3*T   
!       GO TO 50
!    20 CONTINUE
!       DT=T-300.D0     
!       DT2=DT*DT
!       DT3=DT*DT2      
!       FL=9.D-3+1.21D-3*DT+6.504D-7*DT2-3.14D-10*DT3 
!    50 CONTINUE
!       DENOM=1.D0+1.D-2*FL
!       P=7867.D0/(DENOM*DENOM*DENOM)
!   200 CONTINUE
!       RETURN
!       END   
! C...................................................................... 
! C.....GIVEN THE TEMPERATURE, SUBROUTINE CONDSS FINDS THE THERMAL
! C.....CONDUCTIVITY FOR CARBON STEEL.      
! C...................................................................... 
!       SUBROUTINE CONDSS(T,FK)   
!       IMPLICIT DOUBLE PRECISION(A-H,O-Z)
!       COMMON/PROPI/ NMATC,NMATFI,NMATFF,ICAOH2,ICACO3,IMCCO3,IFH2O,     
!      1IVH2O,ICK2O,IVK2O,INA2O,ITIO2,ISIO2,ICAO,IMGO,IAL2O3,IFEO,IFE2O3, 
!      2IFE3O4,IFE,ICR,INI,IZR,IU,IB4C,IB,ICR2O3,INIO,IUO2,IZRO2,IB2O3,   
!      3NBCINT(999),NODES(999),NUMNOD,IMOX(28),IBAS,ILCS,ILL,NACTIV(999),     
!      4NBFRZM,NBFRZO,NABLFM,NDRNFM,NTYPMT(999,999),NDOOR,NBMADJ,NUMSHV,   
!      5NBSHL(999),NCRSTS(999),NUMSHH,NSKIPE,NACSH,NWAT,NPEND,NBCBOT,
!      6NCRTOP,NBFZOE,NBFZME,NGEOM,NL(999,999),NFRSCT,NLOGSH,NADAB,NINVIS,
!      7NSIMST,NSTEEL,NOVHT,NOVTK,NOVUM,NOVEM,NOVSIG,NPLLOC(999),NBPL,
!      8IXP(999),IYP(999),NVTPE,NSOLTP,NSOLF,NINTF,IFLGA(999),ICTYPE,ICTC,
!      9NPOURS,NSMP,NPED,NDOR,NSHL,NANULS,NSMPCV,NBOIL,NSWALL,NMVER,
!      1NCRTEM,NTHINC,NVELP,NITMAX,NENMAX,NPRINT,NPFREQ,NTIMSPC,NPLFREQ,
!      2NPLTOT,NJET,NJETP,NJETD,NJETND,NODCAP,NVELPW,NITMAXW,NENMXW,
!      3IFLGJ(999),NBEDCQ,ISHELE
!       COMMON/DATSIMS/TSIS,TSIL,CSIS,CSIL,DHSIL,RSIS,RSIL,TKSIS,TKSIL,
!      1ESIL,XCSI(16)
!       IF(NSIMST.EQ.0) GO TO 33
!       FK=TKSIS
!       IF(T.GT.TSIS) FK=TKSIL
!       GO TO 200
!    33 CONTINUE 
!       IF(T.GT.477.59D0) GO TO 10
!       FK=41.19D0      
!       GO TO 200
!    10 CONTINUE
!       IF(T.GE.1043.D0) GO TO 20 
!       T2=T*T
!       T3=T*T2
!       T4=T*T3
!       T5=T*T4
!       T6=T*T5
!       FK=8.623E2-7.083D0*T+2.504D-2*T2-4.63D-5*T3+4.718D-8*T4-2.515D-11*
!      1T5+5.478D-15*T6 
!       GO TO 200
!    20 CONTINUE
!       IF(T.GE.1185.D0) GO TO 30 
!       FK=30.4D0
!       GO TO 200
!    30 CONTINUE
!       IF(T.GE.1811.D0) GO TO 40 
!       FK=30.4D0-1.0016D-2*(T-1185.D0)     
!       GO TO 200
!    40 CONTINUE
!       FK=24.13D0      
!   200 CONTINUE
!       RETURN
!       END   
! C...................................................................... 
! C.....SUBROUTINE SHELLW EVALUATES THE DRYWELL SHELL-TO-WATER HEAT
! C.....TRANSFER COEFFICIENT ALONG THE FULL BOILING CURVE USING THE
! C.....ROHSENOW EXPRESSION AS MODIFIED BY JUNG ET AL. FOR INCLINED
! C.....SURFACES IN NUCLEATE BOILING, AND THE RESULTS OF SAUER ET AL.     
! C.....FOR FILM BOILING ON INCLINED SURFACES.  ZUBER'S CHF CORRELATION   
! C.....IS USED TO CHARACTERIZE THE CHF POINT, AND HENRY'S CORRELATION    
! C.....IS USED TO CHARACTERIZE THE MINIMUM FILM BOILING TEMPERATURE.     
! C.....THE HEAT FLUX IN THE TRANSITION BOILING REGIME IS FOUND BY
! C.....LINEAR INTERPOLATION BETWEEN THE CHF AND MINIMUM FILM BOILING     
! C.....POINTS.
! C...................................................................... 
!       SUBROUTINE SHELLW(TWABS,TSUB,PDRYWL,HTC,ANGSHL)    
!       IMPLICIT DOUBLE PRECISION(A-H,O-Z)
!       REAL(8) KL,KV
!       COMMON/DATSIMS/TSIS,TSIL,CSIS,CSIL,DHSIL,RSIS,RSIL,TKSIS,TKSIL,
!      1ESIL,XCSI(16)
!       DATA GRAV/9.82D0/
!       E13=1.D0/3.D0   
!       E23=2.D0/3.D0   
!       CALL CONWAT(TSAT,KL,PL,CL,UL,HLV,EWL,EWV,CWV,SIGMA,PDRYWL)
!       TSUP=TWABS-TSAT 
!       HTC=0.D0
!       IF(TSUP.LE.0.D0) GO TO 105
!       CSF=7.218D-3-1.74D-6*ANGSHL
!       AN2=ANGSHL*ANGSHL
!       AN3=ANGSHL*AN2  
!       RX=.256D0-1.514D-4*ANGSHL+1.77D-5*AN2-7.16D-8*AN3
!       RXI=1.D0/RX     
!       RXS=1.7D0*RXI   
!       FBF=1.D0+4.5139D-3*ANGSHL 
!       IF(TWABS.GT.TSAT) GO TO 1000
!       HTC=0.D0
!       GO TO 105
!  1000 CONTINUE
!       TAVE=0.5D0*(TWABS+TSAT)   
!       CALL CONH2O(TAVE,PDRYWL,CV,UV,KV,PV)
! C.....DETERMINE IF BOILING REGIME IS NUCLEATE, TRANSITION, OR FILM      
! C.....BOILING.
!       DP=PL-PV
!       C1=1.D0+(0.1D0*((PL/PV)**0.75D0)*CL*TSUB)/HLV 
!       C2=0.14D0*PV*HLV*(((GRAV*SIGMA*DP)/PV**2)**0.25D0)      
!       QCHF=C1*C2      
!       C3=SQRT(SIGMA/(GRAV*DP))  
!       C4=(KL/(CL*UL))**RXS      
!       C5=(CL/(HLV*CSF))**RXI    
!       C6=(UL*HLV)/C3  
!       ANB=C4*C5*C6    
!       DTCHF=(QCHF/ANB)**RX      
!       IF(TSUP.GT.DTCHF) GO TO 50
! C.....BOILING REGIME IS NUCLEATE...........
!       RXE=RXI
!       HTC=ANB*TSUP**RXE
!       GO TO 105
!    50 CONTINUE
!       C6=(0.127D0*HLV*PV)/KV    
!       C7=((GRAV*DP)/(PL+PV))**E23
!       C8=(UV/(GRAV*DP))**E13    
!       DTBER=C6*C7*C3*C8
!       CALL DENSS(TWABS,PM)      
!       CALL CONDSS(TWABS,FKM)    
!       CALL ETSS(EPS,TWABS,DTDE) 
!       CM=1.D0/DTDE    
!       C9=SQRT((KL*PL*CL)/(FKM*PM*CM))     
!       C10=((C9*HLV)/(CM*DTBER))**0.6D0    
!       DTMIN=DTBER+.42D0*C10*(DTBER+TSUB)  
!       IF(DTMIN.LE.DTCHF) DTMIN=DTCHF+10.D0
!       C11=((HLV*PV*GRAV*DP*KV*KV*KV)/(C3*UV))**.25D0
!       C12=.425D0*C11  
!       IF(TSUP.GT.DTMIN) GO TO 75
! C.....BOILING REGIME IS TRANSITION.............     
!       QMIN=FBF*C12*TSUP**.75D0  
!       QTRAN=((QMIN-QCHF)/(DTMIN-DTCHF))*(TSUP-DTCHF)+QCHF     
!       HTC=QTRAN/TSUP  
!       GO TO 105
!    75 CONTINUE
! C.....BOILING REGIME IS FILM............  
!       HTC=(FBF*C12)/TSUP**0.25D0
!   105 CONTINUE
!       RETURN
!       END   
! C...................................................................... 
! C.....SUBROUTINE SHELLM EVALUATES THE SHELL-TO-MELT HEAT TRANSFER
! C.....COEFFICIENT USING THE MAXIMUM EXPRESSION BETWEEN A JET  
! C.....IMPINGEMENT CORRELATION AND THEOFANAOUS'S INCLINED PLATE
! C.....BUBBLING HEAT TRANSFER COEFFICIENT. 
! C...................................................................... 
!       SUBROUTINE SHELLM(TB,VG,V,VOID,CM,PM,TKM,UM,HEIGHT,HSHELL,XLENSH) 
!       IMPLICIT DOUBLE PRECISION(A-H,O-Z)
!       COMMON/PROPI/ NMATC,NMATFI,NMATFF,ICAOH2,ICACO3,IMCCO3,IFH2O,     
!      1IVH2O,ICK2O,IVK2O,INA2O,ITIO2,ISIO2,ICAO,IMGO,IAL2O3,IFEO,IFE2O3, 
!      2IFE3O4,IFE,ICR,INI,IZR,IU,IB4C,IB,ICR2O3,INIO,IUO2,IZRO2,IB2O3,   
!      3NBCINT(999),NODES(999),NUMNOD,IMOX(28),IBAS,ILCS,ILL,NACTIV(999),     
!      4NBFRZM,NBFRZO,NABLFM,NDRNFM,NTYPMT(999,999),NDOOR,NBMADJ,NUMSHV,   
!      5NBSHL(999),NCRSTS(999),NUMSHH,NSKIPE,NACSH,NWAT,NPEND,NBCBOT,
!      6NCRTOP,NBFZOE,NBFZME,NGEOM,NL(999,999),NFRSCT,NLOGSH,NADAB,NINVIS,
!      7NSIMST,NSTEEL,NOVHT,NOVTK,NOVUM,NOVEM,NOVSIG,NPLLOC(999),NBPL,
!      8IXP(999),IYP(999),NVTPE,NSOLTP,NSOLF,NINTF,IFLGA(999),ICTYPE,ICTC,
!      9NPOURS,NSMP,NPED,NDOR,NSHL,NANULS,NSMPCV,NBOIL,NSWALL,NMVER,
!      1NCRTEM,NTHINC,NVELP,NITMAX,NENMAX,NPRINT,NPFREQ,NTIMSPC,NPLFREQ,
!      2NPLTOT,NJET,NJETP,NJETD,NJETND,NODCAP,NVELPW,NITMAXW,NENMXW,
!      3IFLGJ(999),NBEDCQ,ISHELE
!       COMMON/PRINTR/ QFEH2O,QCRH2O,QZRH2O,QFECO2,QCRCO2,QZRCO2,
!      4XFH2OU,XFCAOH,XFMGCA,XFCACO,XZRMRE,XFEMRE,XCRMRE,XZRORE,XFEORE,   
!      5XCRORE,XMH2O,XMCO2,XMCACO,XMMGCA,XMCAOH,TFWL,TFWS,TBWL,TBWS,      
!      6TMCAL,TMCAS,TCAL,TCAS,TFOS,TFOL,TFMS,TFML,XVISC(28),SVISC(28),    
!      7XMOL(28),FMMOL(28),ROM(28),ROMLIQ(28),AEQM(28,2),BEQM(28,2),
!      8CEQM(28,2),ECL,ECS,ECAL,ECAS,EMCAL,EMCAS,EBWL,EBWS,EFWL,EFWS,    
!      9STEF,GRAV,PI,TCS,TCL,CCL,CCS,RMASSL,WPCC,WPM,WPA,WPCS,ROC,RMASSS,   
!      1ANGSHL,RSLAGL,RSLAGS,HNODT,VFAV,VGAV,QXAV,XWTSS(16),  
!      2TSCS(2),TSCL(2),ESCS(2),ESCL(2),CCSS(2),CCSL(2),ROSTLS,ROSTLL,
!      3XFRGAS,HMINC,TST(99),TSTOP(99),AINTP(99),BINTP(99),DRATIO(999),
!      4XBCN(999),XDCN(999),XBLT(15),ADEC(99),BDEC(99),APOUR(16,99),
!      5BPOUR(16,99),XWTC(14),BWIDTH,THCKCV,TMBOIL,TEBOIL,VFINT,ANGFAN,
!      6ALPMAX,THSHL,XFCABL,XNDMIN,DVMX,DAVMX,DEAVMX,DEMX,TDC,QDCU,QDCUO2,
!      7TSINJ,EINJ,DTINJ,TKINJ,ROEV,CPINJ,SURFT,VSINJ,EMINJ,TSINJO,EINJO,
!      8DTINJO,TKINJO,ROEVO,CPINJO,SURFTO,VSINJO,EMINJO,XLEADE,ARSUM,
!      9DBUBOX,UTRISE,TREMSH,DJET,DFALL,WEBER,FROUDE,XPSAITO,XPEPSTN,
!      1FRAG,XMBEDT,XMBED(16),XLPENT,XLPENA,UJET,UFALL,HFALL,ERPV,
!      2TJETT(99),DJETT(99),HWATP,XDOTJET,DVMXW,DAVMXW,DEMXW,DEAVMXW,
!      3QJETW,XSTMJF,TINTSJF,ESAT,DRDOOR,DRANL,EI,QDCBUO2,QDCBU,
!      4EBEDS,EBEDB
!       IF(NADAB.EQ.0) GO TO 88
!       HSHELL=0.D0
!       GO TO 100
!    88 CONTINUE
!       ANFAR=(PI*ANGSHL)/180.D0  
!       HTOT=HEIGHT/(1.D0-VOID)   
!       HTOT=DMAX1(HTOT,HMINC)    
!       HEV=2.D0*BWIDTH
!       PR=ABS((UM*CM)/TKM)
!       RENV=ABS((PM*HEV*V)/UM)   
!       HSHELL=TKM/XLENSH
!       IF(RENV.GT.0.D0) HSHELL=(1.1007D0*(RENV**.368D0)*(PR**.42D0)*TKM)/
!      1HEV
!       HFCONV=HSHELL   
!       IF(NLOGSH.EQ.0) GO TO 100 
!       HVAL=DMAX1(HEIGHT,HMINC)  
!       HEV=HVAL/((1.D0-VOID)*COS(ANFAR))   
!       ULIQ=17.D0*VG   
!       IF(VG.GE.0.06) ULIQ=1.02  
!       REUL=ABS((PM*HEV*ULIQ)/UM)
!       HBUB=(.037*(REUL**.8)*(PR**.33)*TKM)/HEV      
!       HSHELL=HBUB     
!       IF(NLOGSH.EQ.2) HSHELL=HBUB+HFCONV  
!   100 CONTINUE
!       RETURN
!       END   
! C...................................................................... 
! C.....GIVEN THE FLUID TEMPERATURE AND THE COLLAPSED DEPTHS OF THE
! C.....FLUID CONSTITUENT MATERIALS, THIS ROUTINE CALCULATES THE MELT
! C.....VISCOSITY FOR THE CASE IN WHICH A USER-SPECIFIED VISCOSITY IS 
! C.....SUPPLIED, WITH VISCOSITY ENHANCEMENT BELOW THE OXIDE PHASE 
! C.....LIQUIDUS CALCULATED USING THE ISHII-ZUBER CORRELATION. 
! C...................................................................... 
!       SUBROUTINE VISCS(T,HSEND,VISFLO,VISFLM,VISF,VISRE)
!       IMPLICIT DOUBLE PRECISION(A-H,O-Z)
!       DIMENSION HSEND(28)
!       COMMON/PROPI/ NMATC,NMATFI,NMATFF,ICAOH2,ICACO3,IMCCO3,IFH2O,     
!      1IVH2O,ICK2O,IVK2O,INA2O,ITIO2,ISIO2,ICAO,IMGO,IAL2O3,IFEO,IFE2O3, 
!      2IFE3O4,IFE,ICR,INI,IZR,IU,IB4C,IB,ICR2O3,INIO,IUO2,IZRO2,IB2O3,   
!      3NBCINT(999),NODES(999),NUMNOD,IMOX(28),IBAS,ILCS,ILL,NACTIV(999),     
!      4NBFRZM,NBFRZO,NABLFM,NDRNFM,NTYPMT(999,999),NDOOR,NBMADJ,NUMSHV,   
!      5NBSHL(999),NCRSTS(999),NUMSHH,NSKIPE,NACSH,NWAT,NPEND,NBCBOT,
!      6NCRTOP,NBFZOE,NBFZME,NGEOM,NL(999,999),NFRSCT,NLOGSH,NADAB,NINVIS,
!      7NSIMST,NSTEEL,NOVHT,NOVTK,NOVUM,NOVEM,NOVSIG,NPLLOC(999),NBPL,
!      8IXP(999),IYP(999),NVTPE,NSOLTP,NSOLF,NINTF,IFLGA(999),ICTYPE,ICTC,
!      9NPOURS,NSMP,NPED,NDOR,NSHL,NANULS,NSMPCV,NBOIL,NSWALL,NMVER,
!      1NCRTEM,NTHINC,NVELP,NITMAX,NENMAX,NPRINT,NPFREQ,NTIMSPC,NPLFREQ,
!      2NPLTOT,NJET,NJETP,NJETD,NJETND,NODCAP,NVELPW,NITMAXW,NENMXW,
!      3IFLGJ(999),NBEDCQ,ISHELE
!       COMMON/PRINTB/ELEVAT(999),ELOLD(999),XDIST(999,999),XBTW(999,999),
!      1TEMP(999,999),ENTHP(999,999),EOLD(999,999),ENBLK(999),EBKOLD(999),
!      2TBULK(999),HITE(16,999),HITOLD(16,999),HTOT(999),HTOLD(999),
!      3HTCFT(999),HTCOEF(999),QFLUXT(999),QFLUXB(999),VEL(999),ELO(999),
!      4VELOLD(999),SRSCOR(16),AREA(999),RAD(999),ARC(999),VOLCN(16),
!      5VOID(999),VGJ(999),ZABLAT(999),ZABOLD(999),DCRUST(999),
!      6DCROLD(999),DABCON(999),DABOLD(999),DFILMT(999),DFOLT(999),
!      7SMFLX(4,999),XLSMF(4,999),TOTVOL,XFACMS(999),XMFLXA,XMCORT,
!      8VCORT,TOTOX,TOTMET,QFLXT,QFLXB,TIME,DTIME,XMCOR(16),VCOR(16),
!      9TCONI,RSAND,HDOWNC,TBOUND,EMISCN,PDRYWL,XDISTO(999),QOXT(999),
!      1XLENSH,XBTWO(999),RCOMP,WDOOR,RSUMP,RSHELL,RPED,TPED,ELSMP,
!      1TENDP(10,999),TFRZSH,TDEBRS,TKDEBR,PDEBR,CPDEBR,ENENDP(10,999),
!      2ENOLDP(10,999),DXVERT,DXSNK,XDSTE(10,999),XBTE(10,999),HXLA(999),
!      3HXLB(999),TSFEB(999),DCRS(999),DCRSLD(999),HCRS(16,999),
!      4HCRSLD(16,999),THETE0(10,999),THETE1(10,999),QSHELL,QSHELE,TSHELI,
!      5SIGOXE(999),FKOXE(999),RINJC,XLSEC,ANGSEC,ANINJC,XLCHAN,WCHNL,
!      6TEFZX(999),TIMSPC(999),DXNODE(999),TNORM(999),FRCSOL(999),
!      7ALPSPR(999),CRAMCON,HINTF,TSHLMX,XFRMX(999),XFROX(999),XFRTX(999),
!      8XMLMX(999),XMLOX(999),XMLTX(999),XTOTX(999),TIMEO,TMAX,EDOWN(999),
!      9HCP(999)
!       COMMON/DATOVER/COVS,COVL,DHSOV,XMOLOV,ROVS,ROVL,TKOVS,TKOVL,VISOV,
!      1EMOV,SIGOV
!       COMMON/PRINTR/ QFEH2O,QCRH2O,QZRH2O,QFECO2,QCRCO2,QZRCO2,
!      4XFH2OU,XFCAOH,XFMGCA,XFCACO,XZRMRE,XFEMRE,XCRMRE,XZRORE,XFEORE,   
!      5XCRORE,XMH2O,XMCO2,XMCACO,XMMGCA,XMCAOH,TFWL,TFWS,TBWL,TBWS,      
!      6TMCAL,TMCAS,TCAL,TCAS,TFOS,TFOL,TFMS,TFML,XVISC(28),SVISC(28),    
!      7XMOL(28),FMMOL(28),ROM(28),ROMLIQ(28),AEQM(28,2),BEQM(28,2),
!      8CEQM(28,2),ECL,ECS,ECAL,ECAS,EMCAL,EMCAS,EBWL,EBWS,EFWL,EFWS,    
!      9STEF,GRAV,PI,TCS,TCL,CCL,CCS,RMASSL,WPCC,WPM,WPA,WPCS,ROC,RMASSS,   
!      1ANGSHL,RSLAGL,RSLAGS,HNODT,VFAV,VGAV,QXAV,XWTSS(16),  
!      2TSCS(2),TSCL(2),ESCS(2),ESCL(2),CCSS(2),CCSL(2),ROSTLS,ROSTLL,
!      3XFRGAS,HMINC,TST(99),TSTOP(99),AINTP(99),BINTP(99),DRATIO(999),
!      4XBCN(999),XDCN(999),XBLT(15),ADEC(99),BDEC(99),APOUR(16,99),
!      5BPOUR(16,99),XWTC(14),BWIDTH,THCKCV,TMBOIL,TEBOIL,VFINT,ANGFAN,
!      6ALPMAX,THSHL,XFCABL,XNDMIN,DVMX,DAVMX,DEAVMX,DEMX,TDC,QDCU,QDCUO2,
!      7TSINJ,EINJ,DTINJ,TKINJ,ROEV,CPINJ,SURFT,VSINJ,EMINJ,TSINJO,EINJO,
!      8DTINJO,TKINJO,ROEVO,CPINJO,SURFTO,VSINJO,EMINJO,XLEADE,ARSUM,
!      9DBUBOX,UTRISE,TREMSH,DJET,DFALL,WEBER,FROUDE,XPSAITO,XPEPSTN,
!      1FRAG,XMBEDT,XMBED(16),XLPENT,XLPENA,UJET,UFALL,HFALL,ERPV,
!      2TJETT(99),DJETT(99),HWATP,XDOTJET,DVMXW,DAVMXW,DEMXW,DEAVMXW,
!      3QJETW,XSTMJF,TINTSJF,ESAT,DRDOOR,DRANL,EI,QDCBUO2,QDCBU,
!      4EBEDS,EBEDB
!       DATA ZERO / 0.0 /
!       DATA ONE / 1.0 /
! C.....CALCULATE THE SOLID FRACTION OF THE MELT 
!       CALL SOLCALC(T,HSEND,VFM,VFO,VFSOLM,VFSOLO,VSOLT)
!       IF(VSOLT.GT.ZERO) GO TO 1815 
!       VISF=VISOV
!       VISRE=VISF
!       VISFLO=VISF
!       VISFLM=VISF
!       GO TO 900
!  1815 CONTINUE
! C.....CALCULATE THE EFFECTIVE VISCOSITY OF THE LIQUID-SOLID   
! C.....PARTICULATE MIXTURE USING EITHER THE ISHII-ZUBER CORRELATION OR 
! C.....THE RAMACCIOTTI CORRELATION.
!       IF(NVTPE.EQ.2) GO TO 99
!       VFPART=DMIN1(VSOLT/ALPMAX,ONE)
!       EXPFAC=1.75*ALPMAX
!       VSDFAC=ONE/(ONE+1.D-07-VFPART)**EXPFAC
!       GO TO 97
!    99 CONTINUE
!       ARG=2.5*CRAMCON*VSOLT
!       VSDFAC=DEXP(ARG)
!    97 CONTINUE
!       VISF=VSDFAC*VISOV
!       VISRE=VISF      
!       VISFLO=VISF
!       VISFLM=VISF
!   900 CONTINUE
!       RETURN
!       END   
! C...................................................................... 
! C.....SUBROUTINE PLOTSPC SAVES THE SPATIALLY DEPENDENT SPREADING DATA 
! C.....AT USER-SPECIFIED TIMES.
! C...................................................................... 
!       SUBROUTINE PLOTSPC(KPL)
!       IMPLICIT DOUBLE PRECISION(A-H,O-Z)
!       COMMON/PRINTR/ QFEH2O,QCRH2O,QZRH2O,QFECO2,QCRCO2,QZRCO2,
!      4XFH2OU,XFCAOH,XFMGCA,XFCACO,XZRMRE,XFEMRE,XCRMRE,XZRORE,XFEORE,   
!      5XCRORE,XMH2O,XMCO2,XMCACO,XMMGCA,XMCAOH,TFWL,TFWS,TBWL,TBWS,      
!      6TMCAL,TMCAS,TCAL,TCAS,TFOS,TFOL,TFMS,TFML,XVISC(28),SVISC(28),    
!      7XMOL(28),FMMOL(28),ROM(28),ROMLIQ(28),AEQM(28,2),BEQM(28,2),
!      8CEQM(28,2),ECL,ECS,ECAL,ECAS,EMCAL,EMCAS,EBWL,EBWS,EFWL,EFWS,    
!      9STEF,GRAV,PI,TCS,TCL,CCL,CCS,RMASSL,WPCC,WPM,WPA,WPCS,ROC,RMASSS,   
!      1ANGSHL,RSLAGL,RSLAGS,HNODT,VFAV,VGAV,QXAV,XWTSS(16),  
!      2TSCS(2),TSCL(2),ESCS(2),ESCL(2),CCSS(2),CCSL(2),ROSTLS,ROSTLL,
!      3XFRGAS,HMINC,TST(99),TSTOP(99),AINTP(99),BINTP(99),DRATIO(999),
!      4XBCN(999),XDCN(999),XBLT(15),ADEC(99),BDEC(99),APOUR(16,99),
!      5BPOUR(16,99),XWTC(14),BWIDTH,THCKCV,TMBOIL,TEBOIL,VFINT,ANGFAN,
!      6ALPMAX,THSHL,XFCABL,XNDMIN,DVMX,DAVMX,DEAVMX,DEMX,TDC,QDCU,QDCUO2,
!      7TSINJ,EINJ,DTINJ,TKINJ,ROEV,CPINJ,SURFT,VSINJ,EMINJ,TSINJO,EINJO,
!      8DTINJO,TKINJO,ROEVO,CPINJO,SURFTO,VSINJO,EMINJO,XLEADE,ARSUM,
!      9DBUBOX,UTRISE,TREMSH,DJET,DFALL,WEBER,FROUDE,XPSAITO,XPEPSTN,
!      1FRAG,XMBEDT,XMBED(16),XLPENT,XLPENA,UJET,UFALL,HFALL,ERPV,
!      2TJETT(99),DJETT(99),HWATP,XDOTJET,DVMXW,DAVMXW,DEMXW,DEAVMXW,
!      3QJETW,XSTMJF,TINTSJF,ESAT,DRDOOR,DRANL,EI,QDCBUO2,QDCBU,
!      4EBEDS,EBEDB
!       COMMON/PRINTB/ELEVAT(999),ELOLD(999),XDIST(999,999),XBTW(999,999),
!      1TEMP(999,999),ENTHP(999,999),EOLD(999,999),ENBLK(999),EBKOLD(999),
!      2TBULK(999),HITE(16,999),HITOLD(16,999),HTOT(999),HTOLD(999),
!      3HTCFT(999),HTCOEF(999),QFLUXT(999),QFLUXB(999),VEL(999),ELO(999),
!      4VELOLD(999),SRSCOR(16),AREA(999),RAD(999),ARC(999),VOLCN(16),
!      5VOID(999),VGJ(999),ZABLAT(999),ZABOLD(999),DCRUST(999),
!      6DCROLD(999),DABCON(999),DABOLD(999),DFILMT(999),DFOLT(999),
!      7SMFLX(4,999),XLSMF(4,999),TOTVOL,XFACMS(999),XMFLXA,XMCORT,
!      8VCORT,TOTOX,TOTMET,QFLXT,QFLXB,TIME,DTIME,XMCOR(16),VCOR(16),
!      9TCONI,RSAND,HDOWNC,TBOUND,EMISCN,PDRYWL,XDISTO(999),QOXT(999),
!      1XLENSH,XBTWO(999),RCOMP,WDOOR,RSUMP,RSHELL,RPED,TPED,ELSMP,
!      1TENDP(10,999),TFRZSH,TDEBRS,TKDEBR,PDEBR,CPDEBR,ENENDP(10,999),
!      2ENOLDP(10,999),DXVERT,DXSNK,XDSTE(10,999),XBTE(10,999),HXLA(999),
!      3HXLB(999),TSFEB(999),DCRS(999),DCRSLD(999),HCRS(16,999),
!      4HCRSLD(16,999),THETE0(10,999),THETE1(10,999),QSHELL,QSHELE,TSHELI,
!      5SIGOXE(999),FKOXE(999),RINJC,XLSEC,ANGSEC,ANINJC,XLCHAN,WCHNL,
!      6TEFZX(999),TIMSPC(999),DXNODE(999),TNORM(999),FRCSOL(999),
!      7ALPSPR(999),CRAMCON,HINTF,TSHLMX,XFRMX(999),XFROX(999),XFRTX(999),
!      8XMLMX(999),XMLOX(999),XMLTX(999),XTOTX(999),TIMEO,TMAX,EDOWN(999),
!      9HCP(999)
!       COMMON/HCONS/HMETAL(999),HOXIDE(999)  
!       COMMON/PROPI/ NMATC,NMATFI,NMATFF,ICAOH2,ICACO3,IMCCO3,IFH2O,     
!      1IVH2O,ICK2O,IVK2O,INA2O,ITIO2,ISIO2,ICAO,IMGO,IAL2O3,IFEO,IFE2O3, 
!      2IFE3O4,IFE,ICR,INI,IZR,IU,IB4C,IB,ICR2O3,INIO,IUO2,IZRO2,IB2O3,   
!      3NBCINT(999),NODES(999),NUMNOD,IMOX(28),IBAS,ILCS,ILL,NACTIV(999),     
!      4NBFRZM,NBFRZO,NABLFM,NDRNFM,NTYPMT(999,999),NDOOR,NBMADJ,NUMSHV,   
!      5NBSHL(999),NCRSTS(999),NUMSHH,NSKIPE,NACSH,NWAT,NPEND,NBCBOT,
!      6NCRTOP,NBFZOE,NBFZME,NGEOM,NL(999,999),NFRSCT,NLOGSH,NADAB,NINVIS,
!      7NSIMST,NSTEEL,NOVHT,NOVTK,NOVUM,NOVEM,NOVSIG,NPLLOC(999),NBPL,
!      8IXP(999),IYP(999),NVTPE,NSOLTP,NSOLF,NINTF,IFLGA(999),ICTYPE,ICTC,
!      9NPOURS,NSMP,NPED,NDOR,NSHL,NANULS,NSMPCV,NBOIL,NSWALL,NMVER,
!      1NCRTEM,NTHINC,NVELP,NITMAX,NENMAX,NPRINT,NPFREQ,NTIMSPC,NPLFREQ,
!      2NPLTOT,NJET,NJETP,NJETD,NJETND,NODCAP,NVELPW,NITMAXW,NENMXW,
!      3IFLGJ(999),NBEDCQ,ISHELE
!       COMMON /WATVARS/FCRUST(999),VLW(999),VLWOLD(999),DWAT(999),
!      1DWATOLD(999),EWAT(999),EWATOLD(999),TWAT(999),CORDDC(999),
!      2DSRDC(999),DHDC(999),TSRDC,TINTDC,HWATB(999),TSURFW(999),XMS(999),
!      3XMST,XINTS,ESRDTW(999),TSRDTW(999),DSRDTW(999),TSRDW,TINTDW,
!      4TWATI,ELDCO(999),ELDCX(999,99),CRDCX(999,99),TIMINJ(999,99),
!      5XDTINJ(999,99),TDTINJ(999,99),ELWATI,XMWAT,XMWATO,XBALW,
!      6HDRY(999),EINTW,XMCT(199),XMCDT(16,999),TMPCDT(999),CMPCDT(999),
!      7FDC(999),FCOV(999),FBED(999),FHEAT(999),XFACJ(999),
!      8XMBEDJ(16,999),XMBEDJT(999),PBED,QBED(999),QWATER(999),
!      9QSURFACE(999),QWATERT(999),HBED(999),POROSBED,XMCRDT(16,999),
!      1XMCRT(999),XMBDINT(999),XMT(999)
!       COMMON/PROPM/DTDEM(999),CPMLT(999),FKMLT(999),DENMLT(999),
!      1SIGMLT(999),UMMLT(999),EMIMLT(999)      
!       DATA CENT /100.D0/
!       DATA XMILL /1000.D0/
!       IUNIT=9+KPL
!       NACPLT=0
!       DO 899 KDP=1,NUMNOD
!       IF(NACTIV(KDP).EQ.1) NACPLT=NACPLT+1
!   899 CONTINUE
!       WRITE(IUNIT,3555) TIME
!  3555 FORMAT(E12.5)
!       DO 3557 KN=1,NUMNOD
!       DA=CENT*(ELO(KN)-DABCON(KN))
!       DC=CENT*DCRUST(KN)
!       DF=CENT*DFILMT(KN)
!       EN=1.D-6*ENBLK(KN)
!       HM=CENT*HMETAL(KN)
!       HO=CENT*HOXIDE(KN)
!       HT=CENT*HTOT(KN)
!       DW=CENT*DWAT(KN)
!       HTV=HT/(1.D0-VOID(KN))
!       EL=CENT*ELEVAT(KN)
!       HTP=EL+HTV
!       HTPC=EL+HT
!       HTPCB=HTPC+CENT*HBED(KN)
!       HWPC=DW+HTPC
!       VG=CENT*VGJ(KN)
!       QT=1.D-3*QFLUXT(KN)
!       QB=1.D-3*QFLUXB(KN)
!       QO=1.D-3*QOXT(KN)
!       VL=VEL(KN)*CENT      
!       DX1=RAD(KN)-0.5*DXNODE(KN)
!       DX2=RAD(KN)+0.5*DXNODE(KN)
!       WRITE(IUNIT,3556) DX1,EL,DA,HTPC,HWPC,HTPCB,TBULK(KN),HM,HO,HT,
!      1 HTV,HTP,VOID(KN),VG,TEMP(1,KN),VL,QT,QB,QO,DC,DF,
!      2 UMMLT(KN),XFRMX(KN),XFROX(KN),XMBDINT(KN),XFRTX(KN),
!      3 XMLMX(KN),XMLOX(KN),XMLTX(KN),XTOTX(KN)
!       WRITE(IUNIT,3556) DX2,EL,DA,HTPC,HWPC,HTPCB,TBULK(KN),HM,HO,HT,
!      1 HTV,HTP,VOID(KN),VG,TEMP(1,KN),VL,QT,QB,QO,DC,DF,
!      2 UMMLT(KN),XFRMX(KN),XFROX(KN),XMBDINT(KN),XFRTX(KN),
!      3 XMLMX(KN),XMLOX(KN),XMLTX(KN),XTOTX(KN)
!  3556 FORMAT(E12.5,29(1X,E12.5))     
!  3557 CONTINUE
! C.....WRITE OUT SHELL HEATUP DATA IF ACTIVATED
!       IF(NSKIPE.EQ.0.OR.NACSH.EQ.0) GO TO 69
!       IF(ISHELE.EQ.1) GO TO 69
!       IU2=99+KPL
!       NPH=NUMSHH    
!       WRITE(IU2,*) TIME
!       EV=1.5D0*DXVERT+FLOAT(NPEND-1)*DXVERT
!       DO 88 KV=2,NPEND+1
!       ID=NPEND+3-KV   
!       DP=XMILL*DCRS(ID)
!       EV=EV-DXVERT    
!       IF(NPH.EQ.3) WRITE(IU2,71) EV,DP,(TENDP(I,ID),I=1,NPH)
!       IF(NPH.EQ.4) WRITE(IU2,72) EV,DP,(TENDP(I,ID),I=1,NPH)
!       IF(NPH.EQ.5) WRITE(IU2,73) EV,DP,(TENDP(I,ID),I=1,NPH)
!       IF(NPH.EQ.6) WRITE(IU2,74) EV,DP,(TENDP(I,ID),I=1,NPH)
!       IF(NPH.EQ.7) WRITE(IU2,75) EV,DP,(TENDP(I,ID),I=1,NPH)
!       IF(NPH.EQ.8) WRITE(IU2,76) EV,DP,(TENDP(I,ID),I=1,NPH)
!       IF(NPH.EQ.9) WRITE(IU2,77) EV,DP,(TENDP(I,ID),I=1,NPH)
!       IF(NPH.EQ.10) WRITE(IU2,78) EV,DP,(TENDP(I,ID),I=1,NPH)
!       IF(NPH.GT.10) WRITE(IU2,*) EV,DP,(TENDP(K,ID),K=1,NPH)
!    88 CONTINUE                                                          
!    69 CONTINUE                                                          
!    71 FORMAT(5(1X,E12.5))                                            
!    72 FORMAT(6(1X,E12.5))                                            
!    73 FORMAT(7(1X,E12.5))                                            
!    74 FORMAT(8(1X,E12.5))                                            
!    75 FORMAT(9(1X,E12.5))                                            
!    76 FORMAT(10(1X,E12.5))                                            
!    77 FORMAT(11(1X,E12.5))                                            
!    78 FORMAT(12(1X,E12.5))                                            
!       RETURN
!       END   
! C...................................................................... 
! C.....SUBROUTINE PLOTTIM SAVES DATA AT SELECTED NODES AT A 
! C.....USER-SPECIFIED PLOTTING FREQUENCY.
! C...................................................................... 
!       SUBROUTINE PLOTTIM
!       IMPLICIT DOUBLE PRECISION(A-H,O-Z)
!       COMMON/PRINTR/ QFEH2O,QCRH2O,QZRH2O,QFECO2,QCRCO2,QZRCO2,
!      4XFH2OU,XFCAOH,XFMGCA,XFCACO,XZRMRE,XFEMRE,XCRMRE,XZRORE,XFEORE,   
!      5XCRORE,XMH2O,XMCO2,XMCACO,XMMGCA,XMCAOH,TFWL,TFWS,TBWL,TBWS,      
!      6TMCAL,TMCAS,TCAL,TCAS,TFOS,TFOL,TFMS,TFML,XVISC(28),SVISC(28),    
!      7XMOL(28),FMMOL(28),ROM(28),ROMLIQ(28),AEQM(28,2),BEQM(28,2),
!      8CEQM(28,2),ECL,ECS,ECAL,ECAS,EMCAL,EMCAS,EBWL,EBWS,EFWL,EFWS,    
!      9STEF,GRAV,PI,TCS,TCL,CCL,CCS,RMASSL,WPCC,WPM,WPA,WPCS,ROC,RMASSS,   
!      1ANGSHL,RSLAGL,RSLAGS,HNODT,VFAV,VGAV,QXAV,XWTSS(16),  
!      2TSCS(2),TSCL(2),ESCS(2),ESCL(2),CCSS(2),CCSL(2),ROSTLS,ROSTLL,
!      3XFRGAS,HMINC,TST(99),TSTOP(99),AINTP(99),BINTP(99),DRATIO(999),
!      4XBCN(999),XDCN(999),XBLT(15),ADEC(99),BDEC(99),APOUR(16,99),
!      5BPOUR(16,99),XWTC(14),BWIDTH,THCKCV,TMBOIL,TEBOIL,VFINT,ANGFAN,
!      6ALPMAX,THSHL,XFCABL,XNDMIN,DVMX,DAVMX,DEAVMX,DEMX,TDC,QDCU,QDCUO2,
!      7TSINJ,EINJ,DTINJ,TKINJ,ROEV,CPINJ,SURFT,VSINJ,EMINJ,TSINJO,EINJO,
!      8DTINJO,TKINJO,ROEVO,CPINJO,SURFTO,VSINJO,EMINJO,XLEADE,ARSUM,
!      9DBUBOX,UTRISE,TREMSH,DJET,DFALL,WEBER,FROUDE,XPSAITO,XPEPSTN,
!      1FRAG,XMBEDT,XMBED(16),XLPENT,XLPENA,UJET,UFALL,HFALL,ERPV,
!      2TJETT(99),DJETT(99),HWATP,XDOTJET,DVMXW,DAVMXW,DEMXW,DEAVMXW,
!      3QJETW,XSTMJF,TINTSJF,ESAT,DRDOOR,DRANL,EI,QDCBUO2,QDCBU,
!      4EBEDS,EBEDB
!       COMMON/PRINTB/ELEVAT(999),ELOLD(999),XDIST(999,999),XBTW(999,999),
!      1TEMP(999,999),ENTHP(999,999),EOLD(999,999),ENBLK(999),EBKOLD(999),
!      2TBULK(999),HITE(16,999),HITOLD(16,999),HTOT(999),HTOLD(999),
!      3HTCFT(999),HTCOEF(999),QFLUXT(999),QFLUXB(999),VEL(999),ELO(999),
!      4VELOLD(999),SRSCOR(16),AREA(999),RAD(999),ARC(999),VOLCN(16),
!      5VOID(999),VGJ(999),ZABLAT(999),ZABOLD(999),DCRUST(999),
!      6DCROLD(999),DABCON(999),DABOLD(999),DFILMT(999),DFOLT(999),
!      7SMFLX(4,999),XLSMF(4,999),TOTVOL,XFACMS(999),XMFLXA,XMCORT,
!      8VCORT,TOTOX,TOTMET,QFLXT,QFLXB,TIME,DTIME,XMCOR(16),VCOR(16),
!      9TCONI,RSAND,HDOWNC,TBOUND,EMISCN,PDRYWL,XDISTO(999),QOXT(999),
!      1XLENSH,XBTWO(999),RCOMP,WDOOR,RSUMP,RSHELL,RPED,TPED,ELSMP,
!      1TENDP(10,999),TFRZSH,TDEBRS,TKDEBR,PDEBR,CPDEBR,ENENDP(10,999),
!      2ENOLDP(10,999),DXVERT,DXSNK,XDSTE(10,999),XBTE(10,999),HXLA(999),
!      3HXLB(999),TSFEB(999),DCRS(999),DCRSLD(999),HCRS(16,999),
!      4HCRSLD(16,999),THETE0(10,999),THETE1(10,999),QSHELL,QSHELE,TSHELI,
!      5SIGOXE(999),FKOXE(999),RINJC,XLSEC,ANGSEC,ANINJC,XLCHAN,WCHNL,
!      6TEFZX(999),TIMSPC(999),DXNODE(999),TNORM(999),FRCSOL(999),
!      7ALPSPR(999),CRAMCON,HINTF,TSHLMX,XFRMX(999),XFROX(999),XFRTX(999),
!      8XMLMX(999),XMLOX(999),XMLTX(999),XTOTX(999),TIMEO,TMAX,EDOWN(999),
!      9HCP(999)
!       COMMON/HCONS/HMETAL(999),HOXIDE(999)  
!       COMMON/PROPI/ NMATC,NMATFI,NMATFF,ICAOH2,ICACO3,IMCCO3,IFH2O,     
!      1IVH2O,ICK2O,IVK2O,INA2O,ITIO2,ISIO2,ICAO,IMGO,IAL2O3,IFEO,IFE2O3, 
!      2IFE3O4,IFE,ICR,INI,IZR,IU,IB4C,IB,ICR2O3,INIO,IUO2,IZRO2,IB2O3,   
!      3NBCINT(999),NODES(999),NUMNOD,IMOX(28),IBAS,ILCS,ILL,NACTIV(999),     
!      4NBFRZM,NBFRZO,NABLFM,NDRNFM,NTYPMT(999,999),NDOOR,NBMADJ,NUMSHV,   
!      5NBSHL(999),NCRSTS(999),NUMSHH,NSKIPE,NACSH,NWAT,NPEND,NBCBOT,
!      6NCRTOP,NBFZOE,NBFZME,NGEOM,NL(999,999),NFRSCT,NLOGSH,NADAB,NINVIS,
!      7NSIMST,NSTEEL,NOVHT,NOVTK,NOVUM,NOVEM,NOVSIG,NPLLOC(999),NBPL,
!      8IXP(999),IYP(999),NVTPE,NSOLTP,NSOLF,NINTF,IFLGA(999),ICTYPE,ICTC,
!      9NPOURS,NSMP,NPED,NDOR,NSHL,NANULS,NSMPCV,NBOIL,NSWALL,NMVER,
!      1NCRTEM,NTHINC,NVELP,NITMAX,NENMAX,NPRINT,NPFREQ,NTIMSPC,NPLFREQ,
!      2NPLTOT,NJET,NJETP,NJETD,NJETND,NODCAP,NVELPW,NITMAXW,NENMXW,
!      3IFLGJ(999),NBEDCQ,ISHELE
!       COMMON /WATVARS/FCRUST(999),VLW(999),VLWOLD(999),DWAT(999),
!      1DWATOLD(999),EWAT(999),EWATOLD(999),TWAT(999),CORDDC(999),
!      2DSRDC(999),DHDC(999),TSRDC,TINTDC,HWATB(999),TSURFW(999),XMS(999),
!      3XMST,XINTS,ESRDTW(999),TSRDTW(999),DSRDTW(999),TSRDW,TINTDW,
!      4TWATI,ELDCO(999),ELDCX(999,99),CRDCX(999,99),TIMINJ(999,99),
!      5XDTINJ(999,99),TDTINJ(999,99),ELWATI,XMWAT,XMWATO,XBALW,
!      6HDRY(999),EINTW,XMCT(199),XMCDT(16,999),TMPCDT(999),CMPCDT(999),
!      7FDC(999),FCOV(999),FBED(999),FHEAT(999),XFACJ(999),
!      8XMBEDJ(16,999),XMBEDJT(999),PBED,QBED(999),QWATER(999),
!      9QSURFACE(999),QWATERT(999),HBED(999),POROSBED,XMCRDT(16,999),
!      1XMCRT(999),XMBDINT(999),XMT(999)
!       COMMON/PROPM/DTDEM(999),CPMLT(999),FKMLT(999),DENMLT(999),
!      1SIGMLT(999),UMMLT(999),EMIMLT(999)      
!       DATA CENT /100.D0/
!       DO 3555 KDP=1,NPLTOT
!       IUNIT=19+KDP
!       KN=NPLLOC(KDP)
!       DA=CENT*(ELO(KN)-DABCON(KN))
!       DC=CENT*DCRUST(KN)
!       DF=CENT*DFILMT(KN)
!       EN=1.D-6*ENBLK(KN)
!       HM=CENT*HMETAL(KN)
!       HO=CENT*HOXIDE(KN)
!       HT=CENT*HTOT(KN)
!       DW=CENT*DWAT(KN)
!       HTV=HT/(1.D0-VOID(KN))
!       EL=CENT*ELEVAT(KN)
!       HTP=EL+HTV
!       HTPC=EL+HT
!       HWPC=DW+HTPC
!       VG=CENT*VGJ(KN)
!       QT=1.D-3*QFLUXT(KN)
!       QB=1.D-3*QFLUXB(KN)
!       QO=1.D-3*QOXT(KN)
!       VL=VEL(KN)*CENT      
!       AP=ALPSPR(KN)
! C.....WRITE OUT DATA AT THE USER-SELECTED NODE....
!       WRITE(IUNIT,3556) KN,TIME,EL,DA,HTPC,HWPC,TBULK(KN),HM,HO,HT,
!      1 HTV,HTP,VOID(KN),VG,TEMP(1,KN),VL,QT,QB,QO,DC,DF,
!      2 UMMLT(KN),AP
!  3556 FORMAT(I5,22(1X,E12.5))     
!  3555 CONTINUE
!       RETURN
!       END   
! C...................................................................... 
! C.....SUBROUTINE PLOTBM PLOTS TEMPERATURES AT SELECTED LOCATIONS IN THE 
! C.....BASEMAT IF THAT OPTION HAS BEEN SELECTED.
! C...................................................................... 
!       SUBROUTINE PLOTBM
!       IMPLICIT DOUBLE PRECISION(A-H,O-Z)
!       COMMON/PRINTB/ELEVAT(999),ELOLD(999),XDIST(999,999),XBTW(999,999),
!      1TEMP(999,999),ENTHP(999,999),EOLD(999,999),ENBLK(999),EBKOLD(999),
!      2TBULK(999),HITE(16,999),HITOLD(16,999),HTOT(999),HTOLD(999),
!      3HTCFT(999),HTCOEF(999),QFLUXT(999),QFLUXB(999),VEL(999),ELO(999),
!      4VELOLD(999),SRSCOR(16),AREA(999),RAD(999),ARC(999),VOLCN(16),
!      5VOID(999),VGJ(999),ZABLAT(999),ZABOLD(999),DCRUST(999),
!      6DCROLD(999),DABCON(999),DABOLD(999),DFILMT(999),DFOLT(999),
!      7SMFLX(4,999),XLSMF(4,999),TOTVOL,XFACMS(999),XMFLXA,XMCORT,
!      8VCORT,TOTOX,TOTMET,QFLXT,QFLXB,TIME,DTIME,XMCOR(16),VCOR(16),
!      9TCONI,RSAND,HDOWNC,TBOUND,EMISCN,PDRYWL,XDISTO(999),QOXT(999),
!      1XLENSH,XBTWO(999),RCOMP,WDOOR,RSUMP,RSHELL,RPED,TPED,ELSMP,
!      1TENDP(10,999),TFRZSH,TDEBRS,TKDEBR,PDEBR,CPDEBR,ENENDP(10,999),
!      2ENOLDP(10,999),DXVERT,DXSNK,XDSTE(10,999),XBTE(10,999),HXLA(999),
!      3HXLB(999),TSFEB(999),DCRS(999),DCRSLD(999),HCRS(16,999),
!      4HCRSLD(16,999),THETE0(10,999),THETE1(10,999),QSHELL,QSHELE,TSHELI,
!      5SIGOXE(999),FKOXE(999),RINJC,XLSEC,ANGSEC,ANINJC,XLCHAN,WCHNL,
!      6TEFZX(999),TIMSPC(999),DXNODE(999),TNORM(999),FRCSOL(999),
!      7ALPSPR(999),CRAMCON,HINTF,TSHLMX,XFRMX(999),XFROX(999),XFRTX(999),
!      8XMLMX(999),XMLOX(999),XMLTX(999),XTOTX(999),TIMEO,TMAX,EDOWN(999),
!      9HCP(999)
!       COMMON/PROPI/ NMATC,NMATFI,NMATFF,ICAOH2,ICACO3,IMCCO3,IFH2O,     
!      1IVH2O,ICK2O,IVK2O,INA2O,ITIO2,ISIO2,ICAO,IMGO,IAL2O3,IFEO,IFE2O3, 
!      2IFE3O4,IFE,ICR,INI,IZR,IU,IB4C,IB,ICR2O3,INIO,IUO2,IZRO2,IB2O3,   
!      3NBCINT(999),NODES(999),NUMNOD,IMOX(28),IBAS,ILCS,ILL,NACTIV(999),     
!      4NBFRZM,NBFRZO,NABLFM,NDRNFM,NTYPMT(999,999),NDOOR,NBMADJ,NUMSHV,   
!      5NBSHL(999),NCRSTS(999),NUMSHH,NSKIPE,NACSH,NWAT,NPEND,NBCBOT,
!      6NCRTOP,NBFZOE,NBFZME,NGEOM,NL(999,999),NFRSCT,NLOGSH,NADAB,NINVIS,
!      7NSIMST,NSTEEL,NOVHT,NOVTK,NOVUM,NOVEM,NOVSIG,NPLLOC(999),NBPL,
!      8IXP(999),IYP(999),NVTPE,NSOLTP,NSOLF,NINTF,IFLGA(999),ICTYPE,ICTC,
!      9NPOURS,NSMP,NPED,NDOR,NSHL,NANULS,NSMPCV,NBOIL,NSWALL,NMVER,
!      1NCRTEM,NTHINC,NVELP,NITMAX,NENMAX,NPRINT,NPFREQ,NTIMSPC,NPLFREQ,
!      2NPLTOT,NJET,NJETP,NJETD,NJETND,NODCAP,NVELPW,NITMAXW,NENMXW,
!      3IFLGJ(999),NBEDCQ,ISHELE
!       IF(NBPL .GT. 10) GO TO 88
!       IF(NBPL.EQ.1) WRITE(30,1) TIME,(TEMP(IYP(K),IXP(K)),K=1,NBPL)
!       IF(NBPL.EQ.2) WRITE(30,2) TIME,(TEMP(IYP(K),IXP(K)),K=1,NBPL)
!       IF(NBPL.EQ.3) WRITE(30,3) TIME,(TEMP(IYP(K),IXP(K)),K=1,NBPL)
!       IF(NBPL.EQ.4) WRITE(30,4) TIME,(TEMP(IYP(K),IXP(K)),K=1,NBPL)
!       IF(NBPL.EQ.5) WRITE(30,5) TIME,(TEMP(IYP(K),IXP(K)),K=1,NBPL)
!       IF(NBPL.EQ.6) WRITE(30,6) TIME,(TEMP(IYP(K),IXP(K)),K=1,NBPL)
!       IF(NBPL.EQ.7) WRITE(30,7) TIME,(TEMP(IYP(K),IXP(K)),K=1,NBPL)
!       IF(NBPL.EQ.8) WRITE(30,8) TIME,(TEMP(IYP(K),IXP(K)),K=1,NBPL)
!       IF(NBPL.EQ.9) WRITE(30,9) TIME,(TEMP(IYP(K),IXP(K)),K=1,NBPL)
!       IF(NBPL.EQ.10) WRITE(30,10) TIME,(TEMP(IYP(K),IXP(K)),K=1,NBPL)
!     1 FORMAT(2(2X,E12.5))
!     2 FORMAT(3(2X,E12.5))
!     3 FORMAT(4(2X,E12.5))
!     4 FORMAT(5(2X,E12.5))
!     5 FORMAT(6(2X,E12.5))
!     6 FORMAT(7(2X,E12.5))
!     7 FORMAT(8(2X,E12.5))
!     8 FORMAT(9(2X,E12.5))
!     9 FORMAT(10(2X,E12.5))
!    10 FORMAT(11(2X,E12.5))
!       GO TO 100
!    88 CONTINUE
!       WRITE(30,*) TIME,(TEMP(IYP(K),IXP(K)),K=1,NBPL)
!   100 CONTINUE
!       RETURN
!       END   
! C...................................................................... 
! C.....GIVEN THE FLUID TEMPERATURE AND THE COLLAPSED DEPTHS OF THE
! C.....FLUID CONSTITUENT MATERIALS, THIS ROUTINE CALCULATES THE SOLID
! C.....FRACTIONS OF THE METAL AND OXIDE PHASES, AS WELL AS THE SOLID
! C.....FRACTION OF THE MIXTURE.
! C...................................................................... 
!       SUBROUTINE SOLCALC(T,HSEND,VFM,VFO,VFSOLM,VFSOLO,VSOLT)
!       IMPLICIT DOUBLE PRECISION(A-H,O-Z)
!       DIMENSION HSEND(28)
!       COMMON/PRINTB/ELEVAT(999),ELOLD(999),XDIST(999,999),XBTW(999,999),
!      1TEMP(999,999),ENTHP(999,999),EOLD(999,999),ENBLK(999),EBKOLD(999),
!      2TBULK(999),HITE(16,999),HITOLD(16,999),HTOT(999),HTOLD(999),
!      3HTCFT(999),HTCOEF(999),QFLUXT(999),QFLUXB(999),VEL(999),ELO(999),
!      4VELOLD(999),SRSCOR(16),AREA(999),RAD(999),ARC(999),VOLCN(16),
!      5VOID(999),VGJ(999),ZABLAT(999),ZABOLD(999),DCRUST(999),
!      6DCROLD(999),DABCON(999),DABOLD(999),DFILMT(999),DFOLT(999),
!      7SMFLX(4,999),XLSMF(4,999),TOTVOL,XFACMS(999),XMFLXA,XMCORT,
!      8VCORT,TOTOX,TOTMET,QFLXT,QFLXB,TIME,DTIME,XMCOR(16),VCOR(16),
!      9TCONI,RSAND,HDOWNC,TBOUND,EMISCN,PDRYWL,XDISTO(999),QOXT(999),
!      1XLENSH,XBTWO(999),RCOMP,WDOOR,RSUMP,RSHELL,RPED,TPED,ELSMP,
!      1TENDP(10,999),TFRZSH,TDEBRS,TKDEBR,PDEBR,CPDEBR,ENENDP(10,999),
!      2ENOLDP(10,999),DXVERT,DXSNK,XDSTE(10,999),XBTE(10,999),HXLA(999),
!      3HXLB(999),TSFEB(999),DCRS(999),DCRSLD(999),HCRS(16,999),
!      4HCRSLD(16,999),THETE0(10,999),THETE1(10,999),QSHELL,QSHELE,TSHELI,
!      5SIGOXE(999),FKOXE(999),RINJC,XLSEC,ANGSEC,ANINJC,XLCHAN,WCHNL,
!      6TEFZX(999),TIMSPC(999),DXNODE(999),TNORM(999),FRCSOL(999),
!      7ALPSPR(999),CRAMCON,HINTF,TSHLMX,XFRMX(999),XFROX(999),XFRTX(999),
!      8XMLMX(999),XMLOX(999),XMLTX(999),XTOTX(999),TIMEO,TMAX,EDOWN(999),
!      9HCP(999)
!       COMMON/PROPI/ NMATC,NMATFI,NMATFF,ICAOH2,ICACO3,IMCCO3,IFH2O,     
!      1IVH2O,ICK2O,IVK2O,INA2O,ITIO2,ISIO2,ICAO,IMGO,IAL2O3,IFEO,IFE2O3, 
!      2IFE3O4,IFE,ICR,INI,IZR,IU,IB4C,IB,ICR2O3,INIO,IUO2,IZRO2,IB2O3,   
!      3NBCINT(999),NODES(999),NUMNOD,IMOX(28),IBAS,ILCS,ILL,NACTIV(999),     
!      4NBFRZM,NBFRZO,NABLFM,NDRNFM,NTYPMT(999,999),NDOOR,NBMADJ,NUMSHV,   
!      5NBSHL(999),NCRSTS(999),NUMSHH,NSKIPE,NACSH,NWAT,NPEND,NBCBOT,
!      6NCRTOP,NBFZOE,NBFZME,NGEOM,NL(999,999),NFRSCT,NLOGSH,NADAB,NINVIS,
!      7NSIMST,NSTEEL,NOVHT,NOVTK,NOVUM,NOVEM,NOVSIG,NPLLOC(999),NBPL,
!      8IXP(999),IYP(999),NVTPE,NSOLTP,NSOLF,NINTF,IFLGA(999),ICTYPE,ICTC,
!      9NPOURS,NSMP,NPED,NDOR,NSHL,NANULS,NSMPCV,NBOIL,NSWALL,NMVER,
!      1NCRTEM,NTHINC,NVELP,NITMAX,NENMAX,NPRINT,NPFREQ,NTIMSPC,NPLFREQ,
!      2NPLTOT,NJET,NJETP,NJETD,NJETND,NODCAP,NVELPW,NITMAXW,NENMXW,
!      3IFLGJ(999),NBEDCQ,ISHELE
!       COMMON/PRINTR/ QFEH2O,QCRH2O,QZRH2O,QFECO2,QCRCO2,QZRCO2,
!      4XFH2OU,XFCAOH,XFMGCA,XFCACO,XZRMRE,XFEMRE,XCRMRE,XZRORE,XFEORE,   
!      5XCRORE,XMH2O,XMCO2,XMCACO,XMMGCA,XMCAOH,TFWL,TFWS,TBWL,TBWS,      
!      6TMCAL,TMCAS,TCAL,TCAS,TFOS,TFOL,TFMS,TFML,XVISC(28),SVISC(28),    
!      7XMOL(28),FMMOL(28),ROM(28),ROMLIQ(28),AEQM(28,2),BEQM(28,2),
!      8CEQM(28,2),ECL,ECS,ECAL,ECAS,EMCAL,EMCAS,EBWL,EBWS,EFWL,EFWS,    
!      9STEF,GRAV,PI,TCS,TCL,CCL,CCS,RMASSL,WPCC,WPM,WPA,WPCS,ROC,RMASSS,   
!      1ANGSHL,RSLAGL,RSLAGS,HNODT,VFAV,VGAV,QXAV,XWTSS(16),  
!      2TSCS(2),TSCL(2),ESCS(2),ESCL(2),CCSS(2),CCSL(2),ROSTLS,ROSTLL,
!      3XFRGAS,HMINC,TST(99),TSTOP(99),AINTP(99),BINTP(99),DRATIO(999),
!      4XBCN(999),XDCN(999),XBLT(15),ADEC(99),BDEC(99),APOUR(16,99),
!      5BPOUR(16,99),XWTC(14),BWIDTH,THCKCV,TMBOIL,TEBOIL,VFINT,ANGFAN,
!      6ALPMAX,THSHL,XFCABL,XNDMIN,DVMX,DAVMX,DEAVMX,DEMX,TDC,QDCU,QDCUO2,
!      7TSINJ,EINJ,DTINJ,TKINJ,ROEV,CPINJ,SURFT,VSINJ,EMINJ,TSINJO,EINJO,
!      8DTINJO,TKINJO,ROEVO,CPINJO,SURFTO,VSINJO,EMINJO,XLEADE,ARSUM,
!      9DBUBOX,UTRISE,TREMSH,DJET,DFALL,WEBER,FROUDE,XPSAITO,XPEPSTN,
!      1FRAG,XMBEDT,XMBED(16),XLPENT,XLPENA,UJET,UFALL,HFALL,ERPV,
!      2TJETT(99),DJETT(99),HWATP,XDOTJET,DVMXW,DAVMXW,DEMXW,DEAVMXW,
!      3QJETW,XSTMJF,TINTSJF,ESAT,DRDOOR,DRANL,EI,QDCBUO2,QDCBU,
!      4EBEDS,EBEDB
!       DATA ZERO / 0.0 /
!       DATA ONE / 1.0 /
! C.....FIRST CALCULATE THE COLLAPSED VOLUME FRACTIONS, VFO AND VFM, OF
! C.....THE OXIDE AND METAL PHASES HERE.
!       HT=ZERO
!       HTM=ZERO
!       HTO=ZERO
!       DO 399 I=NMATFI,NMATFF    
!       IF (IMOX(I) .NE. 1) GO TO 399
!       HT=HT+HSEND(I)
!       HTO=HTO+HSEND(I)
!   399 CONTINUE
!       DO 499 I=NMATFI,NMATFF    
!       IF (IMOX(I) .NE. 0) GO TO 499
!       HT=HT+HSEND(I)
!       HTM=HTM+HSEND(I)
!   499 CONTINUE
!       VFM=HTM/HT     
!       VFO=HTO/HT     
! C.....NOW CHECK TO SEE IF MATERIAL HAS A MOLTEN COMPONENT, OTHERWISE
! C.....SET SOLID FRACTION EQUAL TO ONE.
!       IF(T.GT.TFMS.OR.T.GT.TFOS) GO TO 650
! C.....ALL SOLID, SET FRACTIONS ACCORDINGLY AND EXIT.
!       VFSOLM=ONE
!       VFSOLO=ONE
!       VSOLT=ONE
!       GO TO 900
!   650 CONTINUE
! C.....CALCULATE THE EFFECTIVE VISCOSITY OF THE LIQUID OXIDE-METAL
! C.....MIXTURE USING THE EXPRESSION PROPOSED BY ISHII AND ZUBER.
!       XSM=(TFML-T)/(TFML-TFMS)
!       IF (XSM .GT. ONE) XSM=ONE 
!       IF (XSM .LT. ZERO) XSM=ZERO
!       VFSOLM=XSM
!       XSO=(TFOL-T)/(TFOL-TFOS)
!       IF (XSO .GT. ONE) XSO=ONE 
!       IF (XSO .LT. ZERO) XSO=ZERO
!       VFSOLO=XSO
!       IF(NSOLTP.EQ.1) GO TO 88
!       DO 77 K=1,NSOLF-1
!       F=(TNORM(K+1)-XSO)/(TNORM(K+1)-TNORM(K))
!       IF(F .LT. ZERO) GO TO 77
!       IF(F .GT. ONE) GO TO 77
!       VFSOLO=FRCSOL(K)+(ONE-F)*(FRCSOL(K+1)-FRCSOL(K))
!       VFSOLO=DMAX1(VFSOLO,ZERO)
!       VFSOLO=DMIN1(VFSOLO,ONE)
!       XSO=VFSOLO
!       GO TO 88
!    77 CONTINUE
!       WRITE(2,*)'WARNING: SOLID FRACTION NOT FOUND, TMELT=',T 
!    88 CONTINUE
!       VSOLT=XSO*VFO+XSM*VFM 
!       VSOLT=DMAX1(VSOLT,ZERO)
!       VSOLT=DMIN1(VSOLT,ONE)
!   900 CONTINUE
!       RETURN
!       END   
C..................................................................... 
C.....SUBROUTINE READER READS THE INPUT FILE FROM SPREAD.DAT AND DOES
C.....SOME MINOR INITIALIZATIONS IN ORDER TO START THE CALCULATION.
C..................................................................... 
!       SUBROUTINE READER
!       IMPLICIT DOUBLE PRECISION(A-H,O-Z)
!       COMMON /LABEL/ TITLE(72)
!       COMMON/PRINTB/ELEVAT(999),ELOLD(999),XDIST(999,999),XBTW(999,999),
!      1TEMP(999,999),ENTHP(999,999),EOLD(999,999),ENBLK(999),EBKOLD(999),
!      2TBULK(999),HITE(16,999),HITOLD(16,999),HTOT(999),HTOLD(999),
!      3HTCFT(999),HTCOEF(999),QFLUXT(999),QFLUXB(999),VEL(999),ELO(999),
!      4VELOLD(999),SRSCOR(16),AREA(999),RAD(999),ARC(999),VOLCN(16),
!      5VOID(999),VGJ(999),ZABLAT(999),ZABOLD(999),DCRUST(999),
!      6DCROLD(999),DABCON(999),DABOLD(999),DFILMT(999),DFOLT(999),
!      7SMFLX(4,999),XLSMF(4,999),TOTVOL,XFACMS(999),XMFLXA,XMCORT,
!      8VCORT,TOTOX,TOTMET,QFLXT,QFLXB,TIME,DTIME,XMCOR(16),VCOR(16),
!      9TCONI,RSAND,HDOWNC,TBOUND,EMISCN,PDRYWL,XDISTO(999),QOXT(999),
!      1XLENSH,XBTWO(999),RCOMP,WDOOR,RSUMP,RSHELL,RPED,TPED,ELSMP,
!      1TENDP(10,999),TFRZSH,TDEBRS,TKDEBR,PDEBR,CPDEBR,ENENDP(10,999),
!      2ENOLDP(10,999),DXVERT,DXSNK,XDSTE(10,999),XBTE(10,999),HXLA(999),
!      3HXLB(999),TSFEB(999),DCRS(999),DCRSLD(999),HCRS(16,999),
!      4HCRSLD(16,999),THETE0(10,999),THETE1(10,999),QSHELL,QSHELE,TSHELI,
!      5SIGOXE(999),FKOXE(999),RINJC,XLSEC,ANGSEC,ANINJC,XLCHAN,WCHNL,
!      6TEFZX(999),TIMSPC(999),DXNODE(999),TNORM(999),FRCSOL(999),
!      7ALPSPR(999),CRAMCON,HINTF,TSHLMX,XFRMX(999),XFROX(999),XFRTX(999),
!      8XMLMX(999),XMLOX(999),XMLTX(999),XTOTX(999),TIMEO,TMAX,EDOWN(999),
!      9HCP(999)
!       COMMON/PROPI/ NMATC,NMATFI,NMATFF,ICAOH2,ICACO3,IMCCO3,IFH2O,     
!      1IVH2O,ICK2O,IVK2O,INA2O,ITIO2,ISIO2,ICAO,IMGO,IAL2O3,IFEO,IFE2O3, 
!      2IFE3O4,IFE,ICR,INI,IZR,IU,IB4C,IB,ICR2O3,INIO,IUO2,IZRO2,IB2O3,   
!      3NBCINT(999),NODES(999),NUMNOD,IMOX(28),IBAS,ILCS,ILL,NACTIV(999),     
!      4NBFRZM,NBFRZO,NABLFM,NDRNFM,NTYPMT(999,999),NDOOR,NBMADJ,NUMSHV,   
!      5NBSHL(999),NCRSTS(999),NUMSHH,NSKIPE,NACSH,NWAT,NPEND,NBCBOT,
!      6NCRTOP,NBFZOE,NBFZME,NGEOM,NL(999,999),NFRSCT,NLOGSH,NADAB,NINVIS,
!      7NSIMST,NSTEEL,NOVHT,NOVTK,NOVUM,NOVEM,NOVSIG,NPLLOC(999),NBPL,
!      8IXP(999),IYP(999),NVTPE,NSOLTP,NSOLF,NINTF,IFLGA(999),ICTYPE,ICTC,
!      9NPOURS,NSMP,NPED,NDOR,NSHL,NANULS,NSMPCV,NBOIL,NSWALL,NMVER,
!      1NCRTEM,NTHINC,NVELP,NITMAX,NENMAX,NPRINT,NPFREQ,NTIMSPC,NPLFREQ,
!      2NPLTOT,NJET,NJETP,NJETD,NJETND,NODCAP,NVELPW,NITMAXW,NENMXW,
!      3IFLGJ(999),NBEDCQ,ISHELE
!       COMMON/DATOVER/COVS,COVL,DHSOV,XMOLOV,ROVS,ROVL,TKOVS,TKOVL,VISOV,
!      1EMOV,SIGOV
!       COMMON/PRINTR/ QFEH2O,QCRH2O,QZRH2O,QFECO2,QCRCO2,QZRCO2,
!      4XFH2OU,XFCAOH,XFMGCA,XFCACO,XZRMRE,XFEMRE,XCRMRE,XZRORE,XFEORE,   
!      5XCRORE,XMH2O,XMCO2,XMCACO,XMMGCA,XMCAOH,TFWL,TFWS,TBWL,TBWS,      
!      6TMCAL,TMCAS,TCAL,TCAS,TFOS,TFOL,TFMS,TFML,XVISC(28),SVISC(28),    
!      7XMOL(28),FMMOL(28),ROM(28),ROMLIQ(28),AEQM(28,2),BEQM(28,2),
!      8CEQM(28,2),ECL,ECS,ECAL,ECAS,EMCAL,EMCAS,EBWL,EBWS,EFWL,EFWS,    
!      9STEF,GRAV,PI,TCS,TCL,CCL,CCS,RMASSL,WPCC,WPM,WPA,WPCS,ROC,RMASSS,   
!      1ANGSHL,RSLAGL,RSLAGS,HNODT,VFAV,VGAV,QXAV,XWTSS(16),  
!      2TSCS(2),TSCL(2),ESCS(2),ESCL(2),CCSS(2),CCSL(2),ROSTLS,ROSTLL,
!      3XFRGAS,HMINC,TST(99),TSTOP(99),AINTP(99),BINTP(99),DRATIO(999),
!      4XBCN(999),XDCN(999),XBLT(15),ADEC(99),BDEC(99),APOUR(16,99),
!      5BPOUR(16,99),XWTC(14),BWIDTH,THCKCV,TMBOIL,TEBOIL,VFINT,ANGFAN,
!      6ALPMAX,THSHL,XFCABL,XNDMIN,DVMX,DAVMX,DEAVMX,DEMX,TDC,QDCU,QDCUO2,
!      7TSINJ,EINJ,DTINJ,TKINJ,ROEV,CPINJ,SURFT,VSINJ,EMINJ,TSINJO,EINJO,
!      8DTINJO,TKINJO,ROEVO,CPINJO,SURFTO,VSINJO,EMINJO,XLEADE,ARSUM,
!      9DBUBOX,UTRISE,TREMSH,DJET,DFALL,WEBER,FROUDE,XPSAITO,XPEPSTN,
!      1FRAG,XMBEDT,XMBED(16),XLPENT,XLPENA,UJET,UFALL,HFALL,ERPV,
!      2TJETT(99),DJETT(99),HWATP,XDOTJET,DVMXW,DAVMXW,DEMXW,DEAVMXW,
!      3QJETW,XSTMJF,TINTSJF,ESAT,DRDOOR,DRANL,EI,QDCBUO2,QDCBU,
!      4EBEDS,EBEDB
!       COMMON/DATSIMS/TSIS,TSIL,CSIS,CSIL,DHSIL,RSIS,RSIL,TKSIS,TKSIL,
!      1ESIL,XCSI(16)
!       COMMON /WATVARS/FCRUST(999),VLW(999),VLWOLD(999),DWAT(999),
!      1DWATOLD(999),EWAT(999),EWATOLD(999),TWAT(999),CORDDC(999),
!      2DSRDC(999),DHDC(999),TSRDC,TINTDC,HWATB(999),TSURFW(999),XMS(999),
!      3XMST,XINTS,ESRDTW(999),TSRDTW(999),DSRDTW(999),TSRDW,TINTDW,
!      4TWATI,ELDCO(999),ELDCX(999,99),CRDCX(999,99),TIMINJ(999,99),
!      5XDTINJ(999,99),TDTINJ(999,99),ELWATI,XMWAT,XMWATO,XBALW,
!      6HDRY(999),EINTW,XMCT(199),XMCDT(16,999),TMPCDT(999),CMPCDT(999),
!      7FDC(999),FCOV(999),FBED(999),FHEAT(999),XFACJ(999),
!      8XMBEDJ(16,999),XMBEDJT(999),PBED,QBED(999),QWATER(999),
!      9QSURFACE(999),QWATERT(999),HBED(999),POROSBED,XMCRDT(16,999),
!      1XMCRT(999),XMBDINT(999),XMT(999)
!       COMMON /WATINT/NDOWNC,NDC(999),NPTDC(999),NINJ,NINJP(999),
!      1NPTINJ(999)
! C.....WRITE HEADER TO OUTPUT FILE FOR ECHO OF INPUT DATA.
!       WRITE(6,781) 
!   781 FORMAT(1X,'ECHO-WRITE OF INPUT DECK FOR THIS CALCULATION',//) 
! C.....FIRST READ TEXT LABEL FOR INPUT FILE AND WRITE THAT BACK OUT TO 
! C.....THE OUTPUT FILE.
!       READ(5,6) TITLE
!       WRITE(6,7) TITLE
!     6 FORMAT(72A1)
!     7 FORMAT(1X,72A1,/)
! C.....READ IN THE INTITIAL CONCRETE TEMPERATURE AND THE CEQUIVALENT     
! C.....CONCRETE SAND ROUGHNESS.  
!       READ(5,*) TCONI,RSAND    
!       WRITE(6,*) TCONI,RSAND 
! C.....READ ICTC TO SPECIFY THE CONCRETE COMPOSITION.  ICTC=1 FOR
! C.....DEFAULT LIMESTONE-COMMON SAND, ICTC=2 FOR DEFAULT SILICIOUS,      
! C.....OR ICTC=3 FOR DEFAULT LIMESTONE-LIMESTONE.  IF ICTC=4, THE
! C.....COMPOSITION IS USER-SPECIFIED.  IF ICTC=5, THE BASEMAT IS ALL 
! C.....ALL STEEL.      
!       READ(5,*) ICTC 
!       WRITE(6,*) ICTC
!       IF(ICTC.LE.3) GO TO 12    
!       IF(ICTC.EQ.5) GO TO 122
! C.....READ THE USER SPECIFIED COMPOSITIONS (WEIGHT PERCENT) IN THE      
! C.....ORDER CO2, H2O, K2O, NA2O, TIO2, SIO2, CAO, MGO, AL2O3, FEO,      
! C.....FE2O3, FE3O4, FE, AND CR. 
!       READ(5,*) XWTC(1),XWTC(2),XWTC(3),XWTC(4),XWTC(5),XWTC(6),XWTC(7)
!       WRITE(6,*) XWTC(1),XWTC(2),XWTC(3),XWTC(4),XWTC(5),XWTC(6),XWTC(7)
!       READ(5,*) XWTC(8),XWTC(9),XWTC(10),XWTC(11),XWTC(12),XWTC(13),XWT
!      1C(14) 
!       WRITE(6,*) XWTC(8),XWTC(9),XWTC(10),XWTC(11),XWTC(12),XWTC(13),XWT
!      1C(14)
! C.....FOR THE USER-SPECIFIED CONCRETE COMPOSITION, READ THE CONCRETE    
! C.....SOLIDUS, LIQUIDUS, AND DECOMPOSITION TEMPERATURES.
!       READ(5,*) TCS,TCL,TDC
!       WRITE(6,*) TCS,TCL,TDC
!    12 CONTINUE
! C.....FOR EITHER THE SPECIFIED OR DEFAULT CONCRETE TYPES, READ THE      
! C.....TEMPERATURE RANGES FOR DRYOUT OF FREE WATER,  BOUND WATER
! C.....(CA(OH)2), CALCIUM CARBONATE (CACO3), AND DOLOMITE(MGCA(CO3)2).   
!       READ(5,*) TFWS,TFWL      
!       READ(5,*) TBWS,TBWL      
!       READ(5,*) TMCAS,TMCAL    
!       READ(5,*) TCAS,TCAL      
!       WRITE(6,*) TFWS,TFWL     
!       WRITE(6,*) TBWS,TBWL     
!       WRITE(6,*) TMCAS,TMCAL   
!       WRITE(6,*) TCAS,TCAL     
!   122 CONTINUE
! C.....READ IN POUR DATA. FIRST READ IN THE ASSUMED OXIDE AND METAL      
! C.....PHASE SOLIDUS AND LIQUIDUS TEMPERATURES.      
!       READ(5,*) TFOS,TFOL      
!       READ(5,*) TFMS,TFML      
!       WRITE(6,*) TFOS,TFOL     
!       WRITE(6,*) TFMS,TFML     
! C.....READ IN TIME-DEPENDENT POUR RATE, COMPOSITION, TEMPERATURE, AND   
! C.....DECAY HEAT DATA.
!       READ(5,*) NPOURS
!       WRITE(6,*) NPOURS
!       DO 19 K=1,NPOURS
!       READ(5,*) TST(K),TSTOP(K),AINTP(K),BINTP(K),ADEC(K),BDEC(K)      
!       WRITE(6,*) TST(K),TSTOP(K),AINTP(K),BINTP(K),ADEC(K),BDEC(K)     
! C.....READ THE TOTAL NUMBER OF CONSTITUENTS DRAINING AT THIS TIMESTEP   
! C.....AND THE POUR RATE COEFFICIENTS FOR EACH CONSTITUENT.    
!       READ(5,*) NISTP
!       WRITE(6,*) NISTP
!       IF(NISTP.EQ.0) GO TO 19   
!       DO 20 ITP=1,NISTP
!       READ(5,*) ITPA,APOUR(ITPA,K),BPOUR(ITPA,K)   
!       WRITE(6,*) ITPA,APOUR(ITPA,K),BPOUR(ITPA,K)  
!    20 CONTINUE
!    19 CONTINUE
! C.....READ MELT JET STREAM BREAKUP ANALYSIS MODEL INPUT DATA: NJET=0
! C.....=> NO ANALYSIS, NJET=1 => THERMAL HOMOGENIZATION ANALYSIS, AND
! C.....NET=2 => JET BREAKUP ANALYSIS.  NJETD=# OF POINTS IN RPV HOLE
! C.....DIAMETER VS. TIME INTERP TABLE, AND ERPV=INITIAL ELEVATION OF 
! C.....HOLE DRAIN SITE OVER BASEMAT.  ALSO, FOR THE CASE IN WHICH 
! C.....NJET=2, NJETND=NUMBER OF NODES INTO WHICH THE PARTICLES FROM 
! C.....JET FRAGMENTATION ARE ASSUMED TO SETTLE AND ACCUMULATE ON TOP
! C.....OF THE CORE DEBRIS OR BASEMAT, WHICHEVER IS ENCOUNTERED.
! C.....IF NJET < 2, SETTING OF NJETND DOES NOT MATTER.
!       READ(5,*) NJET,NJETD,NJETND,ERPV,POROSBED
!       WRITE(6,*) NJET,NJETD,NJETND,ERPV,POROSBED
!       IF(NJET.EQ.0) GO TO 711
!       DO 712 K=1,NJETD
!       READ(5,*) TJETT(K),DJETT(K)
!       WRITE(6,*) TJETT(K),DJETT(K)
!   712 CONTINUE
!       IF(NJET.EQ.1) GO TO 711
!       DO 813 K=1,NJETND
!       READ(5,*) NP
!       WRITE(6,*) NP
!       IFLGJ(NP)=1
!   813 CONTINUE
!   711 CONTINUE
! C.....READ IN MELT CONSTITUENT OVERWRITE DATA IF A SIMULANT MATERIAL 
! C.....IS TO BE USED IN THE SREADING ANALYSIS
!       READ(5,*) NOVHT,COVS,COVL,DHSOV,XMOLOV,ROVS,ROVL
!       WRITE(6,*) NOVHT,COVS,COVL,DHSOV,XMOLOV,ROVS,ROVL
!       READ(5,*) NOVTK,TKOVS,TKOVL
!       WRITE(6,*) NOVTK,TKOVS,TKOVL
!       READ(5,*) NOVUM,VISOV
!       WRITE(6,*) NOVUM,VISOV
!       READ(5,*) NOVEM,EMOV
!       WRITE(6,*) NOVEM,EMOV
!       READ(5,*) NOVSIG,SIGOV
!       WRITE(6,*) NOVSIG,SIGOV
! C.....INITIALIZE SPREADING NODALIZATION.  FOR AUTOMATED MK I  
! C.....NODALIZATION, SET NGEOM=1.  FOR USER-SPECIFIED INPUT, SET NGEOM=2.
!       READ(5,*) NGEOM
!       WRITE(6,*) NGEOM
!       GO TO (31,32),NGEOM
!    31 CONTINUE
! C.....AUTOMATED NODALIZATION INITIALIZED BELOW.     
!       READ(5,*) NSMP,NPED,NDOR,NDOOR,NSHL,NANULS   
!       WRITE(6,*) NSMP,NPED,NDOR,NDOOR,NSHL,NANULS  
! C.....READ REACTOR DIMENSIONS.  
!       NUMNOD=NSMP+NPED+NDOR+NSHL+NANULS   
!       READ(5,*) RSUMP,ELSMP,RPED,TPED,WDOOR,RSHELL 
!       WRITE(6,*) RSUMP,ELSMP,RPED,TPED,WDOOR,RSHELL
! C.....READ MATERIAL DISPERSION RADIUS BENEATH RPV.  
!       READ(5,*) RCOMP
!       WRITE(6,*) RCOMP
! C.....READ SUMP COVER PLATE LOGIC CONTROL VARIABLE AND THE THICKNESS    
! C.....OF THE COVER PLATE.
!       READ(5,*) NSMPCV,THCKCV  
!       WRITE(6,*) NSMPCV,THCKCV 
! C.....USER-SPECIFIED SUMP BOILOVER OPTION PARAMETERS SET BELOW.  SET    
! C.....NBOIL=0 TO BYPASS THIS OPTION, OR NBOIL=1 TO PERFORM.  IF NBOIL=1 
! C.....SET TEBOIL=TEMPERATURE OF MELT IN SUMP WHEN BOILOVER OCCURS.  SET 
! C.....TMBOIL=TIME AT WHICH BOILOVER OF THE SUMP VOLUME OCCURS.  SET     
! C.....XBOIL VECTOR EQUAL TO THE MASS FRACTION OF CONSTITUENTS IN SUMP   
! C.....AT THE TIME OF BOILOVER.  THE MASS OF CORIUM OVER THE COVER
! C.....PLATES IS ADDED TO THE INTIAL INVENTORY IN THE SUMP.    
!       READ(5,*) NBOIL,TMBOIL,TEBOIL,VFINT
!       WRITE(6,*) NBOIL,TMBOIL,TEBOIL,VFINT
!       IF(NBOIL.EQ.0) GO TO 21   
!       DO 22 KVP=1,15  
!       READ(5,*) XBLT(KVP)      
!    22 CONTINUE
!    21 CONTINUE
! C.....READ NSWALL, WHICH CONTROLS THE SIDEWALL HEAT TRANSFER IN THE     
! C.....THE DRYWELL ANNULUS.      
!       READ(5,*) NSWALL
!       WRITE(6,*) NSWALL
! C.....READ SPREADING ANGLE OUTSIDE DOORWAY.
!       READ(5,*) ANGFAN
!       WRITE(6,*) ANGFAN
!       GO TO 33
!    32 CONTINUE
! C.....MANUAL INPUT DONE BELOW.  
!       NDOOR=1
!       NSMPCV=0
!       NSWALL=0
!       ARC(1)=0.D0     
! C.....READ NUMBER OF SPREADING NODES.     
!       READ(5,*) NUMNOD
!       WRITE(6,*) NUMNOD
!       HASUM=0.D0      
!       DO 37 K=1,NUMNOD
! C.....READ THE NODE SIZE, NODE RADIAL LOCATION, ARC LENGTH, AND NODE    
! C.....AREA. 
!       KP1=K+1
!       READ(5,*) IFLGA(K),DXNODE(K),RAD(K),ARC(KP1),AREA(K),ELEVAT(K),
!      1HCP(K)   
!       WRITE(6,*) IFLGA(K),DXNODE(K),RAD(K),ARC(KP1),AREA(K),ELEVAT(K),  
!      1HCP(K)
!       ELO(K)=ELEVAT(K)
!       IF(IFLGA(K).EQ.1) HASUM=HASUM+AREA(K)
!    37 CONTINUE
!       DO 38 K=1,NUMNOD
!       XFACMS(K)=0.D0  
!       IF(IFLGA(K).EQ.1) XFACMS(K)=1.D0/HASUM
!    38 CONTINUE
!    33 CONTINUE
! C.....READ IN DATA FOR VISCOSITY CALCULATION.  READ NVTPE=1 TO USE 
! C.....ISHII-ZUBER VISCOSITY CORRRELATION, OR NVTPE=2 TO USE RAMCACCIOTTI 
! C.....CORRELATION.  SET NSOLTP=1 TO USE LINEAR SOLID FRACTION VARIATION
! C.....FOR OXIDE PHASE, OR SET NSOLTP=2 TO USE USER-SUPPLIED FUNCTION. SET
! C.....NOSLF=NO. OF PTS. IN SOLID PHASE FUNCTION IF NSOLTP=2.  SET ALPMAX   
! C.....MAXIMUM SOLID FRACTION, AND SET CRAMCON=CONSTANT IN RAMACCIIOTTI 
! C.....CORRELATION IF THAT ONE IS USED. 
! C.....RELOCATE.
!       READ(5,*) NVTPE,NSOLTP,NSOLF,ALPMAX,CRAMCON
!       WRITE(6,*) NVTPE,NSOLTP,NSOLF,ALPMAX,CRAMCON
!       IF(NSOLTP.EQ.1) GO TO 8820
!       DO 8810 K=1,NSOLF
!       READ(5,*) TNORM(K),FRCSOL(K)
!       WRITE(6,*) TNORM(K),FRCSOL(K)
!  8810 CONTINUE
!  8820 CONTINUE
! C.....SETUP SUBSTRATE NODALIZATION. FIRST READ NUMBER OF VERTICAL NODES.
!       READ(5,*) NMVER
!       WRITE(6,*) NMVER
! C.....READ INTERNODAL SPACING AND CELL INTERFACE SPACING.     
!       DO 41 K=1,NMVER 
!       READ(5,*) XBCN(K),XDCN(K)
!       WRITE(6,*) XBCN(K),XDCN(K)
!    41 CONTINUE
! C.....ASSIGN BASEMAT NODAL SPACING BEFORE CONTINUING.
!       IAS=ICTC
!       IF(ICTC.GT.3) IAS=1
!       DO 84 K=1,NUMNOD
!       DO 84 L=1,NMVER 
!       XBTW(L,K)=XBCN(K)
!       XDIST(L,K)=XDCN(K)
!       NTYPMT(L,K)=IAS 
!       NL(L,K)=1
!       IF(ICTC.EQ.5) NL(L,K)=2
!    84 CONTINUE
! C.....FLAG NODES WHICH ARE STEEL, AND SET NSIMST=0 IF STEEL NODES ARE
! C.....STEEL, OR SET NSIMST=1 IF STEEL NODES ARE SIMULANT MATERIAL.
!       READ(5,*) NSTEEL,NSIMST
!       WRITE(6,*) NSTEEL,NSIMST
!       IF(NSTEEL.EQ.0.AND.ICTC.LE.4) GO TO 999 
!       IF(ICTC.EQ.5) GO TO 999
!       DO 66 K=1,NSTEEL
!       READ(5,*) IX,IY
!       WRITE(6,*) IX,IY
!       NL(IY,IX)=2     
!    66 CONTINUE
!   999 CONTINUE
! C.....READ IN STEEL SIMULANT PROPERTIES IF STEEL IS PRESENT AND THE 
! C.....USER WANTS TO OVERWRITE THE PROPERTY DATA AND USE SOME OTHER 
! C.....MATERIAL.
!       IF(NSTEEL.EQ.0.AND.ICTC.LE.4) GO TO 797
!       IF(NSIMST.EQ.0) GO TO 797
! C.....SIMULANT STEEL IF THIS POINT IS REACHED; READ DATA FOR 
! C.....OVERWRITE.
!       READ(5,*) TSIS,TSIL,CSIS,CSIL,DHSIL
!       WRITE(6,*) TSIS,TSIL,CSIS,CSIL,DHSIL
!       READ(5,*) RSIS,RSIL,TKSIS,TKSIL,ESIL
!       WRITE(6,*) RSIS,RSIL,TKSIS,TKSIL,ESIL
!       READ(5,*) XCSI(1),XCSI(2),XCSI(3),XCSI(4) 
!       WRITE(6,*) XCSI(1),XCSI(2),XCSI(3),XCSI(4) 
!       READ(5,*) XCSI(5),XCSI(6),XCSI(7),XCSI(8) 
!       WRITE(6,*) XCSI(5),XCSI(6),XCSI(7),XCSI(8) 
!       READ(5,*) XCSI(9),XCSI(10),XCSI(11),XCSI(12) 
!       WRITE(6,*) XCSI(9),XCSI(10),XCSI(11),XCSI(12) 
!       READ(5,*) XCSI(13),XCSI(14),XCSI(15),XCSI(16) 
!       WRITE(6,*) XCSI(13),XCSI(14),XCSI(15),XCSI(16) 
!   797 CONTINUE
! C.....SET NSKIPE=0 TO BYPASS SHELL LINER HEATUP CALCULATION.  
!       READ(5,*) NSKIPE
!       WRITE(6,*) NSKIPE
!       IF(NSKIPE.EQ.0) GO TO 51  
! C.....READ SHELL NODALIZATION & CONTROL DATA.
!       READ(5,*) NBMADJ,NUMSHH,NUMSHV,NBFZOE,NCRTEM,NLOGSH    
!       WRITE(6,*) NBMADJ,NUMSHH,NUMSHV,NBFZOE,NCRTEM,NLOGSH
!       NBFZME=NBFZOE   
! C.....READ SHELL INITIAL TEMPERATURE, HEIGHT TO BE NODALIZED, SHELL     
! C.....THICKNESS, SHELL ANGLE WITH RESPECT TO VERTICAL, AND WIDTH OF    
! C....."SLOT JET" IMPINGING ON SHELL.
!       READ(5,*) TSHELI,HNODT,THSHL,ANGSHL,BWIDTH  
!       WRITE(6,*) TSHELI,HNODT,THSHL,ANGSHL,BWIDTH 
!    51 CONTINUE
! C.....READ OVERLYING MEDIUM HEAT TRANSFER PROPERTIES.  SET NWAT=0 IF    
! C.....WATER IS ABSENT FROM THE CAVITY, SET NWAT=1 IF WATER IS PRESENT
! C.....OVER BASEMAT AT A CONSTANT TEMP AND LEVEL LIMITED BY DOWNCOMER
! C.....HEIGHT, OR SET NWAT=2 IF DETAILED WATER INVENTORY MODEL IS USED.
! C.....IF NWAT=2 THEN TWATI AND ELWATI ARE INITIAL WATER TEMPERATURE
! C.....AND DEPTH, RESPECTIVELY. 
!       READ(5,*) TBOUND,EMISCN,PDRYWL     
!       WRITE(6,*) TBOUND,EMISCN,PDRYWL   
!       READ(5,*) NWAT,HDOWNC,TWATI,ELWATI
!       WRITE(6,*) NWAT,HDOWNC,TWATI,ELWATI
! C.....IF NWAT<2, THEN BYPASS THE WATER INJECTION AND SPILLOVER INPUT
! C.....DATA.  IF NWAT=2, READ IN INJECTION AND SPILLOVER LOCATION/SIZE
! C.....DATA.
!       IF(NWAT.LT.2) GO TO 199
!       READ(5,*) NINJ
!       WRITE(6,*) NINJ
! C.....READ WATER INJECTION DATA: NINJ=# OF INJECTION POINTS, NINJP ARE 
! C.....NODES WHERE INJECTION IS OCCURING, NPTINJ IS # OF POINTS IN TEMP 
! C.....& FLOWRATE INTERPOLATION TABLE AT EACH INJECTION POINT, AND  
! C.....TIMINJ, XDTINJ, AND TDTINJ ARE TIME, FLOWRATE, AND TEMP POINTS. 
!       IF(NINJ.EQ.0) GO TO 189
!       DO 219 K=1,NINJ
!       READ(5,*) NINJP(K),NPTINJ(K)
!       WRITE(6,*) NINJP(K),NPTINJ(K)
!       DO 220 L=1,NPTINJ(K)
!       READ(5,*) TIMINJ(K,L),XDTINJ(K,L),TDTINJ(K,L)
!       WRITE(6,*) TIMINJ(K,L),XDTINJ(K,L),TDTINJ(K,L)
!   220 CONTINUE
!   219 CONTINUE
!   189 CONTINUE
!       READ(5,*) NDOWNC
!       WRITE(6,*) NDOWNC
!       IF(NDOWNC.EQ.0) GO TO 199
! C.....READ SPILLOVER DATA: NDOWNC=# OF SPILLOVER POINTS, NDC ARE 
! C.....NODES WHERE SPILLOVER IS OCCURING, ELDCO IS INLET ELEVATION AT THE 
! C.....LOCATION, AND NPTDC IS # OF INTERPOLATION POINTS IN THE SPILLOVER 
! C.....CORD LENGTH TABLE AS A FUNCTION OF ELEVATION (ELDCX,CRDCX).
!       DO 319 K=1,NDOWNC
!       READ(5,*) NDC(K),ELDCO(K),NPTDC(K)
!       WRITE(6,*) NDC(K),ELDCO(K),NPTDC(K)
!       DO 320 L=1,NPTDC(K)
!       READ(5,*) ELDCX(K,L),CRDCX(K,L)
!       WRITE(6,*) ELDCX(K,L),CRDCX(K,L)
!   320 CONTINUE
!   319 CONTINUE
!   199 CONTINUE      
! C.....READ IN CRUST, ABLATION, & HEAT TRANSFER COEFFICIENT OPTIONS.     
!       READ(5,*) NBFRZO,NTHINC,NABLFM,NDRNFM,NBCBOT,NCRTOP,NADAB    
!       WRITE(6,*) NBFRZO,NTHINC,NABLFM,NDRNFM,NBCBOT,NCRTOP,NADAB   
!       IF(NADAB.EQ.1) NBFRZO=1
!       NBFRZM=NBFRZO   
! C.....READ MELT/BASEMAT INTERFACIAL HEAT TRANSFER RESISTANCE CONTROL
! C.....PARAMETER NINTF=0 IF NO INTERFACIAL HEAT TRANSFER RESISTANCE,
! C.....OR NINTF=1 IF RESISTANCE IS HINTF.
!       READ(5,*) NINTF,HINTF
!       WRITE(6,*) NINTF,HINTF
! C.....READ ABLATION MAPPING CRITERIA, AND DESIRED NODE DEPTH FOR
! C.....SOLIDIFIED DEBRIS.
!       READ(5,*) XFCABL,XNDMIN  
!       WRITE(6,*) XFCABL,XNDMIN 
! C.....READ INTEGRATION CONTROL INFORMATION FOR MELT FLUID MECHANICS
! C.....CALCULATION.    
!       READ(5,*) NVELP,NITMAX,DAVMX,DVMX,NINVIS
!       WRITE(6,*) NVELP,NITMAX,DAVMX,DVMX,NINVIS
! C.....READ MELT SPECIFIC ENTHALPY INTEGRATION CONTROL DATA    
!       READ(5,*) NENMAX,DEAVMX,DEMX
!       WRITE(6,*) NENMAX,DEAVMX,DEMX      
! C.....READ INTEGRATION CONTROL INFORMATION FOR WATER FLUID MECHANICS
! C.....CALCULATION (SETTINGS ARE ARBITRARY IF NWAT<2).
!       READ(5,*) NVELPW,NITMAXW,DAVMXW,DVMXW
!       WRITE(6,*) NVELPW,NITMAXW,DAVMXW,DVMXW
! C.....READ WATER SPECIFIC ENTHALPY INTEGRATION CONTROL DATA    
!       READ(5,*) NENMXW,DEAVMXW,DEMXW
!       WRITE(6,*) NENMXW,DEAVMXW,DEMXW      
! C.....READ PRINTOUT AND PLOTTING CONTROL DATA: NPRINT=1 FOR NORMAL
! C.....OUTPUT, OR NPRINT=2 FOR VERBOSE; NPFREQ=HOW MANY TIMESTEPS
! C.....BETWEEN ASCII OUTPUT, AND NPEND=HOW MANY SHELL NODES 
! C.....HORIZONTALLY TO PRINT, IF APPLICABLE.  ALSO SET NBEDCQ=0 IF
! C.....PARTICULATE FORMED FROM JET EROSION (NJET=2) IS TO BE 
! C.....RETAINED AS A SEPARATE DEBRIS BED IN CORQUENCH INITIALIZATION 
! C.....FILE, OR NBEDCQ=1 IF IT IS TO BE INTEGRATED WITH UNDERLYING
! C.....MELT AND THERMALLY EQUILIBRATED WITH THAT MATERIAL.  THE
! C.....SETTING OF THIS PARAMETR IS NOT IMPORTANT IF THE OUTPUT
! C.....DATA IN CQINPUT DOES NOT MATTER.
!       READ(5,*) NPRINT,NPFREQ,NPEND,NBEDCQ
!       WRITE(6,*) NPRINT,NPFREQ,NPEND,NBEDCQ
! C.....READ HOW MANY TIMES THE SPATIALLY-DEPENDENT DATA ARE TO BE
! C.....WRITTEN OUT AND AT WHAT TIMES THE DATA ARE TO BE WRITTEN.
!       READ(5,*) NTIMSPC
!       WRITE(6,*) NTIMSPC
!       IF(NTIMSPC.EQ.0) GO TO 733
!       DO 734 KP=1,NTIMSPC
!       READ(5,*) TIMSPC(KP)
!       WRITE(6,*) TIMSPC(KP)
!   734 CONTINUE
!   733 CONTINUE
! C.....READ AT WHAT FREQUENCY THE DATA ARE TO BE PRINTED OUT AT
! C.....SELECTED NODES, THE TOTAL NUMBER OF NODES TO BE PRINTED,
! C.....AND THE SPECFIC NODES AT WHICH THE DATA ARE TO BE PRINTED.
!       READ(5,*) NPLFREQ,NPLTOT
!       WRITE(6,*) NPLFREQ,NPLTOT 
!       IF(NPLTOT.EQ.0) GO TO 333
!       DO 334 KP=1,NPLTOT
!       READ(5,*) NPLLOC(KP)
!       WRITE(6,*) NPLLOC(KP)
!   334 CONTINUE
!   333 CONTINUE
! C.....READ THE NUMBER OF BASEMAT NODES WHERE THERMAL RESPONSE IS TO
! C.....BE PLOTTED AND THE NODE LOCATIONS (HORIZONTAL POSITION, 
! C.....VERTICAL POSITION) 
!       READ(5,*) NBPL
!       WRITE(6,*) NBPL
!       IF(NBPL.EQ.0) GO TO 453
!       DO 454 KD=1,NBPL
!       READ(5,*) IXP(KD),IYP(KD)
!   454 CONTINUE
!   453 CONTINUE
! C.....READ THE INITIAL TIME, INTEGRATION TIMESTEP, AND MAXIMUM TIME     
! C.....TO WHICH THE INTEGRATION IS TO BE PERFORMED.  
!       READ(5,*) TIMEO,DTIME,TMAX
!       WRITE(6,*) TIMEO,DTIME,TMAX
!       WRITE(6,951)
!   951 FORMAT(//,1X,'END ECHO-WRITE OF INPUT; START CALCULATION',//)
!       RETURN
!       END
! C...................................................................... 
! C.....GIVEN THE INPUT DATA, SUBROUTINE INITIAL INITIALIZES THE
! C.....CALCULATION; I.E. SETS THE BASEMAT NODAL DIMENSIONS, THERMAL
! C.....CONDITIONS, ENTHALPIES, AND TEMPERATURES, SET UP THE SPREADING    
! C.....NODAL DIMENSIONS, SET UP NODAL DIMENSIONS FOR THE SHELL HEATUP      
! C.....CALC IF THE SHELL CALCULATION IS TO BE PERFORMED, AND PRINTS 
! C.....INTIAL DATA.   
! C...................................................................... 
!       SUBROUTINE INITIAL
!       IMPLICIT DOUBLE PRECISION(A-H,O-Z)
!       REAL(8) KL
!       COMMON /WATVARS/FCRUST(999),VLW(999),VLWOLD(999),DWAT(999),
!      1DWATOLD(999),EWAT(999),EWATOLD(999),TWAT(999),CORDDC(999),
!      2DSRDC(999),DHDC(999),TSRDC,TINTDC,HWATB(999),TSURFW(999),XMS(999),
!      3XMST,XINTS,ESRDTW(999),TSRDTW(999),DSRDTW(999),TSRDW,TINTDW,
!      4TWATI,ELDCO(999),ELDCX(999,99),CRDCX(999,99),TIMINJ(999,99),
!      5XDTINJ(999,99),TDTINJ(999,99),ELWATI,XMWAT,XMWATO,XBALW,
!      6HDRY(999),EINTW,XMCT(199),XMCDT(16,999),TMPCDT(999),CMPCDT(999),
!      7FDC(999),FCOV(999),FBED(999),FHEAT(999),XFACJ(999),
!      8XMBEDJ(16,999),XMBEDJT(999),PBED,QBED(999),QWATER(999),
!      9QSURFACE(999),QWATERT(999),HBED(999),POROSBED,XMCRDT(16,999),
!      1XMCRT(999),XMBDINT(999),XMT(999)
!       COMMON/CATCHR/A(999),B(999),C(999),D(999),P(999),Q(999),
!      1RECON(999),DELVEL(999),DSRDT(999),DELHTS(999),EMAX(999,999),
!      2DBLKEN(999),DELHIT(16,999),SOURCE(16,999),SRCTOT(999),
!      3HCROLD(16,999),DCDOT(999),HCRUST(16,999),DFILM(16,999),
!      4DFMOLD(16,999),DENOLD(999),SIGOX(999),SIGCON(999),BET(999),
!      5TFZX(999),TFZC(999),TKX(999),TKM(999),THETO(999,999),
!      6THET1(999,999),OMEG0(4,999),OMEG1(4,999),TAO0(999),TAO1(999),
!      7SIG0(999),SIG1(999),TARGB(999),DADOT(999),DADOTG(999),
!      8XLOLD(4,999),VISREX(999),TATMS(999),HTMP(999),DHTMP(999),
!      9HTMOLD(999)
!       COMMON/CATCHI/NUMS(4,999),NUMOLD(4,999),NTRACK(16),NSUMP(999),
!      1NPASSG(999),NCRSTM(999),NCRRT(999),NPASS(999),NBURN,NBURNO     
!       COMMON/PRINTB/ELEVAT(999),ELOLD(999),XDIST(999,999),XBTW(999,999),
!      1TEMP(999,999),ENTHP(999,999),EOLD(999,999),ENBLK(999),EBKOLD(999),
!      2TBULK(999),HITE(16,999),HITOLD(16,999),HTOT(999),HTOLD(999),
!      3HTCFT(999),HTCOEF(999),QFLUXT(999),QFLUXB(999),VEL(999),ELO(999),
!      4VELOLD(999),SRSCOR(16),AREA(999),RAD(999),ARC(999),VOLCN(16),
!      5VOID(999),VGJ(999),ZABLAT(999),ZABOLD(999),DCRUST(999),
!      6DCROLD(999),DABCON(999),DABOLD(999),DFILMT(999),DFOLT(999),
!      7SMFLX(4,999),XLSMF(4,999),TOTVOL,XFACMS(999),XMFLXA,XMCORT,
!      8VCORT,TOTOX,TOTMET,QFLXT,QFLXB,TIME,DTIME,XMCOR(16),VCOR(16),
!      9TCONI,RSAND,HDOWNC,TBOUND,EMISCN,PDRYWL,XDISTO(999),QOXT(999),
!      1XLENSH,XBTWO(999),RCOMP,WDOOR,RSUMP,RSHELL,RPED,TPED,ELSMP,
!      1TENDP(10,999),TFRZSH,TDEBRS,TKDEBR,PDEBR,CPDEBR,ENENDP(10,999),
!      2ENOLDP(10,999),DXVERT,DXSNK,XDSTE(10,999),XBTE(10,999),HXLA(999),
!      3HXLB(999),TSFEB(999),DCRS(999),DCRSLD(999),HCRS(16,999),
!      4HCRSLD(16,999),THETE0(10,999),THETE1(10,999),QSHELL,QSHELE,TSHELI,
!      5SIGOXE(999),FKOXE(999),RINJC,XLSEC,ANGSEC,ANINJC,XLCHAN,WCHNL,
!      6TEFZX(999),TIMSPC(999),DXNODE(999),TNORM(999),FRCSOL(999),
!      7ALPSPR(999),CRAMCON,HINTF,TSHLMX,XFRMX(999),XFROX(999),XFRTX(999),
!      8XMLMX(999),XMLOX(999),XMLTX(999),XTOTX(999),TIMEO,TMAX,EDOWN(999),
!      9HCP(999)
!       COMMON/HCONS/HMETAL(999),HOXIDE(999)  
!       COMMON/PROPI/ NMATC,NMATFI,NMATFF,ICAOH2,ICACO3,IMCCO3,IFH2O,     
!      1IVH2O,ICK2O,IVK2O,INA2O,ITIO2,ISIO2,ICAO,IMGO,IAL2O3,IFEO,IFE2O3, 
!      2IFE3O4,IFE,ICR,INI,IZR,IU,IB4C,IB,ICR2O3,INIO,IUO2,IZRO2,IB2O3,   
!      3NBCINT(999),NODES(999),NUMNOD,IMOX(28),IBAS,ILCS,ILL,NACTIV(999),     
!      4NBFRZM,NBFRZO,NABLFM,NDRNFM,NTYPMT(999,999),NDOOR,NBMADJ,NUMSHV,   
!      5NBSHL(999),NCRSTS(999),NUMSHH,NSKIPE,NACSH,NWAT,NPEND,NBCBOT,
!      6NCRTOP,NBFZOE,NBFZME,NGEOM,NL(999,999),NFRSCT,NLOGSH,NADAB,NINVIS,
!      7NSIMST,NSTEEL,NOVHT,NOVTK,NOVUM,NOVEM,NOVSIG,NPLLOC(999),NBPL,
!      8IXP(999),IYP(999),NVTPE,NSOLTP,NSOLF,NINTF,IFLGA(999),ICTYPE,ICTC,
!      9NPOURS,NSMP,NPED,NDOR,NSHL,NANULS,NSMPCV,NBOIL,NSWALL,NMVER,
!      1NCRTEM,NTHINC,NVELP,NITMAX,NENMAX,NPRINT,NPFREQ,NTIMSPC,NPLFREQ,
!      2NPLTOT,NJET,NJETP,NJETD,NJETND,NODCAP,NVELPW,NITMAXW,NENMXW,
!      3IFLGJ(999),NBEDCQ,ISHELE
!       COMMON/PRINTR/ QFEH2O,QCRH2O,QZRH2O,QFECO2,QCRCO2,QZRCO2,
!      4XFH2OU,XFCAOH,XFMGCA,XFCACO,XZRMRE,XFEMRE,XCRMRE,XZRORE,XFEORE,   
!      5XCRORE,XMH2O,XMCO2,XMCACO,XMMGCA,XMCAOH,TFWL,TFWS,TBWL,TBWS,      
!      6TMCAL,TMCAS,TCAL,TCAS,TFOS,TFOL,TFMS,TFML,XVISC(28),SVISC(28),    
!      7XMOL(28),FMMOL(28),ROM(28),ROMLIQ(28),AEQM(28,2),BEQM(28,2),
!      8CEQM(28,2),ECL,ECS,ECAL,ECAS,EMCAL,EMCAS,EBWL,EBWS,EFWL,EFWS,    
!      9STEF,GRAV,PI,TCS,TCL,CCL,CCS,RMASSL,WPCC,WPM,WPA,WPCS,ROC,RMASSS,   
!      1ANGSHL,RSLAGL,RSLAGS,HNODT,VFAV,VGAV,QXAV,XWTSS(16),  
!      2TSCS(2),TSCL(2),ESCS(2),ESCL(2),CCSS(2),CCSL(2),ROSTLS,ROSTLL,
!      3XFRGAS,HMINC,TST(99),TSTOP(99),AINTP(99),BINTP(99),DRATIO(999),
!      4XBCN(999),XDCN(999),XBLT(15),ADEC(99),BDEC(99),APOUR(16,99),
!      5BPOUR(16,99),XWTC(14),BWIDTH,THCKCV,TMBOIL,TEBOIL,VFINT,ANGFAN,
!      6ALPMAX,THSHL,XFCABL,XNDMIN,DVMX,DAVMX,DEAVMX,DEMX,TDC,QDCU,QDCUO2,
!      7TSINJ,EINJ,DTINJ,TKINJ,ROEV,CPINJ,SURFT,VSINJ,EMINJ,TSINJO,EINJO,
!      8DTINJO,TKINJO,ROEVO,CPINJO,SURFTO,VSINJO,EMINJO,XLEADE,ARSUM,
!      9DBUBOX,UTRISE,TREMSH,DJET,DFALL,WEBER,FROUDE,XPSAITO,XPEPSTN,
!      1FRAG,XMBEDT,XMBED(16),XLPENT,XLPENA,UJET,UFALL,HFALL,ERPV,
!      2TJETT(99),DJETT(99),HWATP,XDOTJET,DVMXW,DAVMXW,DEMXW,DEAVMXW,
!      3QJETW,XSTMJF,TINTSJF,ESAT,DRDOOR,DRANL,EI,QDCBUO2,QDCBU,
!      4EBEDS,EBEDB
!       COMMON/PROPB/CPBM(999),FKB(999,999),DENB(999,999),DTDEB(999,999),
!      1EMIBM(999),DENCRS(999),ENCRS(999),FKRF(999),DENRF(999),CPRF(999)
!       TREF=298.15D0      
!       TREF1=273.15D0
!       ZERO=0.D0
!       TWO=2.D0
!       NODCAP=999
!       PI=3.141592654D0
!       STEF=5.6D-08
! C.....FIRST INITIALIZE BASEMAT PROPERTIES AND THERMAL CONDITIONS
!       DO 39 KN=1,NUMNOD
!       NODES(KN)=NMVER 
!    39 CONTINUE
!       CALL CPROPI
!       CALL DENSC      
!       CALL ETC(EI,EMI,TCONI,DTDEIC,RMASS) 
!       CALL TEC(ECL,ECL,TPASS,DTDE,RMASSL,YCACO3,YMCCO3,YCAOH2,YFH2O,1)  
!       CALL TEC(ECS,ECS,TPASS,DTDE,RMASSS,YCACO3,YMCCO3,YCAOH2,YFH2O,1)
!       CALL TEC(ZERO,ZERO,TCONI,DTDEIS,RMS,YC1,YC2,YC3,YC4,2)
!       DO 4193 KH=1,NUMNOD
!       DO 5131 KV=1,NODES(KH)    
!       TEMP(KV,KH)=TCONI
!       ENTHP(KV,KH)=EI 
!       IF(NL(KV,KH).EQ.2) ENTHP(KV,KH)=0.D0
!       EMAX(KV,KH)=EMI 
!       IF(NL(KV,KH).EQ.2) EMAX(KV,KH)=0.D0
!       DTDEB(KV,KH)=DTDEIC
!       IF(NL(KV,KH).EQ.2) DTDEB(KV,KH)=DTDEIS
!       KARG=KV
!       XDIST(KV,KH)=XDCN(KARG)   
!       XBTW(KV,KH)=XBCN(KARG)    
!  5131 CONTINUE
!  4193 CONTINUE
! C.....DETERMINE TOTAL DEPTH OF NODALIZED BASEMAT    
!       DXSNK=0.D0      
!       DO 6626 KD=1,NODES(1)-1   
!       DXSNK=DXSNK+XDIST(KD,1)   
!  6626 CONTINUE
! C.....SET SHELL NODAL DIMENSIONS.
!       IF(NSKIPE.EQ.0) GO TO 8132
!       DXHR=THSHL/FLOAT(NUMSHH)  
!       DXVERT=HNODT/FLOAT(NUMSHV)
!       NUMSHV=NUMSHV+1 
!       DO 7131 KV=1,NUMSHV
!       DO 7131 KH=1,NUMSHH
!       XBTE(KH,KV)=0.5D0*DXHR    
!       XDSTE(KH,KV)=DXHR
!  7131 CONTINUE
!  8132 CONTINUE
! C.....SET UP SPREADING NODALIZATION SCHEME, ELEVATIONS, AND MASS MAPPING
! C.....FACTORS.
!       GO TO(4618,4619),NGEOM    
!  4618 CONTINUE
!       DRNDS=RSUMP/FLOAT(NSMP)   
!       DRPED=(RPED-RSUMP)/FLOAT(NPED)      
!       DRDOOR=TPED/FLOAT(NDOR)   
!       DRSHL=(RSHELL-RPED-TPED)/FLOAT(NSHL)
!       RPD=RPED+TPED   
!       ANALAR=PI*(ANGFAN/360.D0) 
!       ROFFS=WDOOR/(TWO*TAN(ANALAR))      
!       ROFFA=SQRT(ROFFS*ROFFS+WDOOR*WDOOR/4.D0)      
!       ASEC=(PI*(RSHELL-RPD+ROFFS)**2)*(ANGFAN/360.D0)-ROFFS*WDOOR 
!      1/TWO
!       AANUL=PI*(RSHELL*RSHELL-RPD*RPD)    
!       AANND=(AANUL/FLOAT(NDOOR)-ASEC)/FLOAT(NANULS) 
!       WANL=TWO*(RSHELL-RPD)    
!       DRANL=AANND/WANL
!       RAD(1)=DRNDS/TWO
!       ARC(1)=0.D0     
!       AREA(1)=(PI*DRNDS*DRNDS)/FLOAT(NDOOR)
!       HCP(1)=1.D06
!       DXNODE(1)=DRNDS 
!       DO 7711 KD=2,NUMNOD
!       HCP(KD)=1.D06
!       IF(KD.GT.NSMP) GO TO 7712 
!       DXNODE(KD)=DRNDS
!       RAD(KD)=RAD(KD-1)+DRNDS   
!       RCP=RAD(KD)+DRNDS/TWO     
!       RCM=RAD(KD)-DRNDS/TWO     
!       AREA(KD)=(PI*(RCP*RCP-RCM*RCM))/FLOAT(NDOOR)  
!       ARC(KD)=(TWO*PI*RCM)/FLOAT(NDOOR)  
!       GO TO 7711      
!  7712 CONTINUE
!       IF(KD.GT.NSMP+NPED) GO TO 7713      
!       DXNODE(KD)=DRPED
!       IF(KD.EQ.NSMP+1) RAD(KD)=RAD(KD-1)+0.5D0*(DRNDS+DRPED)  
!       IF(KD.GT.NSMP+1) RAD(KD)=RAD(KD-1)+DRPED      
!       RCP=RAD(KD)+DRPED/TWO     
!       RCM=RAD(KD)-DRPED/TWO     
!       AREA(KD)=(PI*(RCP*RCP-RCM*RCM))/FLOAT(NDOOR)  
!       ARC(KD)=(TWO*PI*RCM)/FLOAT(NDOOR)  
!       GO TO 7711      
!  7713 CONTINUE
!       IF(KD.GT.NSMP+NPED+NDOR) GO TO 7714 
!       DXNODE(KD)=DRDOOR
!       IF(KD.EQ.NSMP+NPED+1) RAD(KD)=RAD(KD-1)+0.5D0*(DRPED+DRDOOR)      
!       IF(KD.GT.NSMP+NPED+1) RAD(KD)=RAD(KD-1)+DRDOOR
!       RCP=RAD(KD)+DRDOOR/TWO    
!       RCM=RAD(KD)-DRDOOR/TWO    
!       AREA(KD)=(RCP-RCM)*WDOOR  
!       ARC(KD)=WDOOR   
!       GO TO 7711      
!  7714 CONTINUE
!       IF(KD.GT.NSMP+NPED+NDOR+NSHL) GO TO 7715      
!       DXNODE(KD)=DRSHL
!       IF(KD.EQ.NSMP+NPED+NDOR+1) RAD(KD)=RAD(KD-1)+0.5D0*(DRDOOR+DRSHL) 
!       IF(KD.GT.NSMP+NPED+NDOR+1) RAD(KD)=RAD(KD-1)+DRSHL      
!       RCP=RAD(KD)+DRSHL/TWO-RPED-TPED+ROFFA
!       RCM=RAD(KD)-DRSHL/TWO-RPED-TPED+ROFFA
!       ARC(KD)=TWO*PI*RCM*(ANGFAN/360.D0) 
!       IF(KD.EQ.NSMP+NPED+NDOR+1) ARC(KD)=WDOOR      
!       AREA(KD)=(PI*(RCP*RCP-RCM*RCM))*(ANGFAN/360.D0)
!       IF(KD.EQ.NSMP+NPED+NDOR+1) AREA(KD)=(PI*RCP*RCP)*(ANGFAN/360.D0)  
!      1-ROFFS*WDOOR/TWO
!       GO TO 7711      
!  7715 CONTINUE
!       DXNODE(KD)=DRANL
!       IF(KD.EQ.NSMP+NPED+NDOR+NSHL+1) RAD(KD)=RAD(KD-1)+0.5D0*(DRSHL+DRA
!      1NL)   
!       IF(KD.GT.NSMP+NPED+NDOR+NSHL+1) RAD(KD)=RAD(KD-1)+DRANL 
!       ARC(KD)=WANL    
!       IF(KD.EQ.NSMP+NPED+NDOR+NSHL+1) ARC(KD)=WDOOR+(RSHELL-RPED-TPED)* 
!      1TAN(ANALAR)     
!       AREA(KD)=AANND  
!  7711 CONTINUE
!       ARC(NUMNOD+1)=WANL
!       DO 7716 KD=1,NUMNOD
!       NSUMP(KD)=0
!       ELEVAT(KD)=0.D0 
!       ELO(KD)=ELEVAT(KD)
!       IF(KD.GT.NSMP) GO TO 7716 
!       ELEVAT(KD)=-ABS(ELSMP)    
!       ELO(KD)=ELEVAT(KD)
!  7716 CONTINUE
!       IF(ELSMP.NE.0.D0) NSUMP(NSMP+1)=1
!       AFLOW=PI*RCOMP*RCOMP      
!       IF(AFLOW.GT.AREA(1)) GO TO 3200
!       XFACMS(1)=1.D0/AREA(1)
!       DO 3300 KN=2,NUMNOD
!       XFACMS(KN)=0.D0
!  3300 CONTINUE
!       GO TO 4619
!  3200 CONTINUE 
!       ASUM=0.D0
!       NPX=0 
!       DO 6004 KN=1,NUMNOD
!       XFACMS(KN)=0.D0
!       IF(NPX.EQ.1) GO TO 6004 
!       ASUM=ASUM+AREA(KN)
!       XFACMS(KN)=1.D0/AFLOW
!       IF(ASUM.LE.AFLOW) GO TO 6004
!       NPX=1
!       ASUMM1=ASUM-AREA(KN)
!       XFACMS(KN)=(1.D0-ASUMM1/AFLOW)/AREA(KN)
!       XFACMS(KN)=DMAX1(XFACMS(KN),0.D0)
!  6004 CONTINUE
!  4619 CONTINUE
! C.....WITH MESH KNOWN, DETERMINE JET BREAKUP MAPPING FACTORS IF THE
! C.....JET MODEL IS ACTIVATE AND THE BED FORMATION MODEL IS ON.
!       IF(NJET.LE.1) GO TO 911
!       XMAP=0.D0
!       DO 913 K=1,NUMNOD
!       IF(IFLGJ(K).EQ.1) XMAP=XMAP+AREA(K)
!   913 CONTINUE
!       DO 914 K=1,NUMNOD
!       XFACJ(K)=0.D0
!       IF(IFLGJ(K).EQ.1) XFACJ(K)=AREA(K)/XMAP
!   914 CONTINUE
!   911 CONTINUE
! C.....SET CONDUCTION LIMIT LENGTH SCALE FOR SHELL HEATUP MODEL.
!       IF(NGEOM.EQ.1) XLENSH=0.5D0*DRSHL   
!       IF(NGEOM.EQ.2) XLENSH=0.5D0*DXNODE(NUMNOD)    
! C.....INITIALIZE REMAINING VECTORS AND SET INITIAL VALUES.    
!       IF(NWAT.EQ.2) CALL TWENTH(EWATI,TWATI,PDRYWL,DTDE)
!       IF(NWAT.EQ.0) GO TO 811 
!       CALL CONWAT(TSAT,KL,PL,CL,UL,HLV,EWL,EWV,CWV,SIGMA,PDRYWL)
!   811 CONTINUE
!       XMWATO=0.D0
!       XBALW=0.D0
!       DO 8913 KH=1,NUMNOD
!       DADOT(KH)=0.D0  
!       DADOTG(KH)=0.D0 
!       DCDOT(KH)=0.D0  
!       TBULK(KH)=298.15
!       ENBLK(KH)=0.0   
!       HTMP(KH)=0.D0   
!       DHTMP(KH)=0.D0  
!       HTMOLD(KH)=0.D0 
!       HTOT(KH)=0.D0   
!       HMETAL(KH)=0.D0 
!       HOXIDE(KH)=0.D0 
!       VEL(KH)=0.D0    
!       VOID(KH)=0.D0   
!       VGJ(KH)=0.D0    
!       HTCFT(KH)=0.D0  
!       HTCOEF(KH)=0.D0 
!       QFLUXT(KH)=0.D0 
!       QFLUXB(KH)=0.D0 
!       XDISTO(KH)=XDIST(1,KH)    
!       XBTWO(KH)=XBTW(1,KH)      
!       ZABLAT(KH)=XDISTO(KH)     
!       DCRUST(KH)=0.D0 
!       DABCON(KH)=0.D0 
!       DFILMT(KH)=0.D0 
!       NBCINT(KH)=1    
!       NCRRT(KH)=1     
!       NACTIV(KH)=0    
!       NPASS(KH)=0     
!       FHEAT(KH)=1.D0
!       FCRUST(KH)=1.D0
!       FBED(KH)=1.D0
!       FCOV(KH)=0.D0
!       FDC(KH)=1.D0
!       IF(NWAT.GT.0) GO TO 77
!       DWAT(KH)=0.D0
!       GO TO 78
!    77 CONTINUE
!       IF(NWAT.EQ.2) GO TO 81
!       DWAT(KH)=HDOWNC-ELEVAT(KH)
!       DWAT(KH)=DMAX1(DWAT(KH),0.D0)
!       XMWATO=XMWATO+PL*DWAT(KH)*AREA(KH)
!       GO TO 78
!    81 CONTINUE
!       DWAT(KH)=ELWATI-ELEVAT(KH)
!       XMWATO=XMWATO+PL*DWAT(KH)*AREA(KH)
!       DWATOLD(KH)=DWAT(KH)
!       EWAT(KH)=EWATI
!       EWATOLD(KH)=EWATI
!       TWAT(KH)=TWATI
!       VLW(KH)=0.D0
!       VLWOLD(KH)=0.D0
!       HWATB(KH)=0.D0
!       HDRY(KH)=0.D0
!       TSURFW(KH)=TCONI
!       CORDDC(KH)=0.D0
!       DSRDC(KH)=0.D0
!       DHDC(KH)=0.D0
!       DSRDTW(KH)=0.D0
!       XMS(KH)=0.D0
!       ESRDTW(KH)=0.D0
!       TSRDTW(KH)=TREF1
!       XMS(KH)=0.D0
!       QBED(KH)=0.D0
!       QSURFACE(KH)=0.D0
!       QWATER(KH)=0.D0
!       QWATERT(KH)=0.D0
!       XMBEDJT(KH)=0.D0
!       XMBDINT(KH)=0.D0
!    78 CONTINUE
!       XMWAT=XMWATO
!       DO 8465 KG=1,4  
!       SMFLX(KG,KH)=0.D0
!       XLSMF(KG,KH)=0.D0
!       NUMS(KG,KH)=1   
!       DO 8466 KV=1,NODES(KH)    
!       THETO(KV,KH)=0.D0
!       THET1(KV,KH)=0.D0
!  8466 CONTINUE
!  8465 CONTINUE
!  8913 CONTINUE
!       DO 7195 KH=1,NUMNOD
!       DO 3007 KT=1,16 
!       HITE(KT,KH)=0.D0
!       HCRUST(KT,KH)=0.D0
!       DFILM(KT,KH)=0.D0
!       XMBEDJ(KT,KH)=0.D0
!  3007 CONTINUE
!  7195 CONTINUE
!       DO 992 KT=1,16  
!       SRSCOR(KT)=0.D0 
!       NTRACK(KT)=0    
!       XMCOR(KT)=0.D0  
!       XMBED(KT)=0.D0
!   992 CONTINUE
!       TOTVOL=0.D0     
!       TOTMET=0.D0     
!       TOTOX=0.D0      
!       QFLXT=0.D0      
!       QFLXB=0.D0      
!       XMCORT=0.D0     
!       XMBEDT=0.D0
!       VCORT=0.D0      
!       VFAV=0.D0
!       VGAV=0.D0
!       QXAV=0.D0
!       ARSUM=0.D0
!       NACSH=0
!       QSHELL=0.D0     
!       QSHELE=0.D0     
!       NFRSCT=0
!       TSRDC=0.D0
!       TINTDC=0.D0
!       XMST=0.D0
!       XINTS=0.D0
!       TSRDW=0.D0
!       TINTDW=0.D0
!       EINTW=0.D0
!       QJETW=0.D0
!       XSTMJF=0.D0
!       TSHLMX=DMAX1(TSHELI,TREF)
!       ISHELE=0
!       IF(NSKIPE.EQ.0) GO TO 1091
!       CALL ETSS(ESI,TSHELI,DTDE)
!       DO 996 KV=1,NUMSHV
!       NBSHL(KV)=1     
!       NCRSTS(KV)=0    
!       HXLA(KV)=0.D0   
!       HXLB(KV)=0.D0   
!       DCRS(KV)=0.D0   
!       DCRSLD(KV)=0.D0 
!       TSFEB(KV)=0.D0  
!       DO 997 KH=1,NUMSHH
!       TENDP(KH,KV)=TSHELI
!       ENENDP(KH,KV)=ESI
!       THETE0(KH,KV)=0.D0
!       THETE1(KH,KV)=0.D0
!   997 CONTINUE
!       DO 998 KT=1,16  
!       HCRS(KT,KV)=0.D0
!       HCRSLD(KT,KV)=0.D0
!   998 CONTINUE
!   996 CONTINUE
!  1091 CONTINUE
! C.....INITIALIZE SUMP COVER PLATE CALCULATION.      
!       IF(NSMPCV.EQ.0) GO TO 1088
!       NBURNO=0
!       NBURN=0
!       DO 1089 K=1,NSMP
!       XDISTO(K)=XDIST(1,K)-XBTW(1,K)+THCKCV
!       XBTWO(K)=THCKCV 
!       XDIST(1,K)=XDISTO(K)      
!       XBTW(1,K)=XBTWO(K)
!       ZABLAT(K)=XDISTO(K)
!       ZABOLD(K)=ZABLAT(K)
!       ELEVAT(K)=0.D0  
!       ELOLD(K)=0.D0   
!       NTYPMT(1,K)=ICTYPE
!       TEMP(1,K)=TCONI 
!       ENTHP(1,K)=0.D0 
!       EOLD(1,K)=0.D0  
!       NL(1,K)=2
!       NPASSG(K)=1     
!  1089 CONTINUE
!       NSUMP(NSMP+1)=0 
!  1088 CONTINUE
!       DO 1817 KH=1,NUMNOD
!       NPASSG(KH)=0    
!       IF(NL(1,KH).EQ.1) GO TO 1817
!       IF(NL(1,KH).EQ.0) GO TO 1817
!       NPASSG(KH)=1    
!  1817 CONTINUE
! C.....WRITE INITIAL DATA.
!       CALL PRINTS(0)
!       RETURN
!       END
! C...................................................................... 
! C.....SUBROUTINE MSOURCE PERFORMS THREE FUNCTIONS: 1) CALCULATES THE 
! C.....MELT POUR MASS SOURCE TERM FROM THE RPV, 2) CALCULATES MASS SOURCE
! C.....TERM INTO EACH NODALIZATION CELL USING THE MULTAPLICATIVE MAPPING
! C.....FACTOR XFACMS(-), AND ALSO DOES THE JET BREAKUP CALCULATION IF 
! C.....THAT MODELING OPTION HAS BEEN SELECTED.
! C......................................................................
!       SUBROUTINE MSOURCE(IFAILJ)
!       IMPLICIT DOUBLE PRECISION(A-H,O-Z)
!       REAL(8) KL,KV
!       DIMENSION HSEND(28)
!       DIMENSION XSEND(999),YSEND(999)
!       COMMON /WATVARS/FCRUST(999),VLW(999),VLWOLD(999),DWAT(999),
!      1DWATOLD(999),EWAT(999),EWATOLD(999),TWAT(999),CORDDC(999),
!      2DSRDC(999),DHDC(999),TSRDC,TINTDC,HWATB(999),TSURFW(999),XMS(999),
!      3XMST,XINTS,ESRDTW(999),TSRDTW(999),DSRDTW(999),TSRDW,TINTDW,
!      4TWATI,ELDCO(999),ELDCX(999,99),CRDCX(999,99),TIMINJ(999,99),
!      5XDTINJ(999,99),TDTINJ(999,99),ELWATI,XMWAT,XMWATO,XBALW,
!      6HDRY(999),EINTW,XMCT(199),XMCDT(16,999),TMPCDT(999),CMPCDT(999),
!      7FDC(999),FCOV(999),FBED(999),FHEAT(999),XFACJ(999),
!      8XMBEDJ(16,999),XMBEDJT(999),PBED,QBED(999),QWATER(999),
!      9QSURFACE(999),QWATERT(999),HBED(999),POROSBED,XMCRDT(16,999),
!      1XMCRT(999),XMBDINT(999),XMT(999)
!       COMMON /WATINT/NDOWNC,NDC(999),NPTDC(999),NINJ,NINJP(999),
!      1NPTINJ(999)
!       COMMON/CATCHR/A(999),B(999),C(999),D(999),P(999),Q(999),
!      1RECON(999),DELVEL(999),DSRDT(999),DELHTS(999),EMAX(999,999),
!      2DBLKEN(999),DELHIT(16,999),SOURCE(16,999),SRCTOT(999),
!      3HCROLD(16,999),DCDOT(999),HCRUST(16,999),DFILM(16,999),
!      4DFMOLD(16,999),DENOLD(999),SIGOX(999),SIGCON(999),BET(999),
!      5TFZX(999),TFZC(999),TKX(999),TKM(999),THETO(999,999),
!      6THET1(999,999),OMEG0(4,999),OMEG1(4,999),TAO0(999),TAO1(999),
!      7SIG0(999),SIG1(999),TARGB(999),DADOT(999),DADOTG(999),
!      8XLOLD(4,999),VISREX(999),TATMS(999),HTMP(999),DHTMP(999),
!      9HTMOLD(999)
!       COMMON/PRINTB/ELEVAT(999),ELOLD(999),XDIST(999,999),XBTW(999,999),
!      1TEMP(999,999),ENTHP(999,999),EOLD(999,999),ENBLK(999),EBKOLD(999),
!      2TBULK(999),HITE(16,999),HITOLD(16,999),HTOT(999),HTOLD(999),
!      3HTCFT(999),HTCOEF(999),QFLUXT(999),QFLUXB(999),VEL(999),ELO(999),
!      4VELOLD(999),SRSCOR(16),AREA(999),RAD(999),ARC(999),VOLCN(16),
!      5VOID(999),VGJ(999),ZABLAT(999),ZABOLD(999),DCRUST(999),
!      6DCROLD(999),DABCON(999),DABOLD(999),DFILMT(999),DFOLT(999),
!      7SMFLX(4,999),XLSMF(4,999),TOTVOL,XFACMS(999),XMFLXA,XMCORT,
!      8VCORT,TOTOX,TOTMET,QFLXT,QFLXB,TIME,DTIME,XMCOR(16),VCOR(16),
!      9TCONI,RSAND,HDOWNC,TBOUND,EMISCN,PDRYWL,XDISTO(999),QOXT(999),
!      1XLENSH,XBTWO(999),RCOMP,WDOOR,RSUMP,RSHELL,RPED,TPED,ELSMP,
!      1TENDP(10,999),TFRZSH,TDEBRS,TKDEBR,PDEBR,CPDEBR,ENENDP(10,999),
!      2ENOLDP(10,999),DXVERT,DXSNK,XDSTE(10,999),XBTE(10,999),HXLA(999),
!      3HXLB(999),TSFEB(999),DCRS(999),DCRSLD(999),HCRS(16,999),
!      4HCRSLD(16,999),THETE0(10,999),THETE1(10,999),QSHELL,QSHELE,TSHELI,
!      5SIGOXE(999),FKOXE(999),RINJC,XLSEC,ANGSEC,ANINJC,XLCHAN,WCHNL,
!      6TEFZX(999),TIMSPC(999),DXNODE(999),TNORM(999),FRCSOL(999),
!      7ALPSPR(999),CRAMCON,HINTF,TSHLMX,XFRMX(999),XFROX(999),XFRTX(999),
!      8XMLMX(999),XMLOX(999),XMLTX(999),XTOTX(999),TIMEO,TMAX,EDOWN(999),
!      9HCP(999)
!       COMMON/PROPI/ NMATC,NMATFI,NMATFF,ICAOH2,ICACO3,IMCCO3,IFH2O,     
!      1IVH2O,ICK2O,IVK2O,INA2O,ITIO2,ISIO2,ICAO,IMGO,IAL2O3,IFEO,IFE2O3, 
!      2IFE3O4,IFE,ICR,INI,IZR,IU,IB4C,IB,ICR2O3,INIO,IUO2,IZRO2,IB2O3,   
!      3NBCINT(999),NODES(999),NUMNOD,IMOX(28),IBAS,ILCS,ILL,NACTIV(999),     
!      4NBFRZM,NBFRZO,NABLFM,NDRNFM,NTYPMT(999,999),NDOOR,NBMADJ,NUMSHV,   
!      5NBSHL(999),NCRSTS(999),NUMSHH,NSKIPE,NACSH,NWAT,NPEND,NBCBOT,
!      6NCRTOP,NBFZOE,NBFZME,NGEOM,NL(999,999),NFRSCT,NLOGSH,NADAB,NINVIS,
!      7NSIMST,NSTEEL,NOVHT,NOVTK,NOVUM,NOVEM,NOVSIG,NPLLOC(999),NBPL,
!      8IXP(999),IYP(999),NVTPE,NSOLTP,NSOLF,NINTF,IFLGA(999),ICTYPE,ICTC,
!      9NPOURS,NSMP,NPED,NDOR,NSHL,NANULS,NSMPCV,NBOIL,NSWALL,NMVER,
!      1NCRTEM,NTHINC,NVELP,NITMAX,NENMAX,NPRINT,NPFREQ,NTIMSPC,NPLFREQ,
!      2NPLTOT,NJET,NJETP,NJETD,NJETND,NODCAP,NVELPW,NITMAXW,NENMXW,
!      3IFLGJ(999),NBEDCQ,ISHELE
!       COMMON/PRINTR/ QFEH2O,QCRH2O,QZRH2O,QFECO2,QCRCO2,QZRCO2,
!      4XFH2OU,XFCAOH,XFMGCA,XFCACO,XZRMRE,XFEMRE,XCRMRE,XZRORE,XFEORE,   
!      5XCRORE,XMH2O,XMCO2,XMCACO,XMMGCA,XMCAOH,TFWL,TFWS,TBWL,TBWS,      
!      6TMCAL,TMCAS,TCAL,TCAS,TFOS,TFOL,TFMS,TFML,XVISC(28),SVISC(28),    
!      7XMOL(28),FMMOL(28),ROM(28),ROMLIQ(28),AEQM(28,2),BEQM(28,2),
!      8CEQM(28,2),ECL,ECS,ECAL,ECAS,EMCAL,EMCAS,EBWL,EBWS,EFWL,EFWS,    
!      9STEF,GRAV,PI,TCS,TCL,CCL,CCS,RMASSL,WPCC,WPM,WPA,WPCS,ROC,RMASSS,   
!      1ANGSHL,RSLAGL,RSLAGS,HNODT,VFAV,VGAV,QXAV,XWTSS(16),  
!      2TSCS(2),TSCL(2),ESCS(2),ESCL(2),CCSS(2),CCSL(2),ROSTLS,ROSTLL,
!      3XFRGAS,HMINC,TST(99),TSTOP(99),AINTP(99),BINTP(99),DRATIO(999),
!      4XBCN(999),XDCN(999),XBLT(15),ADEC(99),BDEC(99),APOUR(16,99),
!      5BPOUR(16,99),XWTC(14),BWIDTH,THCKCV,TMBOIL,TEBOIL,VFINT,ANGFAN,
!      6ALPMAX,THSHL,XFCABL,XNDMIN,DVMX,DAVMX,DEAVMX,DEMX,TDC,QDCU,QDCUO2,
!      7TSINJ,EINJ,DTINJ,TKINJ,ROEV,CPINJ,SURFT,VSINJ,EMINJ,TSINJO,EINJO,
!      8DTINJO,TKINJO,ROEVO,CPINJO,SURFTO,VSINJO,EMINJO,XLEADE,ARSUM,
!      9DBUBOX,UTRISE,TREMSH,DJET,DFALL,WEBER,FROUDE,XPSAITO,XPEPSTN,
!      1FRAG,XMBEDT,XMBED(16),XLPENT,XLPENA,UJET,UFALL,HFALL,ERPV,
!      2TJETT(99),DJETT(99),HWATP,XDOTJET,DVMXW,DAVMXW,DEMXW,DEAVMXW,
!      3QJETW,XSTMJF,TINTSJF,ESAT,DRDOOR,DRANL,EI,QDCBUO2,QDCBU,
!      4EBEDS,EBEDB
!       COMMON/DEFUNC/CPLIQP,CPSOLP,EFOSP,EFOLP,EFMSP,EFMLP     
! C.....CALCULATE TIME-DEPENDENT MASS POUR RATE AND TEMPERATURE FROM RPV,
! C.....AND DECAY HEAT.
!       DO 3311 I=1,NPOURS 
!       IF(TIME.LT.TST(I)) GO TO 3311
!       IF(TIME.GT.TSTOP(I)) GO TO 3311
!       NFLG=I
!       GO TO 4312
!  3311 CONTINUE
!       WRITE(6,7671) TIME
!       WRITE(2,7671) TIME
!  7671 FORMAT(//,1X,'****TIME HAS EXCEEDED RANGE SPECIFIED FOR MELT POUR 
!      1EVALUATION, TIME=',G12.5)
!       IFAILJ=1
!       GO TO 110
!  4312 CONTINUE
!       TSINJO=AINTP(NFLG)+BINTP(NFLG)*(TIME-TST(NFLG))
!       QDCUO2=ADEC(NFLG)+BDEC(NFLG)*(TIME-TST(NFLG)) 
!       QDCBUO2=QDCUO2
!       DO 3312 KTP=1,16
!       SRSCOR(KTP)=APOUR(KTP,NFLG)+BPOUR(KTP,NFLG)*(TIME-TST(NFLG))      
!  3312 CONTINUE
!       QDCU=(FMMOL(IU)/FMMOL(IUO2))*QDCUO2
!       QDCBU=QDCU
!       VMETCP=0.D0
!       VOXCP=0.D0
!       SRSCORT=0.D0
!       DO 7224 KT=1,16 
!       SRSCORT=SRSCORT+SRSCOR(KT)
!       XMCOR(KT)=XMCOR(KT)+SRSCOR(KT)*DTIME
!       XMCORT=XMCORT+SRSCOR(KT)*DTIME  
!       CALL INDEX(KT,KJ)
!       RVLE=ROMLIQ(KJ) 
!       IF(KT.EQ.16) RVLE=RSLAGL*ROC
!       DVCOR=(DTIME*SRSCOR(KT))/RVLE
!       VCOR(KT)=VCOR(KT)+DVCOR
!       IF(KT.LE.7) VMETCP=VMETCP+DVCOR
!       IF(KT.GE.8) VOXCP=VOXCP+DVCOR
!       VCORT=VCORT+DVCOR
!  7224 CONTINUE
!       DO 8077 KN=1,NUMNOD
!       SRCTOT(KN)=0.D0 
!       DO 6008 KT=1,16 
!       SOURCE(KT,KN)=SRSCOR(KT)*XFACMS(KN) 
!       SRCTOT(KN)=SRCTOT(KN)+SOURCE(KT,KN) 
!  6008 CONTINUE
!  8077 CONTINUE
! C.....NOW UPDATE MELT POUR THERMOPHYSICAL PROPERTIES.  FIRST
! C.....FIND A NODE WHICH IS A RECEPTOR FOR CORIUM SUCH THAT THE 
! C.....PROPERTIES OF THE IMPINGING MELT MAY BE EVALUATED. 
!       JSEND=1
!       IF(NGEOM.EQ.1) GO TO 4533
!       DO 4534 I=1,NUMNOD
!       IF(IFLGA(I).EQ.0) GO TO 4534
!       JSEND=I
!       GO TO 4533
!  4534 CONTINUE
!  4533 CONTINUE
!       IF(SRCTOT(JSEND).LE.0.D0) GO TO 4535
! C.....WITH RECEPTOR NODE IDENTIFIED, CALCULATE MATERIAL PROPERTIES
! C.....AT THE EXIT CONDITIONS FROM THE RPV....
!       HSUM=0.D0
!       DO 4536 KTP=1,28
!       HSEND(KTP)=0.D0 
!  4536 CONTINUE
!       DO 4538 KTP=1,15
!       CALL INDEX(KTP,KJ)
!       RVLE=ROMLIQ(KJ) 
!       HSEND(KJ)=(DTIME*SOURCE(KTP,JSEND))/RVLE      
!       HSUM=HSUM+HSEND(KJ)
!  4538 CONTINUE
!       HSEND(10)=(DTIME*WPCS*SOURCE(16,JSEND))/ROMLIQ(ISIO2)   
!       HSEND(11)=(DTIME*WPCC*SOURCE(16,JSEND))/ROMLIQ(ICAO)    
!       HSEND(12)=(DTIME*WPM*SOURCE(16,JSEND))/ROMLIQ(IMGO)     
!       HSEND(13)=(DTIME*WPA*SOURCE(16,JSEND))/ROMLIQ(IAL2O3)   
!       HSUM=HSUM+HSEND(10)+HSEND(11)+HSEND(12)+HSEND(13)
!       CALL ETF(EINJO,HSEND,TSINJO,DTINJO)    
!       CALL TEF(EINJO,HSEND,TPASS,DPASS)    
!       CPINJO=CPLIQP    
!       CALL CONDF(TSINJO,HSEND,FKO,FKM,TKINJO)
!       CALL VISCF(TSINJO,HSEND,VISFLO,VISFLM,VSINJO,VISPAS)
!       CALL EMISF(TSINJO,HSEND,EMINJO)
!       CALL TEN(TSINJO,HSEND,SURFTO)
!       ROEVO=(DTIME*SRCTOT(JSEND))/HSUM     
!  4535 CONTINUE
! C.....NOW DO JET BREAKUP ANALYSIS IF THAT OPTION HAS BEEN
! C.....SELECTED, MELT SOURCE IS > 0, AND WATER IS PRESENT..
!       IF(NJET.EQ.0) GO TO 99
!       IF(SRCTOT(JSEND).LE.0.D0) GO TO 99
!       GO TO 711
! C.....SET PROPERTY/POUR DATA CONSISTENT WITH THE FACT THAT 
! C.....THE POURRATE IS CURRENTLY ZERO AND THEN EXIT
!    99 CONTINUE
!       XDOTJET=0.D0
!       QJETW=0.D0
!       XSTMJF=0.D0
!       DJET=0.D0
!       DFALL=0.D0
!       UJET=0.D0
!       UFALL=0.D0
!       HWATP=DMAX1(DWAT(JSEND)-HBED(JSEND),0.D0)
!       HFALL=ERPV-(HWATP+HBED(JSEND)+HTOT(JSEND)+ELEVAT(JSEND))
!       WEBER=0.D0
!       FROUDE=0.D0
!       XPSAITO=0.D0
!       XPEPSTN=0.D0
!       XLPENT=0.D0
!       XLPENA=0.D0
!       FRAG=0.D0 
!       TSINJ=TSINJO
!       EINJ=EINJO
!       DTINJ=DTINJO
!       TKINJ=TKINJO
!       ROEV=ROEVO
!       CPINJ=CPINJO
!       SURFT=SURFTO
!       VSINJ=VSINJO
!       EMINJ=EMINJO
!       GO TO 110
! C.....JET POUR, EVALUATE CHARACTERISTICS....
!   711 CONTINUE
!       HWATP=DMAX1(DWAT(JSEND)-HBED(JSEND),0.D0)
!       HFALL=ERPV-(HWATP+HBED(JSEND)+HTOT(JSEND)+ELEVAT(JSEND))
!       HFALL=DMAX1(HFALL,0.D0)
!       XDOTJET=SRSCORT
!       QJET=XDOTJET/ROEVO
!       CALL INTERP(1,NJETD,TIME,TJETT,DJETT,DJET)
!       AJET=0.25D0*PI*DJET*DJET
!       UJET=QJET/AJET
!       UFALL=UJET*DSQRT(1.D0+(2.D0*GRAV*HFALL)/(UJET*UJET))
!       DFALL=DJET/(1.D0+(2.D0*GRAV*HFALL)/(UJET*UJET))**0.25D0
!       IF(HWATP.GT.0.D0) GO TO 115
!       WEBER=0.D0
!       FROUDE=0.D0
!       XPSAITO=0.D0
!       XPEPSTN=0.D0
!       XLPENT=0.D0
!       XLPENA=0.D0
!       FRAG=0.D0 
!       TSINJ=TSINJO
!       EINJ=EINJO
!       DTINJ=DTINJO
!       TKINJ=TKINJO
!       ROEV=ROEVO
!       CPINJ=CPINJO
!       SURFT=SURFTO
!       VSINJ=VSINJO
!       EMINJ=EMINJO
!       GO TO 110
!   115 CONTINUE
! C.....CALCULATE MELT STREAM BREAKUP IN WATER
!       CALL CONWAT(TSAT,KL,PL,CL,UL,HLV,EWL,EWV,CWV,SIGMA,PDRYWL)
!       CALL CONH2O(TSAT,PDRYWL,CV,UV,KV,PV)
!       WEBER=(PV*UFALL*UFALL*DFALL)/SURFTO
!       FROUDE=(UFALL*UFALL)/(GRAV*DFALL)
!       XPSAITO=2.1D0*DFALL*DSQRT((ROEVO*FROUDE)/PL)
!       XPEPSTN=0.5D0*DSQRT(3.0D0)*DFALL*(1.D0+PV/ROEVO)*DSQRT(ROEVO/PV)
!       XLPENT=DMIN1(XPSAITO,XPEPSTN)
!       XLPENA=DMIN1(HWATP,XLPENT)
!       FRAG=((2.D0*XLPENA)/XLPENT)*(1.D0-XLPENA/(2.D0*XLPENT))
!       FRAG=DMAX1(FRAG,0.D0)
!       FRAG=DMIN1(FRAG,1.D0)
! C.....DETERMINE IF FRAGMENTATION IS LIMITED BY WATER AVAILABILITY DUE 
! C.....TO BOILOFF IF THE DETAILED WATER MODEL IS BEING USED.  
!       IF(NWAT.LT.2) GO TO 732
!       NJETP=JSEND
!       CALL ETF(ESAT,HSEND,TSAT,DPASS)    
!       QJETW=XDOTJET*FRAG*(EINJO-ESAT)
!       IF(EWAT(JSEND).LT.EWL) GO TO 732
! C.....FIRST STEP: FIND MASS SOURCE DUE TO WATER ADDITION INTO NODE 
! C.....IF APPLICABLE.
!       XMINJ=0.D0 
!       NJETP=JSEND
!       IF(NINJ.EQ.0) GO TO 25
!       DO 15 K=1,NINJ
!       KR=NINJP(K)
!       IF(KR.NE.JSEND) GO TO 15
!       DO 20 L=1,NPTINJ(K)
!       XSEND(L)=TIMINJ(K,L)
!       YSEND(L)=XDTINJ(K,L)
!    20 CONTINUE
!       CALL INTERP(3,NPTINJ(K),TIME,XSEND,YSEND,XMINJ)
!       GO TO 25
!    15 CONTINUE
!    25 CONTINUE
! C.....NOW DETERMINE IF FLOW INTO DOWNCOMER AT THE INJECTION
! C.....POINT IS OCCURING, AND IF SO, CACLCULATE THE MASS SINK.
!       XMDC=0.D0
!       IF(NDOWNC.EQ.0) GO TO 35
!       DO 45 K=1,NDOWNC
!       KR=NDC(K)
!       IF(KR.NE.JSEND) GO TO 35
!       HTPBCFX=HTOT(KR)+ELEVAT(KR)
!       HEVAL=DWAT(KR)+HTPBCFX
!       IF(HEVAL.LE.ELDCO(KR)) GO TO 45
!       DHDCJ=DMIN1(HEVAL-ELDCO(KR),HEVAL-HTPBCFX)
!       DO 30 L=1,NPTDC(K)
!       XSEND(L)=ELDCX(K,L)
!       YSEND(L)=CRDCX(K,L)
!    30 CONTINUE
!       CALL INTERP(2,NPTDC(K),HEVAL,XSEND,YSEND,CORDL)
!       XMDC=PL*DSQRT(2.D0*GRAV)*CORDL*DHDCJ**1.5D0
!       GO TO 35
!    45 CONTINUE
!    35 CONTINUE
! C.....NOW CHECK WATER INVENTORY IN NODE RELATIVE TO SOURCE-
! C.....SINK TERMS TO DETERMINE IF FRAGMENTATION IS LIMITED BY
! C.....WATER AVAILABILITY.
!       K=JSEND
!       IF(K.GT.1) GO TO 90
!       XFLWIN=PL*ARC(K+1)*DWAT(K+1)*DMAX1(-VLW(K+1),0.D0) 
!       XFLWOUT=PL*ARC(K+1)*DWAT(K)*DMAX1(VLW(K+1),0.D0)
!       GO TO 92
!    90 CONTINUE
!       IF(K.EQ.NUMNOD) GO TO 91
!       XFLWIN=PL*(ARC(K)*DWAT(K-1)*DMAX1(VLW(K),0.D0)+
!      1 ARC(K+1)*DWAT(K+1)*DMAX1(-VLW(K+1),0.D0)) 
!       XFLWOUT=PL*(DWAT(K)*ARC(K)*DMAX1(-VLW(K),0.D0)+
!      1 ARC(K+1)*DWAT(K)*DMAX1(VLW(K+1),0.D0))
!       GO TO 92
!    91 CONTINUE
!       XFLWIN=PL*ARC(K)*DWAT(K-1)*DMAX1(VLW(K),0.D0)
!       XFLWOUT=PL*DWAT(K)*ARC(K)*DMAX1(-VLW(K),0.D0)
!    92 CONTINUE
! C.....DO MASS BALANCE
!       XMAVAIL=(PL*DWATOLD(K)*AREA(K))/DTIME+XMINJ+XFLWIN
!      1 -XFLWOUT-XMDC
!       XMAVAIL=DMAX1(XMAVAIL,0.D0)
!       XSTMJF=QJETW/(EWV-EWAT(K))
!       IF(XSTMJF.LE.XMAVAIL) GO TO 88
!       CORRECT=XMAVAIL/XSTMJF
!       FRAG=CORRECT*FRAG
!       FRAG=DMAX1(FRAG,0.D0)
!       FRAG=DMIN1(FRAG,1.D0)
!       QJETW=CORRECT*QJETW
!       XSTMJF=CORRECT*XSTMJF
!    88 CONTINUE
!       TINTSJF=TINTSJF+DTIME*XSTMJF
!   732 CONTINUE
! C.....NOW DO THE FRAGMENTATION ANALYSIS DEPENDING UPON WHETHER A BULK 
! C.....COOLING SCENARIO IS ASSUMED (NJET=1) OR IF PARTICLE BED FORMATION 
! C.....IS ASSUMED (NJET=2).
!       IF(NJET.EQ.2) GO TO 120
!       CALL ETF(ESAT,HSEND,TSAT,DPASS)    
!       EINJ=EINJO-FRAG*(EINJO-ESAT)
! C.....UPDATE THE MELT PROPERTIES AT THE REDUCED TEMPERATURE..
!       CALL TEF(EINJ,HSEND,TSINJ,DPASS)    
!       IF(TSINJ.GE.TFOS.AND.VOXCP.GT.0.D0) GO TO 654
!       IF(TSINJ.GE.TFMS.AND.VMETCP.GT.0.D0) GO TO 654
!       WRITE(6,6671) TIME,TSINJ
!       WRITE(2,6671) TIME,TSINJ
!  6671 FORMAT(//,1X,'****JET FRAGMENTATION/MIXING MODEL INDICATES COMPLET
!      1E SOLDIFICATION OF RELOCATING CORE DEBRIS; CALCULATION TERMINATED'
!      2,//,5X,'TIME=',G12.5,' SEC, TDEBRIS=',G12.5,' K')
!       IFAILJ=1
!       GO TO 110
!   654 CONTINUE
!       CPINJ=CPLIQP    
!       CALL ETF(EPASS,HSEND,TSINJ,DTINJ)    
!       CALL CONDF(TSINJ,HSEND,FKO,FKM,TKINJ)
!       CALL VISCF(TSINJ,HSEND,VISFLO,VISFLM,VSINJ,VISPAS)
!       CALL EMISF(TSINJ,HSEND,EMINJ)
!       CALL TEN(TSINJO,HSEND,SURFT)
!       ROEV=ROEVO
!       GO TO 110
! C.....PARTICLE BED FORMED HERE..
!   120 CONTINUE
!       XMBEDT=0.D0
!       DO 157 KT=1,16
!       XMBED(KT)=XMBED(KT)+FRAG*SRSCOR(KT)*DTIME
!       XMBEDT=XMBEDT+XMBED(KT)  
!   157 CONTINUE
!       DO 141 KN=1,NUMNOD 
!       SRCTOT(KN)=(1.D0-FRAG)*SRCTOT(KN)
!       DO 140 KT=1,16 
!       SRCI=SOURCE(KT,KN)
!       SOURCE(KT,KN)=(1.D0-FRAG)*SRCI
!   140 CONTINUE
!   141 CONTINUE
! C.....GET BED DENSITY...
!       VSUM=0.D0
!       DO 5538 KTP=1,15
!       CALL INDEX(KTP,KJ)
!       VSUM=VSUM+XMBED(KTP)/ROM(KJ)
!  5538 CONTINUE
!       VSUM=VSUM+XMBED(16)/(RSLAGS*ROC)
!       PBED=XMBEDT/VSUM     
! C.....NOW ALLOCATE BED CONSTITUENTS TO DIFFERENT NODES IN THE MESH BASED
! C.....ON USER INPUT
!       DO 1566 ND=1,NUMNOD
!       XMBDINT(ND)=0.D0
!  1566 CONTINUE
!       XMBDINT(1)=XFACJ(1)*XMBEDT
!       DO 155 ND=1,NUMNOD
!       XMBEDJT(ND)=0.D0
!       IF(IFLGJ(ND).EQ.0) GO TO 2155
!       DO 150 KT=1,16
!       XMBEDJ(KT,ND)=XFACJ(ND)*XMBED(KT)
!   150 CONTINUE
!       XMBEDJT(ND)=XFACJ(ND)*XMBEDT
!  2155 CONTINUE
!       IF(ND.GE.2) XMBDINT(ND)=XMBDINT(ND-1)+XMBEDJT(ND)
!   155 CONTINUE
! C.....SET OTHER PARAMETERS...
!       TSINJ=TSINJO
!       EINJ=EINJO
!       DTINJ=DTINJO
!       TKINJ=TKINJO
!       ROEV=ROEVO
!       CPINJ=CPINJO
!       SURFT=SURFTO
!       VSINJ=VSINJO
!       EMINJ=EMINJO
!   110 CONTINUE
!       RETURN
!       END
! C...................................................................... 
! C.....SUBROUTINE INTERP DOES A SIMPLE LINEAR INERPOLATION IN A TABLE
! C.....OF X,Y DATA GIVEN THE VALUE OF X.
! C...................................................................... 
!       SUBROUTINE INTERP(NDIAG,NPOINT,XSEND,TC,QC,YC)
!       IMPLICIT DOUBLE PRECISION(A-H,O-Z)
!       DIMENSION TC(99),QC(99)
!       DO 30 K=1,NPOINT-1
!       F=(XSEND-TC(K))/(TC(K+1)-TC(K))
!       IF(F.LT.0.D0) GO TO 30
!       IF(F.GT.1.D0) GO TO 30
!       YC=QC(K)+F*(QC(K+1)-QC(K))
!       GO TO 25
!    30 CONTINUE
!       IF(NDIAG.EQ.1) WRITE(2,*) 'WARNING: JET DIAM. NOT FOUND IN INTERPO 
!      1LATION TABLE, TIMESEND= ',XSEND
!       IF(NDIAG.EQ.2) WRITE(2,*) 'WARNING: DOWNCOMER FLOW CORD LENGTH NOT
!      1 FOUND IN INTERPOLATION TABLE, XSEND= ',XSEND
!       IF(NDIAG.EQ.3) WRITE(2,*) 'WARNING: WATER INJECTION FLOWRATE NOT F
!      1OUND IN INTERPOLATION TABLE, TIMESEND= ',XSEND
!       IF(NDIAG.EQ.4) WRITE(2,*) 'WARNING: WATER INJECTION TEMPERATURE NO
!      1T FOUND IN INTERPOLATION TABLE, TIMESEND= ',XSEND
!    25 CONTINUE
!       RETURN
!       END
! C...................................................................... 
! C.....AS THE CORE DEBRIS SPREADS THROUGH THE NODALIZED MESH, SUBROUTINE 
! C.....ACTIVATES NOTIFIES THE THAT A NODE HAS BEEN OCCUPIED BY MELT
! C.....(BY SETTING NACTIV=1), AND THEN INITIALIZES THE MELT PROPERTIES.
! C.....THIS ACTIVATES THE IMPLICIT SOLUTION ROUTINES IN THE BASEMAT 
! C.....COUPLED WITH THE MELT THERMAL-HYDRAULICS CALCULATION.
! C......................................................................
!       SUBROUTINE ACTIVATE 
!       IMPLICIT DOUBLE PRECISION(A-H,O-Z)
!       COMMON/CATCHR/A(999),B(999),C(999),D(999),P(999),Q(999),
!      1RECON(999),DELVEL(999),DSRDT(999),DELHTS(999),EMAX(999,999),
!      2DBLKEN(999),DELHIT(16,999),SOURCE(16,999),SRCTOT(999),
!      3HCROLD(16,999),DCDOT(999),HCRUST(16,999),DFILM(16,999),
!      4DFMOLD(16,999),DENOLD(999),SIGOX(999),SIGCON(999),BET(999),
!      5TFZX(999),TFZC(999),TKX(999),TKM(999),THETO(999,999),
!      6THET1(999,999),OMEG0(4,999),OMEG1(4,999),TAO0(999),TAO1(999),
!      7SIG0(999),SIG1(999),TARGB(999),DADOT(999),DADOTG(999),
!      8XLOLD(4,999),VISREX(999),TATMS(999),HTMP(999),DHTMP(999),
!      9HTMOLD(999)
!       COMMON/PRINTB/ELEVAT(999),ELOLD(999),XDIST(999,999),XBTW(999,999),
!      1TEMP(999,999),ENTHP(999,999),EOLD(999,999),ENBLK(999),EBKOLD(999),
!      2TBULK(999),HITE(16,999),HITOLD(16,999),HTOT(999),HTOLD(999),
!      3HTCFT(999),HTCOEF(999),QFLUXT(999),QFLUXB(999),VEL(999),ELO(999),
!      4VELOLD(999),SRSCOR(16),AREA(999),RAD(999),ARC(999),VOLCN(16),
!      5VOID(999),VGJ(999),ZABLAT(999),ZABOLD(999),DCRUST(999),
!      6DCROLD(999),DABCON(999),DABOLD(999),DFILMT(999),DFOLT(999),
!      7SMFLX(4,999),XLSMF(4,999),TOTVOL,XFACMS(999),XMFLXA,XMCORT,
!      8VCORT,TOTOX,TOTMET,QFLXT,QFLXB,TIME,DTIME,XMCOR(16),VCOR(16),
!      9TCONI,RSAND,HDOWNC,TBOUND,EMISCN,PDRYWL,XDISTO(999),QOXT(999),
!      1XLENSH,XBTWO(999),RCOMP,WDOOR,RSUMP,RSHELL,RPED,TPED,ELSMP,
!      1TENDP(10,999),TFRZSH,TDEBRS,TKDEBR,PDEBR,CPDEBR,ENENDP(10,999),
!      2ENOLDP(10,999),DXVERT,DXSNK,XDSTE(10,999),XBTE(10,999),HXLA(999),
!      3HXLB(999),TSFEB(999),DCRS(999),DCRSLD(999),HCRS(16,999),
!      4HCRSLD(16,999),THETE0(10,999),THETE1(10,999),QSHELL,QSHELE,TSHELI,
!      5SIGOXE(999),FKOXE(999),RINJC,XLSEC,ANGSEC,ANINJC,XLCHAN,WCHNL,
!      6TEFZX(999),TIMSPC(999),DXNODE(999),TNORM(999),FRCSOL(999),
!      7ALPSPR(999),CRAMCON,HINTF,TSHLMX,XFRMX(999),XFROX(999),XFRTX(999),
!      8XMLMX(999),XMLOX(999),XMLTX(999),XTOTX(999),TIMEO,TMAX,EDOWN(999),
!      9HCP(999)
!       COMMON/PROPI/ NMATC,NMATFI,NMATFF,ICAOH2,ICACO3,IMCCO3,IFH2O,     
!      1IVH2O,ICK2O,IVK2O,INA2O,ITIO2,ISIO2,ICAO,IMGO,IAL2O3,IFEO,IFE2O3, 
!      2IFE3O4,IFE,ICR,INI,IZR,IU,IB4C,IB,ICR2O3,INIO,IUO2,IZRO2,IB2O3,   
!      3NBCINT(999),NODES(999),NUMNOD,IMOX(28),IBAS,ILCS,ILL,NACTIV(999),     
!      4NBFRZM,NBFRZO,NABLFM,NDRNFM,NTYPMT(999,999),NDOOR,NBMADJ,NUMSHV,   
!      5NBSHL(999),NCRSTS(999),NUMSHH,NSKIPE,NACSH,NWAT,NPEND,NBCBOT,
!      6NCRTOP,NBFZOE,NBFZME,NGEOM,NL(999,999),NFRSCT,NLOGSH,NADAB,NINVIS,
!      7NSIMST,NSTEEL,NOVHT,NOVTK,NOVUM,NOVEM,NOVSIG,NPLLOC(999),NBPL,
!      8IXP(999),IYP(999),NVTPE,NSOLTP,NSOLF,NINTF,IFLGA(999),ICTYPE,ICTC,
!      9NPOURS,NSMP,NPED,NDOR,NSHL,NANULS,NSMPCV,NBOIL,NSWALL,NMVER,
!      1NCRTEM,NTHINC,NVELP,NITMAX,NENMAX,NPRINT,NPFREQ,NTIMSPC,NPLFREQ,
!      2NPLTOT,NJET,NJETP,NJETD,NJETND,NODCAP,NVELPW,NITMAXW,NENMXW,
!      3IFLGJ(999),NBEDCQ,ISHELE
!       COMMON/PRINTR/ QFEH2O,QCRH2O,QZRH2O,QFECO2,QCRCO2,QZRCO2,
!      4XFH2OU,XFCAOH,XFMGCA,XFCACO,XZRMRE,XFEMRE,XCRMRE,XZRORE,XFEORE,   
!      5XCRORE,XMH2O,XMCO2,XMCACO,XMMGCA,XMCAOH,TFWL,TFWS,TBWL,TBWS,      
!      6TMCAL,TMCAS,TCAL,TCAS,TFOS,TFOL,TFMS,TFML,XVISC(28),SVISC(28),    
!      7XMOL(28),FMMOL(28),ROM(28),ROMLIQ(28),AEQM(28,2),BEQM(28,2),
!      8CEQM(28,2),ECL,ECS,ECAL,ECAS,EMCAL,EMCAS,EBWL,EBWS,EFWL,EFWS,    
!      9STEF,GRAV,PI,TCS,TCL,CCL,CCS,RMASSL,WPCC,WPM,WPA,WPCS,ROC,RMASSS,   
!      1ANGSHL,RSLAGL,RSLAGS,HNODT,VFAV,VGAV,QXAV,XWTSS(16),  
!      2TSCS(2),TSCL(2),ESCS(2),ESCL(2),CCSS(2),CCSL(2),ROSTLS,ROSTLL,
!      3XFRGAS,HMINC,TST(99),TSTOP(99),AINTP(99),BINTP(99),DRATIO(999),
!      4XBCN(999),XDCN(999),XBLT(15),ADEC(99),BDEC(99),APOUR(16,99),
!      5BPOUR(16,99),XWTC(14),BWIDTH,THCKCV,TMBOIL,TEBOIL,VFINT,ANGFAN,
!      6ALPMAX,THSHL,XFCABL,XNDMIN,DVMX,DAVMX,DEAVMX,DEMX,TDC,QDCU,QDCUO2,
!      7TSINJ,EINJ,DTINJ,TKINJ,ROEV,CPINJ,SURFT,VSINJ,EMINJ,TSINJO,EINJO,
!      8DTINJO,TKINJO,ROEVO,CPINJO,SURFTO,VSINJO,EMINJO,XLEADE,ARSUM,
!      9DBUBOX,UTRISE,TREMSH,DJET,DFALL,WEBER,FROUDE,XPSAITO,XPEPSTN,
!      1FRAG,XMBEDT,XMBED(16),XLPENT,XLPENA,UJET,UFALL,HFALL,ERPV,
!      2TJETT(99),DJETT(99),HWATP,XDOTJET,DVMXW,DAVMXW,DEMXW,DEAVMXW,
!      3QJETW,XSTMJF,TINTSJF,ESAT,DRDOOR,DRANL,EI,QDCBUO2,QDCBU,
!      4EBEDS,EBEDB
!       COMMON/PROPM/DTDEM(999),CPMLT(999),FKMLT(999),DENMLT(999),
!      1SIGMLT(999),UMMLT(999),EMIMLT(999)      
! C.....FIRST FIND NODE WHICH IS A RECEPTOR FOR CORIUM SUCH THAT THE 
! C.....THERMOPHYSICAL PROPERTIES OF THE IMPINGING MELT MAY BE 
! C.....ASSIGNED AS RELEVANT.
!       JSEND=1
!       IF(NGEOM.EQ.1) GO TO 4533
!       DO 4534 I=1,NUMNOD
!       IF(IFLGA(I).EQ.1) JSEND=I
!  4534 CONTINUE
!  4533 CONTINUE
!       IF(SRCTOT(JSEND).LE.0.D0) GO TO 4535
! C.....FIRST GET MINIMUM SPREADING DEPTH AS WELL AS SPARGING GAS
! C.....BUBBLE DIAMETER AND RISE VELOCITY WHICH ARE APPROXIMATED BASED
! C.....ON MELT POUR PROPERTIES 
!       HMN=SQRT(SURFT/(GRAV*ROEV))
!       HMINC=HMN*SQRT(2.D0)      
!       DBUBOX=PI*HMN*SQRT(3.D0)  
!       UTRISE=1.18D0*((GRAV*SURFT)/ROEV)**0.25D0     
! C.....GO LIKELY LOCATION OF MELT LEADING EDGE.. 
!       IHTE=1
!       DO 77 K=1,NUMNOD
!       IF(HTOT(K).LE.HMINC) GO TO 77      
!       IHTE=K
!    77 CONTINUE
!  4535 CONTINUE
! C.....NOW CHECK TO ACTIVATE NODES
!       DO 7725 KN=1,NUMNOD
!       IF(NACTIV(KN).EQ.1) GO TO 4537      
!       NPNG=1
!       IF(HTOT(KN).LE.HMINC) NPNG=0
!       IF(NPNG.EQ.0.AND.KN.GE.IHTE) GO TO 7725
!       NACTIV(KN)=1    
!       XLEADE=RAD(KN)+0.5*DXNODE(KN)
!       ARSUM=ARSUM+AREA(KN)
!       GO TO 3891      
!  4537 CONTINUE
!       IF(HTOT(KN).LE.HMINC) GO TO 7725   
!       IF(HTOLD(KN).LE.0.D0) GO TO 3891    
!       GO TO 7725      
! C.....SET INITIAL MELT ENTHALPY ACCORDING TO ARRIVING TEMPERATURE OF    
! C.....INJECTED MATERIAL (FROM RPV).  IF MELT IS CONVECTED INTO THE      
! C.....NODE, SET INITIAL TEMPERATURE ACCORDING TO CONVECTED MATERIAL.    
!  3891 CONTINUE
!       IF(SRCTOT(KN).LE.0.D0) GO TO 7726   
!       TBULK(KN)=TSINJ 
!       ENBLK(KN)=EINJ  
!       EBKOLD(KN)=EINJ 
!       DTDEM(KN)=DTINJ 
!       FKMLT(KN)=TKINJ 
!       DENMLT(KN)=ROEV 
!       CPMLT(KN)=CPINJ 
!       SIGMLT(KN)=SURFT
!       UMMLT(KN)=VSINJ 
!       VISREX(KN)=VSINJ
!       EMIMLT(KN)=EMINJ
!       GO TO 7725      
!  7726 CONTINUE 
!       NLOC=KN-1
!       IF(KN.EQ.1) NLOC=KN+1
!       IF(KN.LT.JSEND) NLOC=KN+1
!       TBULK(KN)=TBULK(NLOC)
!       ENBLK(KN)=ENBLK(NLOC)
!       EBKOLD(KN)=ENBLK(KN)      
!       DTDEM(KN)=DTDEM(NLOC)     
!       FKMLT(KN)=FKMLT(NLOC)     
!       DENMLT(KN)=DENMLT(NLOC)   
!       CPMLT(KN)=CPMLT(NLOC)     
!       SIGMLT(KN)=SIGMLT(NLOC)   
!       UMMLT(KN)=UMMLT(NLOC)     
!       VISREX(KN)=UMMLT(NLOC)
!       EMIMLT(KN)=EMIMLT(NLOC)   
!  7725 CONTINUE
!       RETURN
!       END
! C...................................................................... 
! C.....FOR CONTAINMENTS IN WHICH SUMPS ARE PRESENT, THIS SUBROUTINE 
! C.....CHECKS TO SEE IF THE COVER PLATE HAS BEEN ABLATED THROUGH.  IF   
! C.....SO, IT RELOCATES THE MELT OVER THE TOP OF THE COVER PLATE TO THE   
! C.....BOTTOM OF THE SUMP, AND RESETS THE SUMP BASEMAT NODES TO VIRGIN   
! C.....CONCRETE.   
! C......................................................................
!       SUBROUTINE SUMPCVA 
!       IMPLICIT DOUBLE PRECISION(A-H,O-Z)
!       DIMENSION HSEND(28)
!       COMMON/CATCHR/A(999),B(999),C(999),D(999),P(999),Q(999),
!      1RECON(999),DELVEL(999),DSRDT(999),DELHTS(999),EMAX(999,999),
!      2DBLKEN(999),DELHIT(16,999),SOURCE(16,999),SRCTOT(999),
!      3HCROLD(16,999),DCDOT(999),HCRUST(16,999),DFILM(16,999),
!      4DFMOLD(16,999),DENOLD(999),SIGOX(999),SIGCON(999),BET(999),
!      5TFZX(999),TFZC(999),TKX(999),TKM(999),THETO(999,999),
!      6THET1(999,999),OMEG0(4,999),OMEG1(4,999),TAO0(999),TAO1(999),
!      7SIG0(999),SIG1(999),TARGB(999),DADOT(999),DADOTG(999),
!      8XLOLD(4,999),VISREX(999),TATMS(999),HTMP(999),DHTMP(999),
!      9HTMOLD(999)
!       COMMON/CATCHI/NUMS(4,999),NUMOLD(4,999),NTRACK(16),NSUMP(999),
!      1NPASSG(999),NCRSTM(999),NCRRT(999),NPASS(999),NBURN,NBURNO     
!       COMMON/PRINTB/ELEVAT(999),ELOLD(999),XDIST(999,999),XBTW(999,999),
!      1TEMP(999,999),ENTHP(999,999),EOLD(999,999),ENBLK(999),EBKOLD(999),
!      2TBULK(999),HITE(16,999),HITOLD(16,999),HTOT(999),HTOLD(999),
!      3HTCFT(999),HTCOEF(999),QFLUXT(999),QFLUXB(999),VEL(999),ELO(999),
!      4VELOLD(999),SRSCOR(16),AREA(999),RAD(999),ARC(999),VOLCN(16),
!      5VOID(999),VGJ(999),ZABLAT(999),ZABOLD(999),DCRUST(999),
!      6DCROLD(999),DABCON(999),DABOLD(999),DFILMT(999),DFOLT(999),
!      7SMFLX(4,999),XLSMF(4,999),TOTVOL,XFACMS(999),XMFLXA,XMCORT,
!      8VCORT,TOTOX,TOTMET,QFLXT,QFLXB,TIME,DTIME,XMCOR(16),VCOR(16),
!      9TCONI,RSAND,HDOWNC,TBOUND,EMISCN,PDRYWL,XDISTO(999),QOXT(999),
!      1XLENSH,XBTWO(999),RCOMP,WDOOR,RSUMP,RSHELL,RPED,TPED,ELSMP,
!      1TENDP(10,999),TFRZSH,TDEBRS,TKDEBR,PDEBR,CPDEBR,ENENDP(10,999),
!      2ENOLDP(10,999),DXVERT,DXSNK,XDSTE(10,999),XBTE(10,999),HXLA(999),
!      3HXLB(999),TSFEB(999),DCRS(999),DCRSLD(999),HCRS(16,999),
!      4HCRSLD(16,999),THETE0(10,999),THETE1(10,999),QSHELL,QSHELE,TSHELI,
!      5SIGOXE(999),FKOXE(999),RINJC,XLSEC,ANGSEC,ANINJC,XLCHAN,WCHNL,
!      6TEFZX(999),TIMSPC(999),DXNODE(999),TNORM(999),FRCSOL(999),
!      7ALPSPR(999),CRAMCON,HINTF,TSHLMX,XFRMX(999),XFROX(999),XFRTX(999),
!      8XMLMX(999),XMLOX(999),XMLTX(999),XTOTX(999),TIMEO,TMAX,EDOWN(999),
!      9HCP(999)
!       COMMON/PROPI/ NMATC,NMATFI,NMATFF,ICAOH2,ICACO3,IMCCO3,IFH2O,     
!      1IVH2O,ICK2O,IVK2O,INA2O,ITIO2,ISIO2,ICAO,IMGO,IAL2O3,IFEO,IFE2O3, 
!      2IFE3O4,IFE,ICR,INI,IZR,IU,IB4C,IB,ICR2O3,INIO,IUO2,IZRO2,IB2O3,   
!      3NBCINT(999),NODES(999),NUMNOD,IMOX(28),IBAS,ILCS,ILL,NACTIV(999),     
!      4NBFRZM,NBFRZO,NABLFM,NDRNFM,NTYPMT(999,999),NDOOR,NBMADJ,NUMSHV,   
!      5NBSHL(999),NCRSTS(999),NUMSHH,NSKIPE,NACSH,NWAT,NPEND,NBCBOT,
!      6NCRTOP,NBFZOE,NBFZME,NGEOM,NL(999,999),NFRSCT,NLOGSH,NADAB,NINVIS,
!      7NSIMST,NSTEEL,NOVHT,NOVTK,NOVUM,NOVEM,NOVSIG,NPLLOC(999),NBPL,
!      8IXP(999),IYP(999),NVTPE,NSOLTP,NSOLF,NINTF,IFLGA(999),ICTYPE,ICTC,
!      9NPOURS,NSMP,NPED,NDOR,NSHL,NANULS,NSMPCV,NBOIL,NSWALL,NMVER,
!      1NCRTEM,NTHINC,NVELP,NITMAX,NENMAX,NPRINT,NPFREQ,NTIMSPC,NPLFREQ,
!      2NPLTOT,NJET,NJETP,NJETD,NJETND,NODCAP,NVELPW,NITMAXW,NENMXW,
!      3IFLGJ(999),NBEDCQ,ISHELE
!       COMMON/PRINTR/ QFEH2O,QCRH2O,QZRH2O,QFECO2,QCRCO2,QZRCO2,
!      4XFH2OU,XFCAOH,XFMGCA,XFCACO,XZRMRE,XFEMRE,XCRMRE,XZRORE,XFEORE,   
!      5XCRORE,XMH2O,XMCO2,XMCACO,XMMGCA,XMCAOH,TFWL,TFWS,TBWL,TBWS,      
!      6TMCAL,TMCAS,TCAL,TCAS,TFOS,TFOL,TFMS,TFML,XVISC(28),SVISC(28),    
!      7XMOL(28),FMMOL(28),ROM(28),ROMLIQ(28),AEQM(28,2),BEQM(28,2),
!      8CEQM(28,2),ECL,ECS,ECAL,ECAS,EMCAL,EMCAS,EBWL,EBWS,EFWL,EFWS,    
!      9STEF,GRAV,PI,TCS,TCL,CCL,CCS,RMASSL,WPCC,WPM,WPA,WPCS,ROC,RMASSS,   
!      1ANGSHL,RSLAGL,RSLAGS,HNODT,VFAV,VGAV,QXAV,XWTSS(16),  
!      2TSCS(2),TSCL(2),ESCS(2),ESCL(2),CCSS(2),CCSL(2),ROSTLS,ROSTLL,
!      3XFRGAS,HMINC,TST(99),TSTOP(99),AINTP(99),BINTP(99),DRATIO(999),
!      4XBCN(999),XDCN(999),XBLT(15),ADEC(99),BDEC(99),APOUR(16,99),
!      5BPOUR(16,99),XWTC(14),BWIDTH,THCKCV,TMBOIL,TEBOIL,VFINT,ANGFAN,
!      6ALPMAX,THSHL,XFCABL,XNDMIN,DVMX,DAVMX,DEAVMX,DEMX,TDC,QDCU,QDCUO2,
!      7TSINJ,EINJ,DTINJ,TKINJ,ROEV,CPINJ,SURFT,VSINJ,EMINJ,TSINJO,EINJO,
!      8DTINJO,TKINJO,ROEVO,CPINJO,SURFTO,VSINJO,EMINJO,XLEADE,ARSUM,
!      9DBUBOX,UTRISE,TREMSH,DJET,DFALL,WEBER,FROUDE,XPSAITO,XPEPSTN,
!      1FRAG,XMBEDT,XMBED(16),XLPENT,XLPENA,UJET,UFALL,HFALL,ERPV,
!      2TJETT(99),DJETT(99),HWATP,XDOTJET,DVMXW,DAVMXW,DEMXW,DEAVMXW,
!      3QJETW,XSTMJF,TINTSJF,ESAT,DRDOOR,DRANL,EI,QDCBUO2,QDCBU,
!      4EBEDS,EBEDB
!       COMMON/BASPR/ HBMT(999,999,16),HBMOLD(999,999,16) 
! C.....FIRST CHECK TO SEE IF THIS ROUTINE IS APPLICABLE GIVEN THE INPUT
! C.....ASSUMPTIONS    
!       IF(NSMPCV.EQ.0) GO TO 1789
!       IF(NBOIL.EQ.1) GO TO 4544 
!       IF(NBURN.EQ.1) GO TO 1789 
!       IF(NBCINT(1).LE.3) GO TO 1789
!       DBURN=ABS(ELEVAT(1))      
!       IF(DBURN.LT.THCKCV) GO TO 1789      
!       IF(ELEVAT(1).GT.0.D0) GO TO 1789    
! C.....ALGORITHM REACHES HERE, THE SUMP COVER PLATE HAS BEEN ABLATED     
! C.....THROUGH.
!       WRITE(6,913) TIME
!  913  FORMAT(//,1X,'****SUMP COVER PLATE HAS BEEN ABLATED THROUGH****',/
!      1/,5X,'TIME=',G12.5,//)    
!       NBURN=1
!       DO 4549 K=1,NSMP
!       IF(K.EQ.1) GO TO 5561     
!       IF(ELEVAT(K).LT.0.D0) ELEVAT(K)=THCKCV+ELEVAT(K)-ABS(ELSMP)
!       IF(ELEVAT(K).GE.0.D0) ELEVAT(K)=ELEVAT(K)-ABS(ELSMP)    
!       ELOLD(K)=ELEVAT(K)
!       VEL(K+1)=0.D0   
!       DO 5562 KGS=1,4 
!       XLSMF(KGS,K)=0.D0
!       NUMS(KGS,K)=1   
!  5562 CONTINUE
!       DO 5563 KV=1,NODES(K)     
!       IF(NTYPMT(KV,K).GT.3) GO TO 5563    
!       IF(NL(KV,K).EQ.2) GO TO 5563
!       TEMP(KV,K)=TCONI
!       ENTHP(KV,K)=EI  
!       EMAX(KV,K)=EI   
!       EOLD(KV,K)=EI   
!  5563 CONTINUE
!       GO TO 4549      
!  5561 CONTINUE
!       XDISTO(K)=XDCN(1)
!       XBTWO(K)=XBCN(1)
!       XDIST(1,K)=XDISTO(K)      
!       XBTW(1,K)=XBTWO(K)
!       ZABLAT(K)=XDISTO(K)
!       ZABOLD(K)=ZABLAT(K)
!       ELEVAT(K)=-ABS(ELSMP)     
!       ELOLD(K)=ELEVAT(K)
!       NPASSG(K)=0     
!       NBCINT(K)=1     
!       VEL(K+1)=0.D00  
!       NODES(K)=NMVER  
!       DO 8811 KGS=1,4 
!       XLSMF(KGS,K)=0.D0
!       NUMS(KGS,K)=1   
!  8811 CONTINUE
!       DO 6199 KV=1,NODES(K)     
!       NTYPMT(KV,K)=ICTYPE
!       TEMP(KV,K)=TCONI
!       IF(NL(KV,K).EQ.2) GO TO 7333
!       ENTHP(KV,K)=EI  
!       EMAX(KV,K)=EI   
!       EOLD(KV,K)=EI   
!       GO TO 6199
!  7333 CONTINUE
!       ENTHP(KV,K)=0.D0
!       EMAX(KV,K)=0.D0
!       EOLD(KV,K)=0.D0   
!  6199 CONTINUE
!  4549 CONTINUE
!       IF(ELSMP.NE.0.D0) NSUMP(NSMP+1)=1   
!       GO TO 1789      
!  4544 CONTINUE
!       IF(NBURNO.EQ.1) GO TO 1789
!       IF(TIME.LT.TMBOIL) GO TO 1789
!       NBURNO=1
!       NBURN=1
!       WRITE(6,4545) TIME
!  4545 FORMAT(//,1X,'****USER-SPECIFIED SUMP BOILOVER POINT HAS BEEN REAC
!      1HED****',//,5X,'TIME=',G12.5,//)    
!       SUMM=0.D0
!       DO 4547 KNP=1,15
!       CALL INDEX(KNP,KJ)
!       SUMM=SUMM+XBLT(KNP)/ROMLIQ(KJ)      
!  4547 CONTINUE
!       DO 4546 K=1,NSMP
!       DO 5556 KV=1,NODES(K)     
!       IF(NTYPMT(KV,K).LE.3) GO TO 5556    
!       DO 5557 KTP=1,16
!       CALL INDEX(KTP,KJ)
!       RFAC=ROM(KJ)/ROMLIQ(KJ)   
!       IF(KTP.EQ.16) RFAC=RSLAGS/RSLAGL    
!       HITE(KTP,K)=HITE(KTP,K)+RFAC*HBMT(KV,K,KTP)   
!       HBMT(KV,K,KTP)=0.D0
!  5557 CONTINUE
!  5556 CONTINUE
!       DO 5559 KTP=1,15
!       CALL INDEX(KTP,KJ)
!       RFAC=ROM(KJ)/ROMLIQ(KJ)   
!       HITE(KTP,K)=HITE(KTP,K)+XWTSS(KTP)*RFAC*THCKCV
!       IF(XWTSS(KTP).GT.0.D0.AND.THCKCV.GT.0.D0) NTRACK(KTP)=1 
!  5559 CONTINUE
!       XDISTO(K)=XDCN(1)
!       XBTWO(K)=XBCN(1)
!       XDIST(1,K)=XDISTO(K)      
!       XBTW(1,K)=XBTWO(K)
!       ZABLAT(K)=XDISTO(K)
!       ZABOLD(K)=ZABLAT(K)
!       ELEVAT(K)=-ABS(ELSMP)     
!       ELOLD(K)=ELEVAT(K)
!       NPASSG(K)=0     
!       NBCINT(K)=1     
!       VEL(K+1)=0.D0   
!       NODES(K)=NMVER  
!       DO 9811 KGS=1,4 
!       XLSMF(KGS,K)=0.D0
!       NUMS(KGS,K)=1   
!  9811 CONTINUE
!       DO 7199 KV=1,NODES(K)     
!       TEMP(KV,K)=TCONI
!       NTYPMT(KV,K)=ICTYPE
!       IF(NL(KV,K).EQ.2) GO TO 7354 
!       ENTHP(KV,K)=EI  
!       EMAX(KV,K)=EI   
!       EOLD(KV,K)=EI   
!       GO TO 7199
!  7354 CONTINUE
!       ENTHP(KV,K)=0.D0
!       EMAX(KV,K)=0.D0
!       EOLD(KV,K)=0.D0
!  7199 CONTINUE
!       HTOT(K)=0.D0    
!       DO 4548 KTP=1,15
!       CALL INDEX(KTP,KJ)
!       HTMULT=(1.D0-VFINT)*ABS(ELSMP)      
!       HITE(KTP,K)=(HTMULT*XBLT(KTP))/(ROMLIQ(KJ)*SUMM)+HITE(KTP,K)      
!       HTOT(K)=HTOT(K)+HITE(KTP,K)
!  4548 CONTINUE
!       HTOT(K)=HTOT(K)+HITE(16,K)
!       CALL ASINEA(HITE,K,HSEND,ROMLIQ,WPCC,WPM,WPA,WPCS,ROC,RSLAGL,0)   
!       CALL ETF(ENBLK(K),HSEND,TEBOIL,DTDE)
!       TBULK(K)=TEBOIL 
!  4546 CONTINUE
!       IF(ELSMP.NE.0.D0) NSUMP(NSMP+1)=1   
!  1789 CONTINUE
!       RETURN
!       END
! C...................................................................... 
! C.....THE FOLLOWING SUBROUTINE CHECKS TO DETERMINE IF THE BULK MELT      
! C.....TEMPERATURE HAS DROPPED BELOW THE SOLIDUS TEMPERATURE FOR
! C.....EITHER THE METALLIC OR OXIDIC PHASES.  IF SO, AND BULK FREEZING   
! C.....IS SPECIFIED, THE SOLIDIFIED MATERIAL IS PRECIPITATED OUT ONTO    
! C.....THE BASEMAT SURFACE WHERE IT IS NODALIZED INTO THE BASEMAT VECTOR.
! C...................................................................... 
!       SUBROUTINE BULKSLD     
!       IMPLICIT DOUBLE PRECISION(A-H,O-Z)
!       DIMENSION HSEND(28)
!       COMMON/CATCHR/A(999),B(999),C(999),D(999),P(999),Q(999),
!      1RECON(999),DELVEL(999),DSRDT(999),DELHTS(999),EMAX(999,999),
!      2DBLKEN(999),DELHIT(16,999),SOURCE(16,999),SRCTOT(999),
!      3HCROLD(16,999),DCDOT(999),HCRUST(16,999),DFILM(16,999),
!      4DFMOLD(16,999),DENOLD(999),SIGOX(999),SIGCON(999),BET(999),
!      5TFZX(999),TFZC(999),TKX(999),TKM(999),THETO(999,999),
!      6THET1(999,999),OMEG0(4,999),OMEG1(4,999),TAO0(999),TAO1(999),
!      7SIG0(999),SIG1(999),TARGB(999),DADOT(999),DADOTG(999),
!      8XLOLD(4,999),VISREX(999),TATMS(999),HTMP(999),DHTMP(999),
!      9HTMOLD(999)
!       COMMON/CATCHI/NUMS(4,999),NUMOLD(4,999),NTRACK(16),NSUMP(999),
!      1NPASSG(999),NCRSTM(999),NCRRT(999),NPASS(999),NBURN,NBURNO     
!       COMMON/PRINTB/ELEVAT(999),ELOLD(999),XDIST(999,999),XBTW(999,999),
!      1TEMP(999,999),ENTHP(999,999),EOLD(999,999),ENBLK(999),EBKOLD(999),
!      2TBULK(999),HITE(16,999),HITOLD(16,999),HTOT(999),HTOLD(999),
!      3HTCFT(999),HTCOEF(999),QFLUXT(999),QFLUXB(999),VEL(999),ELO(999),
!      4VELOLD(999),SRSCOR(16),AREA(999),RAD(999),ARC(999),VOLCN(16),
!      5VOID(999),VGJ(999),ZABLAT(999),ZABOLD(999),DCRUST(999),
!      6DCROLD(999),DABCON(999),DABOLD(999),DFILMT(999),DFOLT(999),
!      7SMFLX(4,999),XLSMF(4,999),TOTVOL,XFACMS(999),XMFLXA,XMCORT,
!      8VCORT,TOTOX,TOTMET,QFLXT,QFLXB,TIME,DTIME,XMCOR(16),VCOR(16),
!      9TCONI,RSAND,HDOWNC,TBOUND,EMISCN,PDRYWL,XDISTO(999),QOXT(999),
!      1XLENSH,XBTWO(999),RCOMP,WDOOR,RSUMP,RSHELL,RPED,TPED,ELSMP,
!      1TENDP(10,999),TFRZSH,TDEBRS,TKDEBR,PDEBR,CPDEBR,ENENDP(10,999),
!      2ENOLDP(10,999),DXVERT,DXSNK,XDSTE(10,999),XBTE(10,999),HXLA(999),
!      3HXLB(999),TSFEB(999),DCRS(999),DCRSLD(999),HCRS(16,999),
!      4HCRSLD(16,999),THETE0(10,999),THETE1(10,999),QSHELL,QSHELE,TSHELI,
!      5SIGOXE(999),FKOXE(999),RINJC,XLSEC,ANGSEC,ANINJC,XLCHAN,WCHNL,
!      6TEFZX(999),TIMSPC(999),DXNODE(999),TNORM(999),FRCSOL(999),
!      7ALPSPR(999),CRAMCON,HINTF,TSHLMX,XFRMX(999),XFROX(999),XFRTX(999),
!      8XMLMX(999),XMLOX(999),XMLTX(999),XTOTX(999),TIMEO,TMAX,EDOWN(999),
!      9HCP(999)
!       COMMON/HCONS/HMETAL(999),HOXIDE(999)  
!       COMMON/PROPI/ NMATC,NMATFI,NMATFF,ICAOH2,ICACO3,IMCCO3,IFH2O,     
!      1IVH2O,ICK2O,IVK2O,INA2O,ITIO2,ISIO2,ICAO,IMGO,IAL2O3,IFEO,IFE2O3, 
!      2IFE3O4,IFE,ICR,INI,IZR,IU,IB4C,IB,ICR2O3,INIO,IUO2,IZRO2,IB2O3,   
!      3NBCINT(999),NODES(999),NUMNOD,IMOX(28),IBAS,ILCS,ILL,NACTIV(999),     
!      4NBFRZM,NBFRZO,NABLFM,NDRNFM,NTYPMT(999,999),NDOOR,NBMADJ,NUMSHV,   
!      5NBSHL(999),NCRSTS(999),NUMSHH,NSKIPE,NACSH,NWAT,NPEND,NBCBOT,
!      6NCRTOP,NBFZOE,NBFZME,NGEOM,NL(999,999),NFRSCT,NLOGSH,NADAB,NINVIS,
!      7NSIMST,NSTEEL,NOVHT,NOVTK,NOVUM,NOVEM,NOVSIG,NPLLOC(999),NBPL,
!      8IXP(999),IYP(999),NVTPE,NSOLTP,NSOLF,NINTF,IFLGA(999),ICTYPE,ICTC,
!      9NPOURS,NSMP,NPED,NDOR,NSHL,NANULS,NSMPCV,NBOIL,NSWALL,NMVER,
!      1NCRTEM,NTHINC,NVELP,NITMAX,NENMAX,NPRINT,NPFREQ,NTIMSPC,NPLFREQ,
!      2NPLTOT,NJET,NJETP,NJETD,NJETND,NODCAP,NVELPW,NITMAXW,NENMXW,
!      3IFLGJ(999),NBEDCQ,ISHELE
!       COMMON/PRINTR/ QFEH2O,QCRH2O,QZRH2O,QFECO2,QCRCO2,QZRCO2,
!      4XFH2OU,XFCAOH,XFMGCA,XFCACO,XZRMRE,XFEMRE,XCRMRE,XZRORE,XFEORE,   
!      5XCRORE,XMH2O,XMCO2,XMCACO,XMMGCA,XMCAOH,TFWL,TFWS,TBWL,TBWS,      
!      6TMCAL,TMCAS,TCAL,TCAS,TFOS,TFOL,TFMS,TFML,XVISC(28),SVISC(28),    
!      7XMOL(28),FMMOL(28),ROM(28),ROMLIQ(28),AEQM(28,2),BEQM(28,2),
!      8CEQM(28,2),ECL,ECS,ECAL,ECAS,EMCAL,EMCAS,EBWL,EBWS,EFWL,EFWS,    
!      9STEF,GRAV,PI,TCS,TCL,CCL,CCS,RMASSL,WPCC,WPM,WPA,WPCS,ROC,RMASSS,   
!      1ANGSHL,RSLAGL,RSLAGS,HNODT,VFAV,VGAV,QXAV,XWTSS(16),  
!      2TSCS(2),TSCL(2),ESCS(2),ESCL(2),CCSS(2),CCSL(2),ROSTLS,ROSTLL,
!      3XFRGAS,HMINC,TST(99),TSTOP(99),AINTP(99),BINTP(99),DRATIO(999),
!      4XBCN(999),XDCN(999),XBLT(15),ADEC(99),BDEC(99),APOUR(16,99),
!      5BPOUR(16,99),XWTC(14),BWIDTH,THCKCV,TMBOIL,TEBOIL,VFINT,ANGFAN,
!      6ALPMAX,THSHL,XFCABL,XNDMIN,DVMX,DAVMX,DEAVMX,DEMX,TDC,QDCU,QDCUO2,
!      7TSINJ,EINJ,DTINJ,TKINJ,ROEV,CPINJ,SURFT,VSINJ,EMINJ,TSINJO,EINJO,
!      8DTINJO,TKINJO,ROEVO,CPINJO,SURFTO,VSINJO,EMINJO,XLEADE,ARSUM,
!      9DBUBOX,UTRISE,TREMSH,DJET,DFALL,WEBER,FROUDE,XPSAITO,XPEPSTN,
!      1FRAG,XMBEDT,XMBED(16),XLPENT,XLPENA,UJET,UFALL,HFALL,ERPV,
!      2TJETT(99),DJETT(99),HWATP,XDOTJET,DVMXW,DAVMXW,DEMXW,DEAVMXW,
!      3QJETW,XSTMJF,TINTSJF,ESAT,DRDOOR,DRANL,EI,QDCBUO2,QDCBU,
!      4EBEDS,EBEDB
!       COMMON/BASPR/ HBMT(999,999,16),HBMOLD(999,999,16) 
!       COMMON/PROPB/CPBM(999),FKB(999,999),DENB(999,999),DTDEB(999,999),
!      1EMIBM(999),DENCRS(999),ENCRS(999),FKRF(999),DENRF(999),CPRF(999) 
!       COMMON/PROPM/DTDEM(999),CPMLT(999),FKMLT(999),DENMLT(999),
!      1SIGMLT(999),UMMLT(999),EMIMLT(999)      
!       DATA TREF /298.15D0/      
! C.....HERE WE GO.... 
!       DO 4450 KH=1,NUMNOD
!       NBFRZ=0
! C.....FIRST SEE IF THE NODE IS ACTIVE AND IF MELT IS LOCALLY PRESENT.
!       IF(NACTIV(KH).EQ.0.OR.NADAB.EQ.1) GO TO 4450      
!       IF(HTOT(KH).LE.0.D0) GO TO 4450     
! C.....NODE IS ACTIVE AND MELT IS HERE; NOW CHECK TO SEE IF SOLIDS 
! C.....FRACTION HAS REACHED THE MAXIMUM ALLOWABLE AND IF NOT, BYPASS.
! C.....IF BULK FREEZING IS POSSIBLE.
!       IF(ALPSPR(KH).LT.ALPMAX) GO TO 4450
! C.....MELT HAS REACHED THE SOLIDUS POINT, NODALIZED THE MATERIAL INTO
! C.....THE BASEMAT.
!       IF(NBCINT(KH).LE.3) GO TO 4453      
!       ZMIN=XDISTO(KH)-XBTWO(KH) 
!       IF(ZABLAT(KH).GT.ZMIN) GO TO 4453   
!       ZBOLD=ZABLAT(KH)
!       NODES(KH)=NODES(KH)-1     
!       ZABLAT(KH)=ZABLAT(KH)+XDIST(2,KH)   
!       ZABOLD(KH)=ZABLAT(KH)
!       XDISTO(KH)=XDIST(2,KH)+ZBOLD
!       XBTWO(KH)=XBTW(2,KH)+ZBOLD
!       DO 4454 KGS=1,4 
!       IF(NUMS(KGS,KH).GT.2) GO TO 4921   
!       IF(NUMS(KGS,KH).EQ.2) XLSMF(KGS,KH)=XLSMF(KGS,KH)+ZBOLD
!       NUMS(KGS,KH)=1  
!       GO TO 4454      
!  4921 CONTINUE
!       NUMS(KGS,KH)=NUMS(KGS,KH)-1
!  4454 CONTINUE
!       DO 4455 KV=1,NODES(KH)    
!       ZMULT=1.D0      
!       IF(KV.EQ.1) ZMULT=(ZBOLD+XBTW(2,KH))/XBTW(2,KH)
!       DO 4457 KTP=1,16
!       HBMT(KV,KH,KTP)=HBMT(KV+1,KH,KTP)*ZMULT
!  4457 CONTINUE
!       DTDEB(KV,KH)=DTDEB(KV+1,KH)
!       NTYPMT(KV,KH)=NTYPMT(KV+1,KH)
!       NL(KV,KH)=NL(KV+1,KH)     
!       IF(KV.GT.1) GO TO 4458    
!       XDIST(KV,KH)=XDIST(KV+1,KH)+ZBOLD   
!       XBTW(KV,KH)=XBTW(KV+1,KH)+ZBOLD     
!       GO TO 4455      
!  4458 CONTINUE
!       XDIST(KV,KH)=XDIST(KV+1,KH)
!       XBTW(KV,KH)=XBTW(KV+1,KH) 
!       TEMP(KV,KH)=TEMP(KV+1,KH) 
!       ENTHP(KV,KH)=ENTHP(KV+1,KH)
!       EMAX(KV,KH)=EMAX(KV+1,KH) 
!  4455 CONTINUE
!  4453 CONTINUE
! C.....PERFORM BULK FREEZING DEPENDING UPON WHETHER FREEZING OCCURS      
! C.....OVER CONRETE OR STEEL AS OPPOSED TO DEBRIS, AND WHETHER OR NOT    
! C.....A CRUST AND/OR FILM BOUNDARY CONDITION IS CURRENTLY APPLICABLE    
! C.....AT THE INTERFACE.
!       IF(NBCINT(KH).EQ.2.OR.NBCINT(KH).EQ.6.OR.NBCINT(KH).EQ.8) GO TO   
!      1 6723 
!       ROCCR=0.D0      
!       ECRST=0.D0      
!       GO TO 6724      
!  6723 CONTINUE
!       CALL MASFRA(HCRUST,ROM,KH,RSLAGS,ROC,ROCCR,0) 
!       CALL ASINEA(HCRUST,KH,HSEND,ROM,WPCC,WPM,WPA,WPCS,ROC,RSLAGS,0)   
!       CALL ETF(ECRST,HSEND,TFZX(KH),DTDE) 
!  6724 CONTINUE
!       IF(NBCINT(KH).EQ.5.OR.NBCINT(KH).EQ.8.OR.NBCINT(KH).EQ.9) GO TO   
!      1 7319 
!       DELFD=0.D0      
!       ROCFLM=0.D0     
!       ECFILM=0.D0     
!       GO  TO 7321     
!  7319 CONTINUE
!       CALL MASFRA(DFILM,ROMLIQ,KH,RSLAGL,ROC,ROCFLM,0)  
!       DELFD=1.D0/DRATIO(KH)     
!       IF(NBCINT(KH).EQ.5) GO TO 7323      
!       IF(NBCINT(KH).EQ.8) GO TO 8318      
!       TINT=TFZC(KH)+(HTCOEF(KH)*DFILMT(KH)*(TBULK(KH)-TFZX(KH)))/TKM(KH)
!       GO TO 7325      
!  8318 CONTINUE
!       C1=TKX(KH)/DCRUST(KH)+TKM(KH)/DFILMT(KH)      
!       C2=(TKX(KH)*TFZX(KH))/DCRUST(KH)+(TKM(KH)*TFZC(KH))/DFILMT(KH)    
!       TINT=C2/C1      
!       GO TO 7325      
!  7323 CONTINUE
!       TINT=(HTCOEF(KH)*TBULK(KH)+(TKM(KH)*TFZC(KH))/DFILMT(KH))/(HTCOEF(
!      1KH)+TKM(KH)/DFILMT(KH))   
!  7325 CONTINUE
!       CALL ASINEA(DFILM,KH,HSEND,ROMLIQ,WPCC,WPM,WPA,WPCS,ROC,RSLAGL,0) 
!       CALL ETF(ECFILM,HSEND,TINT,DTDE)    
!  7321 CONTINUE
!       CALL MASFRA(HITE,ROM,KH,RSLAGS,ROC,ROCBS,0)   
!       CALL MASFRA(HITE,ROMLIQ,KH,RSLAGL,ROC,ROCBL,0)
!       DELEL=ROCBL*HTOT(KH)/ROCBS
!       IF(NTYPMT(1,KH).LE.3) GO TO 6725    
! C.....BULK FREEZING OVER PREVIOUSLY SOLIDIFIED MATERIAL DONE HERE.      
!       CALL MASFRD(ROM,1,KH,RSLAGS,ROC,ROCBM)
!       XLENBM=ZABLAT(KH)-(XDISTO(KH)-XBTWO(KH))      
!       XLENBM=DMAX1(XLENBM,0.D0) 
!       HHAT=DELEL+DCRUST(KH)+XLENBM+DELFD*DFILMT(KH) 
! C.....TEMPORARILY ASSIGN FROZEN MATERIAL TO CRUST ARRAY FOR EVALUATION  
! C.....OF HOMOGENEOUS ENTHALPY AND TEMPERATURE.      
!       HSUMT=0.D0      
!       HSUMO=0.D0      
!       DO 6326 KTP=1,16
!       CALL INDEX(KTP,KJ)
!       RDRAT=ROMLIQ(KJ)/ROM(KJ)  
!       IF(KTP.EQ.16) RDRAT=RSLAGL/RSLAGS   
!       HCRUST(KTP,KH)=HCRUST(KTP,KH)+HITE(KTP,KH)*RDRAT+HBMT(1,KH,KTP)   
!      1+DFILM(KTP,KH)*RDRAT      
!       HSUMT=HSUMT+HCRUST(KTP,KH)
!       IF(KTP.GE.8) HSUMO=HSUMO+HCRUST(KTP,KH)
!  6326 CONTINUE
!       FRACO=HSUMO/HSUMT
!       NTBM=4
!       IF(FRACO.GE.0.5) NTBM=5   
!       CALL MASFRA(HCRUST,ROM,KH,RSLAGS,ROC,ROCHAT,0)
!       ESTORE=(ROCBM*ENTHP(1,KH)*XLENBM+ROCCR*ECRST*DCRUST(KH)+ROCFLM*ECF
!      1ILM*DFILMT(KH)+ROCBL*ENBLK(KH)*HTOT(KH))/(HHAT*ROCHAT)  
!       CALL ASINEA(HCRUST,KH,HSEND,ROM,WPCC,WPM,WPA,WPCS,ROC,RSLAGS,0)   
!       CALL TEF(ESTORE,HSEND,TSTORE,DTDE)  
! C.....CALCULATE TOTAL NUMBER OF NODES CREATED DUE TO SOLIDIFICATION.    
!       XNDMCK=XNDMIN   
!       HMFRZ=0.5*HMINC
!       IHOLE=IDINT(HHAT/XNDMIN)+1 
!       HRESID=HHAT-XNDMIN*FLOAT(IHOLE-1)   
!       IF(IHOLE.EQ.1) GO TO 6330 
!       IF(HRESID.GT.HMFRZ) GO TO 6330      
!       XNDMCK=HHAT/FLOAT(IHOLE-1)
!       HRESID=XNDMCK   
!       IHOLE=IHOLE-1   
!  6330 CONTINUE
!       DGAS=HRESID-XLENBM
!       IF(IHOLE.GT.1) DGAS=0.5D0*XNDMCK-XLENBM
!       DGAS=DMAX1(DGAS,0.D0)     
!       NSAVE=NODES(KH) 
!       NODES(KH)=NODES(KH)+IHOLE-1
!       IF(NODES(KH).GT.NODCAP) NODES(KH)=NODCAP      
! C.....SHIFT NODES TO INCORPORATE SOLIDIFIED MATERIAL.
!       IF(IHOLE.EQ.1) GO TO 6331 
!       IPLS2=2
!       DO 6332 KDR=2,NSAVE
!       IBN=NODES(KH)-KDR+IPLS2   
!       IBO=NSAVE-KDR+IPLS2
!       DO 6334 KTP=1,16
!       HBMT(IBN,KH,KTP)=HBMT(IBO,KH,KTP)   
!  6334 CONTINUE
!       DTDEB(IBN,KH)=DTDEB(IBO,KH)
!       XDIST(IBN,KH)=XDIST(IBO,KH)
!       XBTW(IBN,KH)=XBTW(IBO,KH) 
!       TEMP(IBN,KH)=TEMP(IBO,KH) 
!       ENTHP(IBN,KH)=ENTHP(IBO,KH)
!       NTYPMT(IBN,KH)=NTYPMT(IBO,KH)
!       NL(IBN,KH)=NL(IBO,KH)     
!       EMAX(IBN,KH)=EMAX(IBO,KH) 
!  6332 CONTINUE
!  6331 CONTINUE
! C.....ASSIGN NODAL VARIABLES IN SOLIDIFIED REGION.  
!       DO 6335 KDR=1,IHOLE
!       TEMP(KDR,KH)=TSTORE
!       ENTHP(KDR,KH)=ESTORE      
!       DTDEB(KDR,KH)=DTDE
!       NL(KDR,KH)=0    
!       NTYPMT(KDR,KH)=NTBM
!       XBTW(KDR,KH)=HRESID
!       IF(KDR.GT.1) XBTW(KDR,KH)=0.5D0*XNDMCK
!       XDIST(KDR,KH)=XNDMCK      
!       IF(KDR.EQ.1.AND.IHOLE.GT.1) XDIST(KDR,KH)=HRESID+0.5D0*XNDMCK     
!       IF(KDR.EQ.1.AND.IHOLE.EQ.1) XDIST(KDR,KH)=HRESID+XDISTO(KH)-XBTWO(
!      1KH)   
!       IF(KDR.EQ.IHOLE.AND.IHOLE.GT.1) XDIST(KDR,KH)=0.5D0*XNDMCK+
!      1 XDISTO(KH)-XBTWO(KH)     
!       VOLUME=XBTW(1,KH)
!       IF(KDR.GT.1) VOLUME=XDIST(KDR-1,KH)-XBTW(KDR-1,KH)+XBTW(KDR,KH)   
!       DO 6336 KTP=1,16
!       HBMT(KDR,KH,KTP)=VOLUME*HCRUST(KTP,KH)/HSUMT  
!  6336 CONTINUE
!  6335 CONTINUE
!       NBCINT(KH)=1    
!       ELEVAT(KH)=ELEVAT(KH)+DELEL
!       XDISTO(KH)=XDIST(1,KH)    
!       XBTWO(KH)=XBTW(1,KH)      
!       ZABLAT(KH)=XDISTO(KH)     
!       ZABOLD(KH)=ZABLAT(KH)     
!       DCRUST(KH)=0.D0 
!       TBULK(KH)=TREF  
!       ENBLK(KH)=0.D0  
!       DTDEM(KH)=0.D0  
!       HTOT(KH)=0.D0   
!       HMETAL(KH)=0.D0 
!       HOXIDE(KH)=0.D0 
!       DFILMT(KH)=0.D0 
!       DO 6338 KTP=1,16
!       HCRUST(KTP,KH)=0.D0
!       DFILM(KTP,KH)=0.D0
!       HITE(KTP,KH)=0.D0
!  6338 CONTINUE
!       DO 6337 KGS=1,4 
!       IF(NUMS(KGS,KH).GT.1) GO TO 6339    
!       XLSMF(KGS,KH)=XLSMF(KGS,KH)+DGAS    
!  6339 CONTINUE
!       NUMS(KGS,KH)=NUMS(KGS,KH)+IHOLE-1   
!  6337 CONTINUE
!       GO TO 4450      
! C.....PERFORM BULK FREEZING PROCEDURE FOR CASE IN WHICH FREEZING OVER   
! C.....A CONCRETE OR STEEL SURFACE OCCURS. 
!  6725 CONTINUE
!       ESTORE=ENTHP(1,KH)
!       TSTORE=TEMP(1,KH)
!       XMID=0.5D0*ZABLAT(KH)-0.5D0*(XDISTO(KH)-XBTWO(KH))      
!       HHAT=DELEL+DCRUST(KH)+DFILMT(KH)*DELFD
!       HSUMT=0.D0      
!       HSUMO=0.D0      
!       DO 7326 KTP=1,16
!       CALL INDEX(KTP,KJ)
!       RDRAT=ROMLIQ(KJ)/ROM(KJ)  
!       IF(KTP.EQ.16) RDRAT=RSLAGL/RSLAGS   
!       HCRUST(KTP,KH)=HCRUST(KTP,KH)+(HITE(KTP,KH)+DFILM(KTP,KH))*RDRAT  
!       HSUMT=HSUMT+HCRUST(KTP,KH)
!       IF(KTP.GE.8) HSUMO=HSUMO+HCRUST(KTP,KH)
!  7326 CONTINUE
!       FRACO=HSUMO/HSUMT
!       NTBM=4
!       IF(FRACO.GE.0.5) NTBM=5   
! C.....HELLO!!!
!       CALL MASFRA(HCRUST,ROM,KH,RSLAGS,ROC,ROCHAT,0)
!       ENTHP(1,KH)=(ROCCR*ECRST*DCRUST(KH)+DFILMT(KH)*ROCFLM*ECFILM      
!      1+ROCBL*ENBLK(KH)*HTOT(KH))/(HHAT*ROCHAT)      
!       CALL ASINEA(HCRUST,KH,HSEND,ROM,WPCC,WPM,WPA,WPCS,ROC,RSLAGS,0)   
!       CALL TEF(ENTHP(1,KH),HSEND,TEMP(1,KH),DTDEML) 
!       XNDMCK=XNDMIN   
!       HMFRZ=XNDMIN
!       IHOLE=IDINT(HHAT/XNDMIN)+1 
!       HRESID=HHAT-XNDMIN*FLOAT(IHOLE-1)   
!       IF(IHOLE.EQ.1) GO TO 7330 
!       IF(HRESID.GT.HMFRZ) GO TO 7330      
!       XNDMCK=HHAT/FLOAT(IHOLE-1)
!       HRESID=XNDMCK   
!       IHOLE=IHOLE-1   
!  7330 CONTINUE
! C.....SHIFT GAS ISOTHERMS TO ACCOUNT FOR SOLIDIFIED MATERIAL. 
!       DO 8383 KGS=1,4 
!       IF(NUMS(KGS,KH).GT.1) GO TO 8382    
!       XLMOVE=XLSMF(KGS,KH)-XMID 
!       IF(XLMOVE.GT.0.D0) GO TO 8711
!       XLSMF(KGS,KH)=XLSMF(KGS,KH)+HRESID  
!       IF(IHOLE.GT.1) XLSMF(KGS,KH)=XLSMF(KGS,KH)+0.5D0*XNDMCK 
!       NUMS(KGS,KH)=NUMS(KGS,KH)+IHOLE-1   
!       GO TO 8383      
!  8711 CONTINUE
!       XLSMF(KGS,KH)=XLSMF(KGS,KH)-XMID    
!       NUMS(KGS,KH)=NUMS(KGS,KH)+IHOLE     
!       GO TO 8383      
!  8382 CONTINUE
!       NUMS(KGS,KH)=NUMS(KGS,KH)+IHOLE     
!  8383 CONTINUE
! C.....SHIFT NODES TO ACCOUNT FOR SOLIDIFYING MATERIAL.
!       NSAVE=NODES(KH) 
!       NODES(KH)=NODES(KH)+IHOLE 
!       IF(NODES(KH).GT.NODCAP) NODES(KH)=NODCAP      
!       IPLS2=2
!       DO 7332 KDR=2,NSAVE
!       IBN=NODES(KH)-KDR+IPLS2   
!       IBO=NSAVE-KDR+IPLS2
!       DO 7334 KTP=1,16
!       HBMT(IBN,KH,KTP)=HBMT(IBO,KH,KTP)   
!  7334 CONTINUE
!       DTDEB(IBN,KH)=DTDEB(IBO,KH)
!       XDIST(IBN,KH)=XDIST(IBO,KH)
!       XBTW(IBN,KH)=XBTW(IBO,KH) 
!       TEMP(IBN,KH)=TEMP(IBO,KH) 
!       ENTHP(IBN,KH)=ENTHP(IBO,KH)
!       NTYPMT(IBN,KH)=NTYPMT(IBO,KH)
!       NL(IBN,KH)=NL(IBO,KH)     
!       EMAX(IBN,KH)=EMAX(IBO,KH) 
!  7332 CONTINUE
! C.....NODALIZE THE SOLDIFIED MATERIAL INTO THE BASEMAT.
!       IUP=IHOLE+1     
!       XDIST(IUP,KH)=XDISTO(KH)-XBTWO(KH)+XMID
!       XBTW(IUP,KH)=XMID
!       FMULTF=1.D0+(XMID/ZABLAT(KH))*(TEMP(2,KH)/TSTORE-1.D0)  
!       ENTHP(IUP,KH)=ESTORE*FMULTF
!       EMAX(IUP,KH)=EMAX(1,KH)*FMULTF      
!       CALL TEC(ENTHP(IUP,KH),EMAX(IUP,KH),TEMP(IUP,KH),DTDE,RMASS,YCACO3
!      1,YMCCO3,YCAOH2,YFH2O,NL(1,KH))      
!       DTDEB(IUP,KH)=DTDE
!       NTYPMT(IUP,KH)=NTYPMT(1,KH)
!       NL(IUP,KH)=NL(1,KH)
!       DO 7335 KDR=1,IHOLE
!       DTDEB(KDR,KH)=DTDEML      
!       TEMP(KDR,KH)=TEMP(1,KH)   
!       ENTHP(KDR,KH)=ENTHP(1,KH) 
!       NTYPMT(KDR,KH)=NTBM
!       NL(KDR,KH)=0    
!       XBTW(KDR,KH)=HRESID
!       IF(KDR.GT.1) XBTW(KDR,KH)=0.5D0*XNDMCK
!       XDIST(KDR,KH)=XNDMCK      
!       IF(KDR.EQ.1.AND.IHOLE.GT.1) XDIST(KDR,KH)=HRESID+0.5D0*XNDMCK     
!       IF(KDR.EQ.1.AND.IHOLE.EQ.1) XDIST(KDR,KH)=HRESID+XMID   
!       IF(KDR.EQ.IHOLE.AND.IHOLE.GT.1) XDIST(KDR,KH)=0.5D0*XNDMCK+XMID   
!       VOLUME=XBTW(1,KH)
!       IF(KDR.GT.1) VOLUME=XDIST(KDR-1,KH)-XBTW(KDR-1,KH)+XBTW(KDR,KH)   
!       DO 7336 KTP=1,16
!       HBMT(KDR,KH,KTP)=VOLUME*HCRUST(KTP,KH)/HSUMT  
!  7336 CONTINUE
!  7335 CONTINUE
!       NBCINT(KH)=1    
!       ELEVAT(KH)=ELEVAT(KH)+DELEL
!       XDISTO(KH)=XDIST(1,KH)    
!       XBTWO(KH)=XBTW(1,KH)      
!       ZABLAT(KH)=XDISTO(KH)     
!       ZABOLD(KH)=ZABLAT(KH)
!       TBULK(KH)=TREF  
!       ENBLK(KH)=0.D0  
!       DTDEM(KH)=0.D0  
!       DCRUST(KH)=0.D0 
!       HTOT(KH)=0.D0   
!       HMETAL(KH)=0.D0 
!       HOXIDE(KH)=0.D0 
!       DFILMT(KH)=0.D0 
!       DO 7338 KTP=1,16
!       HCRUST(KTP,KH)=0.D0
!       HITE(KTP,KH)=0.D0
!       DFILM(KTP,KH)=0.D0
!  7338 CONTINUE
!  4450 CONTINUE
!       RETURN
!       END
! C...................................................................... 
! C.....THIS SUBROUTINE CONTROLS THE INSTIGATION AND RUNNING OF THE      
! C.....SHELL HEATUP MODEL.   THE ROUTINE CHECKS WHEN TO BEGIN THE SHELL   
! C.....ANALYSIS, AND ALSO INITIALIZES THE SHELL CRUST CALCULATIONS 
! C.....SHOULD CRUST GROWTH BE ALLOWED ON THE SHELL (NBFZOE OR NBFZME=2). 
! C......................................................................
!       SUBROUTINE SHELLCK
!       IMPLICIT DOUBLE PRECISION(A-H,O-Z)
!       DIMENSION HSEND(28)
!       COMMON/PRINTB/ELEVAT(999),ELOLD(999),XDIST(999,999),XBTW(999,999),
!      1TEMP(999,999),ENTHP(999,999),EOLD(999,999),ENBLK(999),EBKOLD(999),
!      2TBULK(999),HITE(16,999),HITOLD(16,999),HTOT(999),HTOLD(999),
!      3HTCFT(999),HTCOEF(999),QFLUXT(999),QFLUXB(999),VEL(999),ELO(999),
!      4VELOLD(999),SRSCOR(16),AREA(999),RAD(999),ARC(999),VOLCN(16),
!      5VOID(999),VGJ(999),ZABLAT(999),ZABOLD(999),DCRUST(999),
!      6DCROLD(999),DABCON(999),DABOLD(999),DFILMT(999),DFOLT(999),
!      7SMFLX(4,999),XLSMF(4,999),TOTVOL,XFACMS(999),XMFLXA,XMCORT,
!      8VCORT,TOTOX,TOTMET,QFLXT,QFLXB,TIME,DTIME,XMCOR(16),VCOR(16),
!      9TCONI,RSAND,HDOWNC,TBOUND,EMISCN,PDRYWL,XDISTO(999),QOXT(999),
!      1XLENSH,XBTWO(999),RCOMP,WDOOR,RSUMP,RSHELL,RPED,TPED,ELSMP,
!      1TENDP(10,999),TFRZSH,TDEBRS,TKDEBR,PDEBR,CPDEBR,ENENDP(10,999),
!      2ENOLDP(10,999),DXVERT,DXSNK,XDSTE(10,999),XBTE(10,999),HXLA(999),
!      3HXLB(999),TSFEB(999),DCRS(999),DCRSLD(999),HCRS(16,999),
!      4HCRSLD(16,999),THETE0(10,999),THETE1(10,999),QSHELL,QSHELE,TSHELI,
!      5SIGOXE(999),FKOXE(999),RINJC,XLSEC,ANGSEC,ANINJC,XLCHAN,WCHNL,
!      6TEFZX(999),TIMSPC(999),DXNODE(999),TNORM(999),FRCSOL(999),
!      7ALPSPR(999),CRAMCON,HINTF,TSHLMX,XFRMX(999),XFROX(999),XFRTX(999),
!      8XMLMX(999),XMLOX(999),XMLTX(999),XTOTX(999),TIMEO,TMAX,EDOWN(999),
!      9HCP(999)
!       COMMON/HCONS/HMETAL(999),HOXIDE(999)  
!       COMMON/PROPI/ NMATC,NMATFI,NMATFF,ICAOH2,ICACO3,IMCCO3,IFH2O,     
!      1IVH2O,ICK2O,IVK2O,INA2O,ITIO2,ISIO2,ICAO,IMGO,IAL2O3,IFEO,IFE2O3, 
!      2IFE3O4,IFE,ICR,INI,IZR,IU,IB4C,IB,ICR2O3,INIO,IUO2,IZRO2,IB2O3,   
!      3NBCINT(999),NODES(999),NUMNOD,IMOX(28),IBAS,ILCS,ILL,NACTIV(999),     
!      4NBFRZM,NBFRZO,NABLFM,NDRNFM,NTYPMT(999,999),NDOOR,NBMADJ,NUMSHV,   
!      5NBSHL(999),NCRSTS(999),NUMSHH,NSKIPE,NACSH,NWAT,NPEND,NBCBOT,
!      6NCRTOP,NBFZOE,NBFZME,NGEOM,NL(999,999),NFRSCT,NLOGSH,NADAB,NINVIS,
!      7NSIMST,NSTEEL,NOVHT,NOVTK,NOVUM,NOVEM,NOVSIG,NPLLOC(999),NBPL,
!      8IXP(999),IYP(999),NVTPE,NSOLTP,NSOLF,NINTF,IFLGA(999),ICTYPE,ICTC,
!      9NPOURS,NSMP,NPED,NDOR,NSHL,NANULS,NSMPCV,NBOIL,NSWALL,NMVER,
!      1NCRTEM,NTHINC,NVELP,NITMAX,NENMAX,NPRINT,NPFREQ,NTIMSPC,NPLFREQ,
!      2NPLTOT,NJET,NJETP,NJETD,NJETND,NODCAP,NVELPW,NITMAXW,NENMXW,
!      3IFLGJ(999),NBEDCQ,ISHELE
!       COMMON/PRINTR/ QFEH2O,QCRH2O,QZRH2O,QFECO2,QCRCO2,QZRCO2,
!      4XFH2OU,XFCAOH,XFMGCA,XFCACO,XZRMRE,XFEMRE,XCRMRE,XZRORE,XFEORE,   
!      5XCRORE,XMH2O,XMCO2,XMCACO,XMMGCA,XMCAOH,TFWL,TFWS,TBWL,TBWS,      
!      6TMCAL,TMCAS,TCAL,TCAS,TFOS,TFOL,TFMS,TFML,XVISC(28),SVISC(28),    
!      7XMOL(28),FMMOL(28),ROM(28),ROMLIQ(28),AEQM(28,2),BEQM(28,2),
!      8CEQM(28,2),ECL,ECS,ECAL,ECAS,EMCAL,EMCAS,EBWL,EBWS,EFWL,EFWS,    
!      9STEF,GRAV,PI,TCS,TCL,CCL,CCS,RMASSL,WPCC,WPM,WPA,WPCS,ROC,RMASSS,   
!      1ANGSHL,RSLAGL,RSLAGS,HNODT,VFAV,VGAV,QXAV,XWTSS(16),  
!      2TSCS(2),TSCL(2),ESCS(2),ESCL(2),CCSS(2),CCSL(2),ROSTLS,ROSTLL,
!      3XFRGAS,HMINC,TST(99),TSTOP(99),AINTP(99),BINTP(99),DRATIO(999),
!      4XBCN(999),XDCN(999),XBLT(15),ADEC(99),BDEC(99),APOUR(16,99),
!      5BPOUR(16,99),XWTC(14),BWIDTH,THCKCV,TMBOIL,TEBOIL,VFINT,ANGFAN,
!      6ALPMAX,THSHL,XFCABL,XNDMIN,DVMX,DAVMX,DEAVMX,DEMX,TDC,QDCU,QDCUO2,
!      7TSINJ,EINJ,DTINJ,TKINJ,ROEV,CPINJ,SURFT,VSINJ,EMINJ,TSINJO,EINJO,
!      8DTINJO,TKINJO,ROEVO,CPINJO,SURFTO,VSINJO,EMINJO,XLEADE,ARSUM,
!      9DBUBOX,UTRISE,TREMSH,DJET,DFALL,WEBER,FROUDE,XPSAITO,XPEPSTN,
!      1FRAG,XMBEDT,XMBED(16),XLPENT,XLPENA,UJET,UFALL,HFALL,ERPV,
!      2TJETT(99),DJETT(99),HWATP,XDOTJET,DVMXW,DAVMXW,DEMXW,DEAVMXW,
!      3QJETW,XSTMJF,TINTSJF,ESAT,DRDOOR,DRANL,EI,QDCBUO2,QDCBU,
!      4EBEDS,EBEDB
!       COMMON/DATSH/TSTLS,TSTLL,ESTLS,ESTLL,DFUSST,CSTLL
!       COMMON/DEFUNC/CPLIQP,CPSOLP,EFOSP,EFOLP,EFMSP,EFMLP     
!       DATA TWO / 2.D0 /      
! C.....FIRST CHECK TO SEE IF THIS CALCULATION IS NEEDED AND IF NOT, 
! C.....BYPASS THE ROUTINE
!       IF(NSKIPE.EQ.0.OR.NADAB.EQ.1) GO TO 4651
!       IF(ISHELE.EQ.1) GO TO 4651
!       IF(NACSH.EQ.1) GO TO 4652
!       IF(NACTIV(NBMADJ).EQ.1) NACSH=1     
!       IF(NACSH.EQ.1) WRITE(6,7692) TIME   
!  7692 FORMAT(//,1X,'*****MELT HAS CONTACTED SHELL, AND SHELL HEATUP MODE
!      1L HAS BEEN ACTIVATED*****',//,5X,'CONTACT TIME=',G12.5,//)
!       IF(NACSH.EQ.0) GO TO 4651 
!       TREMSH=TBULK(NBMADJ)      
!       IF(NCRTEM.NE.1) TREMSH=0.D0
!  4652 CONTINUE
! C.....FIRST CHECK TO DETERMINE IF THE SHELL HAS BEEN TOTALLY ABLATED    
! C.....THROUGH AND, IF SO, DOCUMENT IN THE OUTPUT FILE.
!       TFAIL=TSTLS-1.0D0
!       DO 6670 KD=1,NUMSHV
!       IF(TENDP(NUMSHH,KD).LT.TFAIL) GO TO 6670
!       ISHELE=1
!       HNEXT=ELEVAT(NBMADJ)+HTOT(NBMADJ)
!       WRITE(6,6671) TIME,KD,HNEXT
!  6671 FORMAT(//,1X,'****CONTAINMENT SHELL HAS BEEN ABLATED THROUGH:',//,
!      15X,'TIME=',G12.5,/,5X,'VERTICAL NODE INDEX=',I3,/,5X,'DEBRIS UPPER
!      2 SURFACE ELEVATION NEXT TO SHELL=',G12.5,/)
!       GO TO 4651      
!  6670 CONTINUE
! C.....SET FROZEN MELT/SHELL INTERFACIAL HEAT TRANSFER COEFFICIENT DATA. 
!       IF(NFRSCT.EQ.1) GO TO 8078
!       IF(NTYPMT(1,NBMADJ).GT.3) GO TO 8078
!       TFRZSH=TIME     
!       NFRSCT=1
!  8078 CONTINUE
! C.....FIND INTEGRAL AVERAGE DEBRIS TEMPERATURE ADJACENT TO SHELL.
!       IF(NFRSCT.EQ.0) GO TO 8088
!       IF(ELEVAT(NBMADJ).LE.0.D0) GO TO 8088
!       XLSUM=XBTWO(NBMADJ)
!       TLSUM=XLSUM*TEMP(1,NBMADJ)
!       DO 8089 KP=2,NODES(NBMADJ)
!       IF(NTYPMT(KP,NBMADJ).LE.3) GO TO 8089
!       XLADD=XLSUM+XDIST(KP-1,NBMADJ)-XBTW(KP-1,NBMADJ)+XBTW(KP,NBMADJ)  
!       XLSUM=XLSUM+XLADD
!       TLSUM=TLSUM+XLADD*TEMP(KP,NBMADJ)   
!  8089 CONTINUE
!       TDEBRS=TLSUM/XLSUM
! C.....FIND K, P, AND CP FOR SOLIDIFIED DEBRIS BASED ON UPPER MOST
! C.....DEBRIS NODE.    
!       IF(NTYPMT(1,NBMADJ).LE.3) GO TO 8088
!       CALL MASFRD(ROM,1,NBMADJ,RSLAGS,ROC,PDEBR)    
!       CALL ASINED(1,NBMADJ,HSEND,ROM,WPCC,WPM,WPA,WPCS,ROC,RSLAGS,0)    
!       TEV=TFOS-1.D0   
!       IF(NTYPMT(1,NBMADJ).EQ.4) TEV=TFMS-1.D0
!       CALL CONDF(TEV,HSEND,FKO,FKM,TKDEBR)
!       CALL ETF(EPS,HSEND,TEV,DTDE)
!       CPDEBR=1.D0/DTDE
!  8088 CONTINUE
! C.....IF FREEZING OPTIONS ALLOW FOR CRUST GROWTH, CHECK LOCAL MELT      
! C.....INVENTORY FOR PROPER MELT CONSTITUENTS TO BEGIN CRUST CALCULATION.
!       IF(NBFZOE.EQ.1.AND.NBFZME.EQ.1) GO TO 4651    
!       IF(HTOT(NBMADJ).EQ.0.D0) GO TO 4655 
!       NCRWTC=0
!       IF(NBFZOE.EQ.1) GO TO 4656
!       IF(HOXIDE(NBMADJ).LE.0.D0) GO TO 4656
!       IF(TBULK(NBMADJ).LE.TFOS) GO TO 4656
!       NCRWTC=1
!       GO TO 4653      
!  4656 CONTINUE
!       IF(NBFZME.EQ.1) GO TO 4655
!       IF(HMETAL(NBMADJ).LE.0.D0) GO TO 4655
!       IF(TBULK(NBMADJ).LE.TFMS) GO TO 4655
!       NCRWTC=2
! C.....INITIALIZE CRUST CALCULATIONS DEPENDING UPON THE SETTING OF NCRWTC
!  4653 CONTINUE
!       CALL ASINEA(HITE,NBMADJ,HSEND,ROMLIQ,WPCC,WPM,WPA,WPCS,ROC,RSLAGL,
!      1NCRWTC)
!       CALL TEF(ENBLK(NBMADJ),HSEND,TPASS,DTDE)      
!       IF(NCRWTC.EQ.2) GO TO 4667
!       TFRZS=TFOS      
!       TFRZL=TFOL      
!       HOX=EFOLP-EFOSP 
!       HCOMP=HOXIDE(NBMADJ)      
!       GO TO 4668      
!  4667 CONTINUE
!       TFRZS=TFMS      
!       TFRZL=TFML      
!       HOX=EFMLP-EFMSP 
!       HCOMP=HMETAL(NBMADJ)      
!  4668 CONTINUE
!       COX=CPSOLP      
!       CMS=CPLIQP      
!       CALL CONDF(TFRZS,HSEND,FKO,FKM,TKOX)
!       CALL MASFRA(HITE,ROM,NBMADJ,RSLAGS,ROC,DENOX,NCRWTC)    
!       CALL MASFRA(HITE,ROMLIQ,NBMADJ,RSLAGL,ROC,DENOXL,NCRWTC)
!       NS=NBMADJ
!       CALL MASFRA(HITE,ROMLIQ,NS,RSLAGL,ROC,PMS,0)  
!       CALL CONDF(TBULK(NS),HSEND,FKO,FKM,TKMS)      
!       CALL VISCF(TBULK(NS),HSEND,VISFLO,VISFLM,UMS,VISPAS)
!       CALL SHELLM(TBULK(NS),VGJ(NS),VEL(NS),VOID(NS),CMS,PMS,TKMS,UMS,HT
!      1OT(NS),HSHELL,XLENSH)     
!       ANFAR=(PI*ANGSHL)/180.D0  
!       ANSIN=COS(ANFAR)
!       VFMAX=VOID(NBMADJ)
!       IF(VFMAX.GT.0.3) VFMAX=0.3
!       THM=HTOT(NBMADJ)/(ANSIN*(1.D0-VFMAX))+ELEVAT(NBMADJ)/ANSIN 
!       HENP=-DXVERT/TWO
!       DO 4654 KV=2,NUMSHV
!       HENP=HENP+DXVERT
!       HENT=HENP+DXVERT/TWO      
!       HENB=HENP-DXVERT/TWO      
!       IF(NBSHL(KV).GT.1) GO TO 4654
!       IF(ELEVAT(NBMADJ)/ANSIN.GT.HENB) GO TO 4654   
!       XFACM=(THM-HENB)/(HENT-HENB)
!       XFACM=DMAX1(XFACM,0.D0)   
!       IF(XFACM.GT.1.D0) XFACM=1.D0
!       IF(XFACM.EQ.0.D0) GO TO 4654
!       IF(TENDP(1,KV).GE.TFRZS) GO TO 4654
! C.....ALGORITHM REACHES HERE, CRUST GROWTH CAN BEGIN.
!       NCRSTS(KV)=NCRWTC
!       NBSHL(KV)=2     
!       CALL CONDSS(TENDP(1,KV),FK1)
!       CALL CONDSS(TENDP(2,KV),FK2)
!       CALL DENSS(TENDP(1,KV),DEN1)
!       CALL TESS(ENENDP(1,KV),TPASS,DTDE)  
!       CP1=1.D0/DTDE   
!       TKE=(XDSTE(1,KV)*FK1*FK2)/(FK2*XBTE(1,KV)+FK1*(XDSTE(1,KV)-XBTE(1,
!      2KV))) 
!       ALPHA=(TKE*DENOX*HOX)/(XDSTE(1,KV)*CP1*DEN1*XBTE(1,KV)) 
!       BETA=TKOX*(TFRZS-TENDP(1,KV))
!       GAMMA=HSHELL*(TBULK(NBMADJ)-TENDP(1,KV))+(TKOX*DENOX*HOX)/(CP1*DEN
!      11*XBTE(1,KV))   
!       Z1=(GAMMA/ALPHA)*(GAMMA/ALPHA)+(4.D0*BETA)/ALPHA
!       DCRS(KV)=0.5D0*(SQRT(Z1)-GAMMA/ALPHA)
!       IF(DCRS(KV).LT.1.D-3) DCRS(KV)=1.D-3
!       ENENDP(1,KV)=ENENDP(1,KV)+(DENOX*HOX*DCRS(KV))/(DEN1*XBTE(1,KV))  
!       CALL TESS(ENENDP(1,KV),TENDP(1,KV),DTDE)      
!       C1=1.D0+SQRT((TKOX*DENOX*CPSOLP)/(TKE*DEN1*CP1))
!       C2=1.D0/C1
!       TINMX=TBULK(NBMADJ)+C2*(TENDP(1,KV)-TBULK(NBMADJ))
!       IF(TENDP(1,KV).LE.TINMX) GO TO 1818
!       TENDP(1,KV)=TINMX
!       CALL ETSS(ENENDP(1,KV),TENDP(1,KV),DTDE)
!  1818 CONTINUE
!       IF(NCRSTS(KV).EQ.2) GO TO 4698     
!       KINL=1
!       KINH=7
!       KLOW=8
!       KHIGH=16
!       TEFZX(KV)=TFOS  
!       IF(NCRTEM.EQ.1) TEFZX(KV)=TREMSH    
!       TEFZX(KV)=DMAX1(TFOS,TREMSH)
!       GO TO 4699      
!  4698 CONTINUE
!       KLOW=1
!       KHIGH=7
!       KINL=8
!       KINH=16
!       TEFZX(KV)=TFMS  
!       IF(NCRTEM.EQ.1) TEFZX(KV)=TREMSH    
!       TEFZX(KV)=DMAX1(TFMS,TREMSH)
!  4699 CONTINUE
!       FKOXE(KV)=TKOX  
!       SIGOXE(KV)=(DENOX*HOX)/(2.D0*DTIME) 
!       DO 4700 KTP=KLOW,KHIGH    
!       CALL INDEX(KTP,KJ)
!       RRAT=ROMLIQ(KJ)/ROM(KJ)   
!       IF(KTP.EQ.16) RRAT=RSLAGL/RSLAGS    
!       HCRS(KTP,KV)=(HITE(KTP,NBMADJ)*DENOX*DCRS(KV)*RRAT)/(HCOMP*DENOXL)
!  4700 CONTINUE
!       DO 4701 KTP=KINL,KINH     
!       HCRS(KTP,KV)=0.D0
!  4701 CONTINUE
!  4654 CONTINUE
!  4655 CONTINUE
! C.....CHECK AND SET NBSHL (LOCAL BOUNDARY CONDITION) ACCORDING TO
! C.....LOCAL PRESENCE OR ABSENCE OF CRUSTING MELT CONSTITUENT AT SHELL.  
!       HENP=-DXVERT/TWO
!       DO 5654 KV=2,NUMSHV
!       HENP=HENP+DXVERT
!       HENT=HENP+DXVERT/TWO      
!       HENB=HENP-DXVERT/TWO      
!       IF(NBSHL(KV).EQ.1) GO TO 5654
!       XFACM=(THM-HENB)/(HENT-HENB)
!       XFACM=DMAX1(XFACM,0.D0)   
!       IF(XFACM.GT.1.D0) XFACM=1.D0
!       IF(ELEVAT(NBMADJ)/ANSIN.GT.HENB) GO TO 5655   
!       IF(TENDP(1,KV).GT.TSTLL) GO TO 5655
!       IF(TENDP(1,KV).GE.TEFZX(KV)) GO TO 5655
!       HCOMP=HMETAL(NBMADJ)      
!       IF(NCRSTS(KV).EQ.1) HCOMP=HOXIDE(NBMADJ)      
!       IF(XFACM.GT.0.D0) GO TO 5656
!       NBSHL(KV)=3     
!       GO TO 5654      
!  5656 CONTINUE
!       NBSHL(KV)=2     
!       IF(HCOMP.LE.0.D0) NBSHL(KV)=3
!       GO TO 5654      
!  5655 CONTINUE
!       DCRS(KV)=0.D0   
!       DO 1408 KTP=1,16
!       HCRS(KTP,KV)=0.D0
!  1408 CONTINUE
!       NBSHL(KV)=1     
!  5654 CONTINUE
!  4651 CONTINUE
!       RETURN
!       END
! C...................................................................... 
! C.....SUBROUTINE PLOTJET SAVES THE MELT JET BREAKUP DATA IF THAT OPTION
! C.....IS CHOSEN
! C...................................................................... 
!       SUBROUTINE PLOTJET
!       IMPLICIT DOUBLE PRECISION(A-H,O-Z)
!       REAL(8) KL,KV
!       COMMON/PRINTR/ QFEH2O,QCRH2O,QZRH2O,QFECO2,QCRCO2,QZRCO2,
!      4XFH2OU,XFCAOH,XFMGCA,XFCACO,XZRMRE,XFEMRE,XCRMRE,XZRORE,XFEORE,   
!      5XCRORE,XMH2O,XMCO2,XMCACO,XMMGCA,XMCAOH,TFWL,TFWS,TBWL,TBWS,      
!      6TMCAL,TMCAS,TCAL,TCAS,TFOS,TFOL,TFMS,TFML,XVISC(28),SVISC(28),    
!      7XMOL(28),FMMOL(28),ROM(28),ROMLIQ(28),AEQM(28,2),BEQM(28,2),
!      8CEQM(28,2),ECL,ECS,ECAL,ECAS,EMCAL,EMCAS,EBWL,EBWS,EFWL,EFWS,    
!      9STEF,GRAV,PI,TCS,TCL,CCL,CCS,RMASSL,WPCC,WPM,WPA,WPCS,ROC,RMASSS,   
!      1ANGSHL,RSLAGL,RSLAGS,HNODT,VFAV,VGAV,QXAV,XWTSS(16),  
!      2TSCS(2),TSCL(2),ESCS(2),ESCL(2),CCSS(2),CCSL(2),ROSTLS,ROSTLL,
!      3XFRGAS,HMINC,TST(99),TSTOP(99),AINTP(99),BINTP(99),DRATIO(999),
!      4XBCN(999),XDCN(999),XBLT(15),ADEC(99),BDEC(99),APOUR(16,99),
!      5BPOUR(16,99),XWTC(14),BWIDTH,THCKCV,TMBOIL,TEBOIL,VFINT,ANGFAN,
!      6ALPMAX,THSHL,XFCABL,XNDMIN,DVMX,DAVMX,DEAVMX,DEMX,TDC,QDCU,QDCUO2,
!      7TSINJ,EINJ,DTINJ,TKINJ,ROEV,CPINJ,SURFT,VSINJ,EMINJ,TSINJO,EINJO,
!      8DTINJO,TKINJO,ROEVO,CPINJO,SURFTO,VSINJO,EMINJO,XLEADE,ARSUM,
!      9DBUBOX,UTRISE,TREMSH,DJET,DFALL,WEBER,FROUDE,XPSAITO,XPEPSTN,
!      1FRAG,XMBEDT,XMBED(16),XLPENT,XLPENA,UJET,UFALL,HFALL,ERPV,
!      2TJETT(99),DJETT(99),HWATP,XDOTJET,DVMXW,DAVMXW,DEMXW,DEAVMXW,
!      3QJETW,XSTMJF,TINTSJF,ESAT,DRDOOR,DRANL,EI,QDCBUO2,QDCBU,
!      4EBEDS,EBEDB
!       COMMON/PRINTB/ELEVAT(999),ELOLD(999),XDIST(999,999),XBTW(999,999),
!      1TEMP(999,999),ENTHP(999,999),EOLD(999,999),ENBLK(999),EBKOLD(999),
!      2TBULK(999),HITE(16,999),HITOLD(16,999),HTOT(999),HTOLD(999),
!      3HTCFT(999),HTCOEF(999),QFLUXT(999),QFLUXB(999),VEL(999),ELO(999),
!      4VELOLD(999),SRSCOR(16),AREA(999),RAD(999),ARC(999),VOLCN(16),
!      5VOID(999),VGJ(999),ZABLAT(999),ZABOLD(999),DCRUST(999),
!      6DCROLD(999),DABCON(999),DABOLD(999),DFILMT(999),DFOLT(999),
!      7SMFLX(4,999),XLSMF(4,999),TOTVOL,XFACMS(999),XMFLXA,XMCORT,
!      8VCORT,TOTOX,TOTMET,QFLXT,QFLXB,TIME,DTIME,XMCOR(16),VCOR(16),
!      9TCONI,RSAND,HDOWNC,TBOUND,EMISCN,PDRYWL,XDISTO(999),QOXT(999),
!      1XLENSH,XBTWO(999),RCOMP,WDOOR,RSUMP,RSHELL,RPED,TPED,ELSMP,
!      1TENDP(10,999),TFRZSH,TDEBRS,TKDEBR,PDEBR,CPDEBR,ENENDP(10,999),
!      2ENOLDP(10,999),DXVERT,DXSNK,XDSTE(10,999),XBTE(10,999),HXLA(999),
!      3HXLB(999),TSFEB(999),DCRS(999),DCRSLD(999),HCRS(16,999),
!      4HCRSLD(16,999),THETE0(10,999),THETE1(10,999),QSHELL,QSHELE,TSHELI,
!      5SIGOXE(999),FKOXE(999),RINJC,XLSEC,ANGSEC,ANINJC,XLCHAN,WCHNL,
!      6TEFZX(999),TIMSPC(999),DXNODE(999),TNORM(999),FRCSOL(999),
!      7ALPSPR(999),CRAMCON,HINTF,TSHLMX,XFRMX(999),XFROX(999),XFRTX(999),
!      8XMLMX(999),XMLOX(999),XMLTX(999),XTOTX(999),TIMEO,TMAX,EDOWN(999),
!      9HCP(999)
!       DATA XMEG /1.D06/ 
! C.....WRITE OUT DATA RELEVANT TO THE JET BREAKUP CALCULATION...
!       CALL CONWAT(TSAT,KL,PL,CL,UL,HLV,EWL,EWV,CWV,SIGMA,PDRYWL)
!       CALL CONH2O(TSAT,PDRYWL,CV,UV,KV,PV)
!       EINJP=EINJ/XMEG
!       EINJOP=EINJO/XMEG
!       WRITE(4,10) TIME,HFALL,DJET,DFALL,UJET,UFALL,WEBER,FROUDE,XPSAITO,
!      1XPEPSTN,XLPENT,XLPENA,HWATP,FRAG,XMBEDT,XMCORT,TSINJO,TSINJ,
!      2EINJOP,EINJP,PV,PL,XDOTJET
!    10 FORMAT(23(1X,E12.5))
!       RETURN
!       END
! C...................................................................... 
! C.....SUBROUTINE INCEPT CHECKS MELT CONSTITUENT INVENTORY AND MELT-
! C.....BASEMAT INTERFACIAL CONDITIONS FOR INCEPTION OF CRUSTING, 
! C.....ABLATION, OR SIMULTANEOUS CRUSTING AND ABLATION.    
! C...................................................................... 
!       SUBROUTINE INCEPT
!       IMPLICIT DOUBLE PRECISION(A-H,O-Z)
!       DIMENSION HSEND(28)
!       COMMON/CATCHR/A(999),B(999),C(999),D(999),P(999),Q(999),
!      1RECON(999),DELVEL(999),DSRDT(999),DELHTS(999),EMAX(999,999),
!      2DBLKEN(999),DELHIT(16,999),SOURCE(16,999),SRCTOT(999),
!      3HCROLD(16,999),DCDOT(999),HCRUST(16,999),DFILM(16,999),
!      4DFMOLD(16,999),DENOLD(999),SIGOX(999),SIGCON(999),BET(999),
!      5TFZX(999),TFZC(999),TKX(999),TKM(999),THETO(999,999),
!      6THET1(999,999),OMEG0(4,999),OMEG1(4,999),TAO0(999),TAO1(999),
!      7SIG0(999),SIG1(999),TARGB(999),DADOT(999),DADOTG(999),
!      8XLOLD(4,999),VISREX(999),TATMS(999),HTMP(999),DHTMP(999),
!      9HTMOLD(999)
!       COMMON/CATCHI/NUMS(4,999),NUMOLD(4,999),NTRACK(16),NSUMP(999),
!      1NPASSG(999),NCRSTM(999),NCRRT(999),NPASS(999),NBURN,NBURNO     
!       COMMON/PRINTB/ELEVAT(999),ELOLD(999),XDIST(999,999),XBTW(999,999),
!      1TEMP(999,999),ENTHP(999,999),EOLD(999,999),ENBLK(999),EBKOLD(999),
!      2TBULK(999),HITE(16,999),HITOLD(16,999),HTOT(999),HTOLD(999),
!      3HTCFT(999),HTCOEF(999),QFLUXT(999),QFLUXB(999),VEL(999),ELO(999),
!      4VELOLD(999),SRSCOR(16),AREA(999),RAD(999),ARC(999),VOLCN(16),
!      5VOID(999),VGJ(999),ZABLAT(999),ZABOLD(999),DCRUST(999),
!      6DCROLD(999),DABCON(999),DABOLD(999),DFILMT(999),DFOLT(999),
!      7SMFLX(4,999),XLSMF(4,999),TOTVOL,XFACMS(999),XMFLXA,XMCORT,
!      8VCORT,TOTOX,TOTMET,QFLXT,QFLXB,TIME,DTIME,XMCOR(16),VCOR(16),
!      9TCONI,RSAND,HDOWNC,TBOUND,EMISCN,PDRYWL,XDISTO(999),QOXT(999),
!      1XLENSH,XBTWO(999),RCOMP,WDOOR,RSUMP,RSHELL,RPED,TPED,ELSMP,
!      1TENDP(10,999),TFRZSH,TDEBRS,TKDEBR,PDEBR,CPDEBR,ENENDP(10,999),
!      2ENOLDP(10,999),DXVERT,DXSNK,XDSTE(10,999),XBTE(10,999),HXLA(999),
!      3HXLB(999),TSFEB(999),DCRS(999),DCRSLD(999),HCRS(16,999),
!      4HCRSLD(16,999),THETE0(10,999),THETE1(10,999),QSHELL,QSHELE,TSHELI,
!      5SIGOXE(999),FKOXE(999),RINJC,XLSEC,ANGSEC,ANINJC,XLCHAN,WCHNL,
!      6TEFZX(999),TIMSPC(999),DXNODE(999),TNORM(999),FRCSOL(999),
!      7ALPSPR(999),CRAMCON,HINTF,TSHLMX,XFRMX(999),XFROX(999),XFRTX(999),
!      8XMLMX(999),XMLOX(999),XMLTX(999),XTOTX(999),TIMEO,TMAX,EDOWN(999),
!      9HCP(999)
!       COMMON/HCONS/HMETAL(999),HOXIDE(999)  
!       COMMON/PROPI/ NMATC,NMATFI,NMATFF,ICAOH2,ICACO3,IMCCO3,IFH2O,     
!      1IVH2O,ICK2O,IVK2O,INA2O,ITIO2,ISIO2,ICAO,IMGO,IAL2O3,IFEO,IFE2O3, 
!      2IFE3O4,IFE,ICR,INI,IZR,IU,IB4C,IB,ICR2O3,INIO,IUO2,IZRO2,IB2O3,   
!      3NBCINT(999),NODES(999),NUMNOD,IMOX(28),IBAS,ILCS,ILL,NACTIV(999),     
!      4NBFRZM,NBFRZO,NABLFM,NDRNFM,NTYPMT(999,999),NDOOR,NBMADJ,NUMSHV,   
!      5NBSHL(999),NCRSTS(999),NUMSHH,NSKIPE,NACSH,NWAT,NPEND,NBCBOT,
!      6NCRTOP,NBFZOE,NBFZME,NGEOM,NL(999,999),NFRSCT,NLOGSH,NADAB,NINVIS,
!      7NSIMST,NSTEEL,NOVHT,NOVTK,NOVUM,NOVEM,NOVSIG,NPLLOC(999),NBPL,
!      8IXP(999),IYP(999),NVTPE,NSOLTP,NSOLF,NINTF,IFLGA(999),ICTYPE,ICTC,
!      9NPOURS,NSMP,NPED,NDOR,NSHL,NANULS,NSMPCV,NBOIL,NSWALL,NMVER,
!      1NCRTEM,NTHINC,NVELP,NITMAX,NENMAX,NPRINT,NPFREQ,NTIMSPC,NPLFREQ,
!      2NPLTOT,NJET,NJETP,NJETD,NJETND,NODCAP,NVELPW,NITMAXW,NENMXW,
!      3IFLGJ(999),NBEDCQ,ISHELE
!       COMMON/PRINTR/ QFEH2O,QCRH2O,QZRH2O,QFECO2,QCRCO2,QZRCO2,
!      4XFH2OU,XFCAOH,XFMGCA,XFCACO,XZRMRE,XFEMRE,XCRMRE,XZRORE,XFEORE,   
!      5XCRORE,XMH2O,XMCO2,XMCACO,XMMGCA,XMCAOH,TFWL,TFWS,TBWL,TBWS,      
!      6TMCAL,TMCAS,TCAL,TCAS,TFOS,TFOL,TFMS,TFML,XVISC(28),SVISC(28),    
!      7XMOL(28),FMMOL(28),ROM(28),ROMLIQ(28),AEQM(28,2),BEQM(28,2),
!      8CEQM(28,2),ECL,ECS,ECAL,ECAS,EMCAL,EMCAS,EBWL,EBWS,EFWL,EFWS,    
!      9STEF,GRAV,PI,TCS,TCL,CCL,CCS,RMASSL,WPCC,WPM,WPA,WPCS,ROC,RMASSS,   
!      1ANGSHL,RSLAGL,RSLAGS,HNODT,VFAV,VGAV,QXAV,XWTSS(16),  
!      2TSCS(2),TSCL(2),ESCS(2),ESCL(2),CCSS(2),CCSL(2),ROSTLS,ROSTLL,
!      3XFRGAS,HMINC,TST(99),TSTOP(99),AINTP(99),BINTP(99),DRATIO(999),
!      4XBCN(999),XDCN(999),XBLT(15),ADEC(99),BDEC(99),APOUR(16,99),
!      5BPOUR(16,99),XWTC(14),BWIDTH,THCKCV,TMBOIL,TEBOIL,VFINT,ANGFAN,
!      6ALPMAX,THSHL,XFCABL,XNDMIN,DVMX,DAVMX,DEAVMX,DEMX,TDC,QDCU,QDCUO2,
!      7TSINJ,EINJ,DTINJ,TKINJ,ROEV,CPINJ,SURFT,VSINJ,EMINJ,TSINJO,EINJO,
!      8DTINJO,TKINJO,ROEVO,CPINJO,SURFTO,VSINJO,EMINJO,XLEADE,ARSUM,
!      9DBUBOX,UTRISE,TREMSH,DJET,DFALL,WEBER,FROUDE,XPSAITO,XPEPSTN,
!      1FRAG,XMBEDT,XMBED(16),XLPENT,XLPENA,UJET,UFALL,HFALL,ERPV,
!      2TJETT(99),DJETT(99),HWATP,XDOTJET,DVMXW,DAVMXW,DEMXW,DEAVMXW,
!      3QJETW,XSTMJF,TINTSJF,ESAT,DRDOOR,DRANL,EI,QDCBUO2,QDCBU,
!      4EBEDS,EBEDB
!       COMMON/BLKHT/TKMLT,PM,CM,UM,EMISM,SIGMAM,TKNC,PNC,CNC,UNC    
!       COMMON/BASPR/ HBMT(999,999,16),HBMOLD(999,999,16) 
!       COMMON/PROPB/CPBM(999),FKB(999,999),DENB(999,999),DTDEB(999,999),
!      1EMIBM(999),DENCRS(999),ENCRS(999),FKRF(999),DENRF(999),CPRF(999) 
! C.....RUN THROUGH THE MESH AND UPDATE BOUNDARY CONDITIONS....
!       NCHNG=0
!       DO 7750 KN=1,NUMNOD
!       IF(NACTIV(KN).EQ.0.OR.NADAB.EQ.1) GO TO 7750      
!       IF(HTOT(KN).LE.0.D0) GO TO 7750     
!       IF(NGEOM.EQ.2) GO TO 1919
!       IF(KN.GT.NSMP) GO TO 1919
!       IF(NSMPCV.EQ.0) GO TO 1919
!       IF(NBOIL.EQ.0) GO TO 1919
!       IF(NBURNO.EQ.0) GO TO 7750
!  1919 CONTINUE
!       NCHNG=1
!       IF(NBFRZO.EQ.1.AND.NBFRZM.EQ.1) GO TO 7751    
! C.....CHECK MELT CONSTITUENT INVENTORY FOR THE POSSIBILITY OF STARTING  
! C.....TO CRUST EITHER METAL OR OXIDE CRUST.
!       IF(NBCINT(KN).EQ.1) GO TO 7769      
!       IF(NBCINT(KN).EQ.4) GO TO 7769      
!       IF(NBCINT(KN).EQ.5) GO TO 7769      
!       GO TO 7751      
!  7769 CONTINUE
!       HFROX=HOXIDE(KN)/HTOT(KN) 
!       HFRM=HMETAL(KN)/HTOT(KN)  
!       NCRWTC=0
!       IF(NBFRZO.EQ.1) GO TO 1884
!       IF(HFROX.LT.0.5D0) GO TO 1884
!       IF(TBULK(KN).GT.TFOS.AND.TEMP(1,KN).LT.TFOS) NCRWTC=1   
!       IF(NCRWTC.EQ.1) GO TO 7772
!  1884 CONTINUE
!       IF(NBFRZM.EQ.1) GO TO 7751
!       IF(HMETAL(KN).GT.0.D0.AND.TEMP(1,KN).LT.TFMS) NCRWTC=2  
!       IF(NCRWTC.EQ.0) GO TO 7751
!  7772 CONTINUE
! C.....MELT CONSTITUENCY IS SUFFICIENT FOR INCEPTION OF CRUST GROWTH.    
! C.....CHECK THERMAL CONDITIONS. 
!       GO TO(7773,7774),NCRWTC   
!  7773 CONTINUE
!       TFREEZ=TFOS     
!       TFRZL=TFOL      
!       HCOMP=HOXIDE(KN)
!       GO TO 7775      
!  7774 CONTINUE
!       TFREEZ=TFMS     
!       TFRZL=TFML      
!       HCOMP=HMETAL(KN)
!  7775 CONTINUE
!       IF(NBCINT(KN).EQ.5) GO TO 7776      
!       IF(TEMP(1,KN).LT.TFREEZ) GO TO 7777 
!       IF(NBCINT(KN).EQ.4) GO TO 7750      
!       GO TO 7751      
!  7776 CONTINUE
!       ZCOMP=XDISTO(KN)-ZABLAT(KN)
!       IP=2  
!       IF(ZCOMP.LT.XBTWO(KN)) IP=1
!       IF(NTYPMT(IP,KN).GT.3) GO TO 7780   
!       TMLTL=TSCL(NL(IP,KN))     
!       GO TO 7784      
!  7780 CONTINUE
!       IROUT=NTYPMT(IP,KN)-3     
!       GO TO(7782,7783),IROUT    
!  7782 CONTINUE
!       TMLTL=TFML      
!       GO TO 7784      
!  7783 CONTINUE
!       TMLTL=TFOL      
!  7784 CONTINUE
!       CALL ASINEA(DFILM,KN,HSEND,ROMLIQ,WPCC,WPM,WPA,WPCS,ROC,RSLAGL,0) 
!       CALL CONDF(TMLTL,HSEND,FKO,FKM,TKMLT)
!       C1=HTCOEF(KN)+TKMLT/DFILMT(KN)      
!       C2=HTCOEF(KN)*TBULK(KN)+(TKMLT*TEMP(1,KN))/DFILMT(KN)   
!       TINT=C2/C1      
!       IF(TINT.GE.TFREEZ) GO TO 7750
!  7777 CONTINUE
! C.....CRUST GROWTH CAN BEGIN.  FIND THE THERMAL PROPERTIES OF THE
! C.....CRUSTING MATERIAL AND BASEMAT.      
!       NCRSTM(KN)=NCRWTC
!       IF(NTHINC.NE.1) GO TO 8111
!       IF(NBCINT(KN).GT.1) GO TO 7788      
!       NBCINT(KN)=3    
!       GO TO 7750      
!  8111 CONTINUE
!       CALL ASINEA(HITE,KN,HSEND,ROMLIQ,WPCC,WPM,WPA,WPCS,ROC,RSLAGL,NCRS
!      1TM(KN))
!       CALL ETF(EFL,HSEND,TFRZL,DTDE)      
!       CALL ASINEA(HITE,KN,HSEND,ROM,WPCC,WPM,WPA,WPCS,ROC,RSLAGS,NCRSTM(
!      1KN))  
!       CALL ETF(EFS,HSEND,TFREEZ,DTDE)     
!       HOX=EFL-EFS     
!       TEV=TFREEZ-1.D0 
!       CALL ETF(EPS,HSEND,TEV,DTDE)
!       COX=1.D0/DTDE   
!       CALL CONDF(TFREEZ,HSEND,FKO,FKM,TKOX)
!       CALL MASFRA(HITE,ROM,KN,RSLAGS,ROC,DENOX,NCRSTM(KN))    
!       CALL MASFRA(HITE,ROMLIQ,KN,RSLAGL,ROC,DENOXL,NCRSTM(KN))
!       IF(NBCINT(KN).GT.1) GO TO 7788      
!       IF(NTYPMT(1,KN).GT.3) GO TO 7789    
!       TFRZS=TSCS(NL(1,KN))      
!       ESOL=ESCS(NL(1,KN))
!       DTDESL=1.D0/CCSS(NL(1,KN))
!       HABL=ESCL(NL(1,KN))-ESCS(NL(1,KN))  
!       DRATLS=RSLAGL/RMASSS      
!       IF(NL(1,KN).EQ.2) DRATLS=ROSTLL/ROSTLS
!       DENML=ROC*RSLAGL
!       IF(NL(1,KN).EQ.2) DENML=ROSTLL     
!       CPML=CCSL(NL(1,KN))
!       CALL CONDC(TSCL(NL(1,KN)),NTYPMT(1,KN),TKML,NL(1,KN))   
!       CALL CONDC(TEMP(1,KN),NTYPMT(1,KN),TK1,NL(1,KN))
!       CALL TEC(ENTHP(1,KN),EPS,TPS,DTDE1,RMASS1,YCACO3,YMCCO3,YCAOH2,YFH
!      12O,NL(1,KN))    
!       CP1=1.D0/DTDE1  
!       DEN1=ROC
!       IF(NL(1,KN).EQ.2) DEN1=ROSTLS      
!       GO TO 7790      
!  7789 CONTINUE
!       IROUT=NTYPMT(1,KN)-3      
!       GO TO(6333,6533),IROUT    
!  6333 CONTINUE
!       TFRZL=TFML      
!       TFRZS=TFMS      
!       GO TO 6534      
!  6533 CONTINUE
!       TFRZL=TFOL      
!       TFRZS=TFOS      
!  6534 CONTINUE
!       CALL ASINED(1,KN,HSEND,ROMLIQ,WPCC,WPM,WPA,WPCS,ROC,RSLAGL,0)     
!       CALL CONDF(TFRZL,HSEND,FKO,FKM,TKML)
!       CALL ETF(ELIQ,HSEND,TFRZL,DTDE1)    
!       TEV=TFRZL-1.D0  
!       CALL ETF(EPS,HSEND,TEV,DTDE)
!       CPML=1.D0/DTDE  
!       CALL MASFRD(ROMLIQ,1,KN,RSLAGL,ROC,DENML)     
!       CALL ASINED(1,KN,HSEND,ROM,WPCC,WPM,WPA,WPCS,ROC,RSLAGS,0)
!       CALL ETF(ESOL,HSEND,TFRZS,DTDE)     
!       HABL=ELIQ-ESOL  
!       DTDESL=DTDE     
!       CALL MASFRD(ROM,1,KN,RSLAGS,ROC,DENS)
!       DRATLS=DENML/DENS
!       CALL ASINED(1,KN,HSEND,ROM,WPCC,WPM,WPA,WPCS,ROC,RSLAGS,0)
!       CALL CONDF(TEMP(1,KN),HSEND,FKO,FKM,TK1)      
!       CALL ETF(EPASS,HSEND,TEMP(1,KN),DTDE1)
!       CP1=1.D0/DTDE1  
!       CALL MASFRD(ROM,1,KN,RSLAGS,ROC,DEN1)
!  7790 CONTINUE
!       IF(NTYPMT(2,KN).GT.3) GO TO 7791    
!       CALL CONDC(TEMP(2,KN),NTYPMT(2,KN),TK2,NL(2,KN))
!       GO TO 7792      
!  7791 CONTINUE
!       CALL ASINED(2,KN,HSEND,ROM,WPCC,WPM,WPA,WPCS,ROC,RSLAGS,0)
!       CALL CONDF(TEMP(2,KN),HSEND,FKO,FKM,TK2)      
!  7792 CONTINUE
!       TKE=(XDIST(1,KN)*TK1*TK2)/(TK2*XBTW(1,KN)+TK1*(XDIST(1,KN)-XBTW(1,
!      1KN))) 
! C.....CALCULATE INITIAL CRUST DEPTH WHEN CRUST GROWTH STARTS FROM THE   
! C.....CONDITION NBC=1 (NO CRUSTING, NO ABLATION).   
!       ALPHA=(TKE*DENOX*HOX)/(XDIST(1,KN)*CP1*DEN1*XBTW(1,KN)) 
!       BETA=TKOX*(TFREEZ-TEMP(1,KN))
!       GAMMA=HTCOEF(KN)*(TBULK(KN)-TEMP(1,KN))+(TKOX*DENOX*HOX)/(CP1*DEN1
!      1*XBTW(1,KN))    
!       Z1=(GAMMA/ALPHA)*(GAMMA/ALPHA)+(4.D0*BETA)/ALPHA
!       DCRUST(KN)=-0.5D0*(GAMMA/ALPHA)+0.5D0*SQRT(Z1)
! C.....CHECK TO DETERMINE IF THE INITIAL CRUST MASS EXCEEDS THAT
! C.....AVAILABLE IN THE MELT LAYER.  IF SO, MAKE APPROPRIATE ADJUSTMENT. 
!       HAVAIL=(DENOXL*HCOMP)/DENOX
!       IF(DCRUST(KN).LE.HAVAIL) GO TO 7793 
!       DCRUST(KN)=HAVAIL
!  7793 CONTINUE
! C.....DEFICIT THE BULK MELT THE AMOUNT OF THE INITIAL CRUST MASS, AND   
! C.....ADJUST BASEMAT ELEVATION. 
!       IF(NCRSTM(KN).EQ.2) GO TO 7794     
!       KINL=1
!       KINH=7
!       KLOW=8
!       KHIGH=16
!       GO TO 7795      
!  7794 CONTINUE
!       KINL=8
!       KINH=16
!       KLOW=1
!       KHIGH=7
!  7795 CONTINUE
!       DO 7796 KTP=KLOW,KHIGH    
!       CALL INDEX(KTP,KJ)
!       HCRUST(KTP,KN)=(HITE(KTP,KN)*DENOX*DCRUST(KN)*ROMLIQ(KJ))/(HCOMP*D
!      1ENOXL*ROM(KJ))  
!       HITE(KTP,KN)=HITE(KTP,KN)*(1.D0-(DCRUST(KN)*DENOX)/(DENOXL*HCOMP))
!       HITE(KTP,KN)=DMAX1(HITE(KTP,KN),0.D0)
!  7796 CONTINUE
!       DO 6371 KTP=KINL,KINH     
!       HCRUST(KTP,KN)=0.D0
!  6371 CONTINUE
!       HTOT(KN)=0.D0   
!       HMETAL(KN)=0.D0 
!       HOXIDE(KN)=0.D0 
!       DO 7797 KTP=1,16
!       HTOT(KN)=HTOT(KN)+HITE(KTP,KN)      
!       IF(KTP.LE.7) HMETAL(KN)=HMETAL(KN)+HITE(KTP,KN)
!       IF(KTP.GE.8) HOXIDE(KN)=HOXIDE(KN)+HITE(KTP,KN)
!  7797 CONTINUE
!       ELEVAT(KN)=ELEVAT(KN)+DCRUST(KN)    
! C.....CALCULATE NEW CRUST/BASEMAT INTERFACIAL TEMPERATURE.  IF IT
! C.....EXCEEDS BASEMAT MELTING TEMPERATURE, START ABLATION CALCULATION.  
!       IF(NPASS(KN).EQ.1) GO TO 7750
!       ECOMP=ENTHP(1,KN)+(DENOX*HOX*DCRUST(KN))/(DEN1*XBTW(1,KN))
!       IF(ECOMP.GT.ESOL) GO TO 3621
!       NBCINT(KN)=2    
!       ENTHP(1,KN)=ECOMP
!       IF(NTYPMT(1,KN).GT.3) GO TO 7798    
!       CALL TEC(ENTHP(1,KN),EMAX(1,KN),TEMP(1,KN),DTDE,RMASS,YCACO3,YMCCO
!      13,YCAOH2,YFH2O,NL(1,KN))  
!       DTDEB(1,KN)=DTDE
!       GO TO 7750      
!  7798 CONTINUE
!       CALL ASINED(1,KN,HSEND,ROM,WPCC,WPM,WPA,WPCS,ROC,RSLAGS,0)
!       CALL ETF(ENTHP(1,KN),HSEND,TEMP(1,KN),DTDE)   
!       DTDEB(1,KN)=DTDE
!       GO TO 7750      
!  3621 CONTINUE
! C.....CRUSTING WITH ABLATION STARTS.  INITIALIZE ABLATION CALCULATION.  
!       NBCINT(KN)=6    
!       IF(NDRNFM.EQ.2) NBCINT(KN)=8
!       IF(NTHINC.EQ.1.AND.NBCINT(KN).EQ.6) NBCINT(KN)=7
!       IF(NTHINC.EQ.1.AND.NBCINT(KN).EQ.8) NBCINT(KN)=9
!       DFS=(XBTW(1,KN)*(ECOMP-ESOL))/HABL  
!       DFSMAX=XBTW(1,KN)*(1.D0-XFCABL)     
!       DFS=DMIN1(DFS,DFSMAX)     
!       DFM=DFS/DRATLS  
!       IF(NBCINT(KN).EQ.8.OR.NBCINT(KN).EQ.9) GO TO 7799
! C.....POROUS CRUST ABLATION CASE TREATED HERE.  ADD INITIALLY ABLATED   
! C.....BASEMAT MATERIAL TO BULK MELT.      
!       HTOT(KN)=HTOT(KN)+DFM     
!       IF(NTYPMT(1,KN).GT.3) GO TO 7900    
!       IF(NL(1,KN).EQ.2) GO TO 7900
!       HITE(16,KN)=HITE(16,KN)+DFM
!       HOXIDE(KN)=HOXIDE(KN)+DFM 
!       GO TO 7901      
!  7900 CONTINUE
!       DO 7902 KTP=1,16
!       CALL INDEX(KTP,KJ)
!       DENR=ROM(KJ)/ROMLIQ(KJ)   
!       IF(KTP.EQ.16) DENR=RMASSS/RSLAGL    
!       DINCR=(DFS*HBMT(1,KN,KTP))/XBTW(1,KN)
!       IF(NL(1,KN).EQ.2) DINCR=DFS*XWTSS(KTP)
!       HITE(KTP,KN)=HITE(KTP,KN)+DINCR*DENR
!       HBMT(1,KN,KTP)=HBMT(1,KN,KTP)-DINCR 
!       HBMT(1,KN,KTP)=DMAX1(HBMT(1,KN,KTP),0.D0)     
!  7902 CONTINUE
!       HMETAL(KN)=0.D0 
!       HOXIDE(KN)=0.D0 
!       DO 6077 KTP=1,16
!       IF(KTP.LE.7) HMETAL(KN)=HMETAL(KN)+HITE(KTP,KN)
!       IF(KTP.GE.8) HOXIDE(KN)=HOXIDE(KN)+HITE(KTP,KN)
!  6077 CONTINUE
!       GO TO 7901      
!  7799 CONTINUE
! C.....NON-POROUS CRUST CASE TREATED HERE.  INITIALIZE MOLTEN FILM
! C.....INVENTORY.      
!       DFILMT(KN)=DFM  
!       IF(NTYPMT(1,KN).GT.3) GO TO 8010    
!       IF(NL(1,KN).EQ.2) GO TO 8010
!       DO 8011 KTP=1,16
!       DFILM(KTP,KN)=0.D0
!       IF(KTP.LT.16) GO TO 8011  
!       DFILM(KTP,KN)=DFM
!  8011 CONTINUE
!       GO TO 7901      
!  8010 CONTINUE
!       DO 8012 KTP=1,16
!       CALL INDEX(KTP,KJ)
!       DENR=ROM(KJ)/ROMLIQ(KJ)   
!       IF(KTP.EQ.16) DENR=RSLAGS/RSLAGL    
!       DINCR=(DFS*HBMT(1,KN,KTP))/XBTW(1,KN)
!       IF(NL(1,KN).EQ.2) DINCR=DFS*XWTSS(KTP)
!       DFILM(KTP,KN)=DENR*DINCR  
!       IF(NL(1,KN).EQ.2) GO TO 8012
!       HBMT(1,KN,KTP)=HBMT(1,KN,KTP)-DINCR 
!       HBMT(1,KN,KTP)=DMAX1(HBMT(1,KN,KTP),0.D0)     
!  8012 CONTINUE
!  7901 CONTINUE
!       DTDEB(1,KN)=DTDESL
!       TEMP(1,KN)=TFRZS
!       ENTHP(1,KN)=ESOL
!       EMAX(1,KN)=ENTHP(1,KN)    
!       ZABLAT(KN)=XDIST(1,KN)-DFS
!       ZABOLD(KN)=ZABLAT(KN)
!       XDISTO(KN)=XDIST(1,KN)    
!       XBTWO(KN)=XBTW(1,KN)      
!       ELEVAT(KN)=ELEVAT(KN)-DFS 
!       IF(NBCINT(KN).EQ.8.OR.NBCINT(KN).EQ.9) ELEVAT(KN)=ELEVAT(KN)+DFM  
!       IF(NTYPMT(1,KN).LE.3) DABCON(KN)=DABOLD(KN)+DFS
!       ELOLD(KN)=ELEVAT(KN)
!       DABOLD(KN)=DABCON(KN)
!       GO TO 7750      
!  7788 CONTINUE
! C.....INITIALIZE CRUST GROWTH CALCULATION WHEN CRUST GROWTH STARTS OVER 
! C.....ABLATING BASEMAT.  FIRST FIND FILM & BASEMAT THERMAL PROPERTIES.  
!       ZCOMP=XDISTO(KN)-ZABLAT(KN)
!       IF(ZCOMP.LT.XBTWO(KN)) GO TO 3778   
!       ZLENGT=ZABLAT(KN)+XBTW(2,KN)
!       IP=2  
!       GO TO 3779      
!  3778 CONTINUE
!       ZLENGT=XBTWO(KN)-(XDISTO(KN)-ZABLAT(KN))      
!       IP=1  
!  3779 CONTINUE
! C.....SPECIFY ABLATION (MELTING) TEMPERATURE & MOLTEN FILM PROPERTIES.  
!       IF(NTYPMT(IP,KN).GT.3) GO TO 3780   
!       TFRZBM=TSCS(NL(IP,KN))    
!       ESOL=ESCS(NL(IP,KN))      
!       HABL=ESCL(NL(IP,KN))-ESCS(NL(IP,KN))
!       DENS=ROC
!       IF(NL(IP,KN).EQ.2) DENS=ROSTLS     
!       DRATLS=RSLAGL/RMASSS      
!       IF(NL(IP,KN).EQ.2) DRATLS=ROSTLL/ROSTLS      
!       IF(NBCINT(KN).EQ.5) GO TO 3990      
!       DENF=ROC*RSLAGL 
!       IF(NL(IP,KN).EQ.2) DENF=ROSTLL     
!       CPF=CCSL(NL(IP,KN))
!       CALL CONDC(TSCL(NL(IP,KN)),NTYPMT(IP,KN),TKF,NL(IP,KN)) 
!       GO TO 3781      
!  3780 CONTINUE
!       IF(NTYPMT(IP,KN).EQ.5) GO TO 3782   
!       TFRZBM=TFMS     
!       TFRZBL=TFML     
!       GO TO 3783      
!  3782 CONTINUE
!       TFRZBM=TFOS     
!       TFRZBL=TFOL     
!  3783 CONTINUE
!       CALL MASFRD(ROMLIQ,IP,KN,RSLAGL,ROC,DENL)     
!       CALL MASFRD(ROM,IP,KN,RSLAGS,ROC,DENS)
!       DRATLS=DENL/DENS
!       CALL ASINED(IP,KN,HSEND,ROM,WPCC,WPM,WPA,WPCS,ROC,RSLAGS,0)
!       CALL ETF(ESOL,HSEND,TFRZBM,DTDE)    
!       CALL ASINED(IP,KN,HSEND,ROMLIQ,WPCC,WPM,WPA,WPCS,ROC,RSLAGL,0)    
!       CALL ETF(ELIQ,HSEND,TFRZBL,DTDEF)   
!       HABL=ELIQ-ESOL  
!       IF(NBCINT(KN).EQ.5) GO TO 3990      
!       DENF=DENL
!       TEV=TFRZBL+1.D0 
!       CALL ETF(EPS,HSEND,TEV,DTDEO)
!       CPF=1.D0/DTDEO  
!       CALL CONDF(TFRZBL,HSEND,FKO,FKM,TKF)
!       GO TO 3781      
!  3990 CONTINUE
!       CALL MASFRA(DFILM,ROMLIQ,KN,RSLAGL,ROC,DENF,0)
!       CALL ASINEA(DFILM,KN,HSEND,ROMLIQ,WPCC,WPM,WPA,WPCS,ROC,RSLAGL,0) 
!       CALL ETF(EPASS,HSEND,TFRZBL,DTDE)   
!       CPF=1.D0/DTDE   
!       CALL CONDF(TFRZBL,HSEND,FKO,FKM,TKF)
!  3781 CONTINUE
! C.....CALCULATE INITIAL CRUST DEPTH FOR CASE IN WHICH STATIONARY MOLTEN 
! C.....FILM PRE-EXISTS ON THE BASEMAT.     
!       IF(NBCINT(KN).EQ.4) GO TO 3791      
!       IF(NDRNFM.EQ.1) GO TO 3792
!       NBCINT(KN)=8    
!       IF(NTHINC.EQ.1) NBCINT(KN)=9
!       GO TO 3793      
!  3792 CONTINUE
!       NBCINT(KN)=6    
!       IF(NTHINC.EQ.1) NBCINT(KN)=7
!  3793 CONTINUE
!       IF(NTHINC.EQ.1) GO TO 7677
!       ALPHA=(2.D0*TKF*DENOX*HOX)/(CPF*DENF*DFILMT(KN)*DFILMT(KN))
!       CON1=HTCOEF(KN)*TBULK(KN)+(TKF*TFRZBM)/DFILMT(KN)
!       CON2=HTCOEF(KN)+TKF/DFILMT(KN)      
!       TINT=CON1/CON2  
!       BETA=(2.D0*DENOX*HOX*TKOX)/(CPF*DENF*DFILMT(KN))+(TKF*(TINT-TFRZBM
!      1))/DFILMT(KN)   
!       GAMMA=TKOX*(TFREEZ-TINT)  
!       CON3=(BETA/ALPHA)*(BETA/ALPHA)+(4.D0*GAMMA)/ALPHA
!       DCRUST(KN)=-(0.5D0*BETA)/ALPHA+0.5D0*SQRT(CON3)
! C.....CHECK TO SEE IF THIS AMOUNT OF CRUST GROWTH EXCEEDS AVAILABLE IN  
! C.....MELT LAYER.  IF SO, MAKE APPROPRIATE ADJUSTMENT.
!       HCOMPS=(HCOMP*DENOXL)/DENOX
!       IF(DCRUST(KN).LE.HCOMPS) GO TO 3794 
!       DCRUST(KN)=HCOMPS
!  3794 CONTINUE
! C.....INITIALIZE CRUST MASS INVENTORY & DEFICIT BULK MELT THE AMOUNT OF 
! C.....CRUSTED MATERIAL.
!       IF(NCRSTM(KN).EQ.2) GO TO 3795     
!       KINL=1
!       KINH=7
!       KLOW=8
!       KHIGH=16
!       GO TO 3796      
!  3795 CONTINUE
!       KINL=8
!       KINH=16
!       KLOW=1
!       KHIGH=7
!  3796 CONTINUE
!       DO 3797 KTP=KLOW,KHIGH    
!       CALL INDEX(KTP,KJ)
!       HCRUST(KTP,KN)=(HITE(KTP,KN)*DENOX*DCRUST(KN)*ROMLIQ(KJ))/(HCOMP*D
!      1ENOXL*ROM(KJ))  
!       HITE(KTP,KN)=HITE(KTP,KN)*(1.D0-(DCRUST(KN)*DENOX)/(DENOXL*HCOMP))
!       HITE(KTP,KN)=DMAX1(HITE(KTP,KN),0.D0)
!  3797 CONTINUE
!       DO 3798 KTP=KINL,KINH     
!       HCRUST(KTP,KN)=0.D0
!  3798 CONTINUE
!       HMETAL(KN)=0.D0 
!       HOXIDE(KN)=0.D0 
!       HTOT(KN)=0.D0   
!       DO 7691 KTP=1,16
!       IF(KTP.LE.7) HMETAL(KN)=HMETAL(KN)+HITE(KTP,KN)
!       IF(KTP.GE.8) HOXIDE(KN)=HOXIDE(KN)+HITE(KTP,KN)
!       HTOT(KN)=HTOT(KN)+HITE(KTP,KN)      
!  7691 CONTINUE
!  7677 CONTINUE
! C.....ADJUST ELEVATION TO ACCOUNT FOR CRUSTED MATERIAL.
!       IF(NBCINT(KN).EQ.8.OR.NBCINT(KN).EQ.9) GO TO 3830
!       ELEVAT(KN)=ELEVAT(KN)+DCRUST(KN)-DFILMT(KN)   
!       GO TO 3831      
!  3830 CONTINUE
!       ELEVAT(KN)=ELEVAT(KN)+DCRUST(KN)    
!  3831 CONTINUE
! C.....DRAIN THE FILM INTO BULK MELT IF NEW CRUST IS POROUS.   
!       IF(NBCINT(KN).EQ.8.OR.NBCINT(KN).EQ.9) GO TO 7750
!       DFILMT(KN)=0.D0 
!       HTOT(KN)=0.D0   
!       HMETAL(KN)=0.D0 
!       HOXIDE(KN)=0.D0 
!       DO 3832 KTP=1,16
!       IF(KTP.LE.7) HMETAL(KN)=HMETAL(KN)+DFILM(KTP,KN)
!       IF(KTP.GE.8) HOXIDE(KN)=HOXIDE(KN)+DFILM(KTP,KN)
!       HITE(KTP,KN)=HITE(KTP,KN)+DFILM(KTP,KN)
!       HTOT(KN)=HTOT(KN)+HITE(KTP,KN)      
!       DFILM(KTP,KN)=0.D0
!  3832 CONTINUE
!       GO TO 7750      
!  3791 CONTINUE
! C.....CALCULATE INITIAL CRUST DEPTH FOR CASES IN WHICH MOLTEN FILM      
! C.....WAS PREVIOUSLY CONTINUOUSLY MIXED OFF SURFACE.  FIRST SET NEW     
! C.....BOUNDARY CONDITION ACCORDING TO WHETHER OR NOT CRUST IS POROUS.   
!       IF(NDRNFM.EQ.1) GO TO 3833
!       NBCINT(KN)=8    
!       IF(NTHINC.EQ.1) NBCINT(KN)=9
!       GO TO 3834      
!  3833 CONTINUE
!       NBCINT(KN)=6    
!       IF(NTHINC.EQ.1) NBCINT(KN)=7
!  3834 CONTINUE
!       IF(NTHINC.EQ.1) GO TO 3417
! C.....CALCULATE CRUST DEPTH BASED ON CONVECTIVE EXCHANGE ARGUMENT.      
!       DFS=DTIME*ABS(DADOTG(KN)) 
!       DCRUST(KN)=(DFS*DENS*CPF*(TFREEZ-TFRZBM))/(DENOX*HOX)   
! C.....CHECK TO SEE IF CRUST GROWTH EXCEEDS THAT AVAILABLE IN MELT LAYER.
!       HCOMPS=(HCOMP*DENOXL)/DENOX
!       IF(DCRUST(KN).LE.HCOMPS) GO TO 3835 
!       DCRUST(KN)=HCOMPS
!  3835 CONTINUE
! C.....INITIALIZE CRUST MASS INVENTORY & DEFICIT BULK MELT INVENTORY.    
!       IF(NCRSTM(KN).EQ.2) GO TO 3836     
!       KINL=1
!       KINH=7
!       KLOW=8
!       KHIGH=16
!       GO TO 3837      
!  3836 CONTINUE
!       KINL=8
!       KINH=16
!       KLOW=1
!       KHIGH=7
!  3837 CONTINUE
!       DO 3838 KTP=KLOW,KHIGH    
!       CALL INDEX(KTP,KJ)
!       HCRUST(KTP,KN)=(HITE(KTP,KN)*DENOX*DCRUST(KN)*ROMLIQ(KJ))/(HCOMP*D
!      1ENOXL*ROM(KJ))  
!       HITE(KTP,KN)=HITE(KTP,KN)*(1.D0-(DCRUST(KN)*DENOX)/(DENOXL*HCOMP))
!       HITE(KTP,KN)=DMAX1(HITE(KTP,KN),0.D0)
!  3838 CONTINUE
!       DO 3839 KTP=KINL,KINH     
!       HCRUST(KTP,KN)=0.D0
!  3839 CONTINUE
!       HTOT(KN)=0.D0   
!       HMETAL(KN)=0.D0 
!       HOXIDE(KN)=0.D0 
!       DO 3799 KTP=1,16
!       HTOT(KN)=HTOT(KN)+HITE(KTP,KN)      
!       IF(KTP.LE.7) HMETAL(KN)=HMETAL(KN)+HITE(KTP,KN)
!       IF(KTP.GE.8) HOXIDE(KN)=HOXIDE(KN)+HITE(KTP,KN)
!  3799 CONTINUE
!       IF(NBCINT(KN).EQ.8.OR.NBCINT(KN).EQ.9) GO TO 3417
!       ELEVAT(KN)=ELEVAT(KN)+DCRUST(KN)    
!       GO TO 7750      
!  3417 CONTINUE
! C.....INITIALIZE MOLTEN FILM DEPTH & INVENTORY FOR CASE OF NON-POROUS   
! C.....CRUST GROWTH.   
!       IF(NTHINC.NE.1) GO TO 1773
!       DFS=DTIME*ABS(DADOTG(KN)) 
!       DFILMT(KN)=DFS/DRATLS     
!       GO TO 1774      
!  1773 CONTINUE
!       ALPHA=TKOX/DCRUST(KN)     
!       GAMMA=(DENOX*COX*DCRUST(KN)*TKF*(TFREEZ-TFRZBM))/(2.D0*DENS*DRATLS
!      1*HABL)
!       CON5=(TKF/ALPHA)*(TKF/ALPHA)+(4.D0*GAMMA)/ALPHA
!       DFILMT(KN)=-0.5D0*(TKF/ALPHA)+0.5D0*SQRT(CON5)
!       DFS=DFILMT(KN)*DRATLS     
!  1774 CONTINUE
!       IF(NTYPMT(IP,KN).GT.3) GO TO 3418   
!       IF(NL(IP,KN).EQ.2) GO TO 3418      
!       DO 3419 KTP=1,16
!       DFILM(KTP,KN)=0.D0
!       IF(KTP.LT.16) GO TO 3419  
!       DFILM(KTP,KN)=DFILMT(KN)  
!  3419 CONTINUE
!       GO TO 3421      
!  3418 CONTINUE
!       DO 3420 KTP=1,16
!       CALL INDEX(KTP,KJ)
!       DENR=ROM(KJ)/ROMLIQ(KJ)   
!       IF(KTP.EQ.16) DENR=RSLAGS/RSLAGL    
!       DINCR=(DFS*HBMT(IP,KN,KTP))/ZLENGT  
!       IF(NL(IP,KN).EQ.2) DINCR=XWTSS(KTP)*DFS      
!       DFILM(KTP,KN)=DENR*DINCR  
!       IF(NL(IP,KN).EQ.2) GO TO 3420      
!       HBMT(IP,KN,KTP)=HBMT(IP,KN,KTP)-DINCR
!       HBMT(IP,KN,KTP)=DMAX1(HBMT(IP,KN,KTP),0.D0)   
!  3420 CONTINUE
!  3421 CONTINUE
!       ZABLAT(KN)=ZABLAT(KN)-DFS 
!       ZABOLD(KN)=ZABLAT(KN)
!       ELEVAT(KN)=ELEVAT(KN)+DCRUST(KN)-DFS+DFILMT(KN)
!       IF(NTYPMT(1,KN).LE.3) DABCON(KN)=DABOLD(KN)+DFS
!       ELOLD(KN)=ELEVAT(KN)
!       DABOLD(KN)=DABCON(KN)
!       GO TO 7750      
! C.....CHECK THERMAL CONDITIONS AT MELT (OR CRUST)/BASEMAT INTERFACE TO  
! C.....DETERMINE IF ABLATION CAN ENSUE AT THIS INTERFACE.      
!  7751 CONTINUE
!       IF(NPASS(KN).EQ.1.AND.NBCINT(KN).EQ.2) GO TO 7750      
!       IF(NPASS(KN).EQ.1.AND.NBCINT(KN).EQ.3) GO TO 7750
!       IF(NBCINT(KN).GE.4) GO TO 7750      
!       IF(NTYPMT(1,KN).GT.3) GO TO 7752    
!       TFRZCN=TSCS(NL(1,KN))     
!       IF(TEMP(1,KN).LE.TFRZCN) GO TO 7750 
!       ESOL=ESCS(NL(1,KN))
!       HABL=ESCL(NL(1,KN))-ESCS(NL(1,KN))  
!       DTDES=1.D0/CCSS(NL(1,KN)) 
!       DRAT=RMASSS/RSLAGL
!       IF(NL(1,KN).EQ.2) DRAT=ROSTLS/ROSTLL
!       GO TO 7753      
!  7752 CONTINUE
!       IF(NTYPMT(1,KN).EQ.5) GO TO 7754    
!       TFRZL=TFML      
!       TFRZCN=TFMS     
!       GO TO 7755      
!  7754 CONTINUE
!       TFRZL=TFOL      
!       TFRZCN=TFOS     
!  7755 CONTINUE
!       IF(TEMP(1,KN).LE.TFRZCN) GO TO 7750 
!       CALL ASINED(1,KN,HSEND,ROMLIQ,WPCC,WPM,WPA,WPCS,ROC,RSLAGL,0)     
!       CALL ETF(EFL,HSEND,TFRZL,DTDE)      
!       CALL ASINED(1,KN,HSEND,ROM,WPCC,WPM,WPA,WPCS,ROC,RSLAGS,0)
!       CALL ETF(ESOL,HSEND,TFRZCN,DTDES)   
!       HABL=EFL-ESOL   
!       CALL MASFRD(ROM,1,KN,RSLAGS,ROC,DENS)
!       CALL MASFRD(ROMLIQ,1,KN,RSLAGL,ROC,DENL)      
!       DRAT=DENS/DENL  
!  7753 CONTINUE
! C.....ALGORITHM REACHES HERE, BASEMAT ABLATION STARTS.  IF INITIALLY    
! C.....NBC=1 SET NBC=4 OR 5 DEPENDING ON THE SETTING OF NABLFM.  IF      
! C.....INITIALLY NBC=2 OR 3 SET NBC=6 OR 8 DEPENDING UPON THE SETTING OF 
! C.....NDRNFM.
!       IF(NBCINT(KN).GT.1) GO TO 6744      
!       IF(NABLFM.EQ.1) GO TO 7756
!       NBCINT(KN)=4    
!       GO TO 7757      
!  7756 CONTINUE
!       IF(HTOT(KN).LE.0.D0) GO TO 7750     
!       NBCINT(KN)=5    
!       GO TO 7757      
!  6744 CONTINUE
!       IF(NDRNFM.EQ.1) GO TO 6746
!       NBCINT(KN)=8    
!       IF(NTHINC.EQ.1) NBCINT(KN)=9
!       GO TO 7757      
!  6746 CONTINUE
!       NBCINT(KN)=6    
!       IF(NTHINC.EQ.1) NBCINT(KN)=7
!  7757 CONTINUE
!       DFS=(XBTW(1,KN)*(ENTHP(1,KN)-ESOL))/HABL      
!       DFSMAX=XBTW(1,KN)*(1.D0-XFCABL)     
!       DFS=DMIN1(DFS,DFSMAX)     
!       DFM=DFS*DRAT    
!       IF(NBCINT(KN).EQ.4) GO TO 7758      
!       IF(NBCINT(KN).EQ.6.OR.NBCINT(KN).EQ.7) GO TO 7758
!       GO TO 7759      
!  7758 CONTINUE
! C.....ADD INITIALLY ABLATED BASEMAT MATERIAL TO BULK MELT.    
!       IF(HTOT(KN).GT.0.D0) GO TO 8818     
!       TBULK(KN)=TFRZCN
!       ENBLK(KN)=ESOL  
!  8818 CONTINUE
!       HTOT(KN)=HTOT(KN)+DFM     
!       IF(NTYPMT(1,KN).GT.3) GO TO 7760    
!       IF(NL(1,KN).EQ.2) GO TO 7760
!       HOXIDE(KN)=HOXIDE(KN)+DFM 
!       HITE(16,KN)=HITE(16,KN)+DFM
!       GO TO 7762      
!  7760 CONTINUE
!       HMETAL(KN)=0.D0 
!       HOXIDE(KN)=0.D0 
!       DO 7763 KTP=1,16
!       CALL INDEX(KTP,KJ)
!       DENR=ROM(KJ)/ROMLIQ(KJ)   
!       IF(KTP.EQ.16) DENR=RSLAGS/RSLAGL    
!       DINCR=(DFS*HBMT(1,KN,KTP))/XBTW(1,KN)
!       IF(NL(1,KN).EQ.2) DINCR=XWTSS(KTP)*DFS
!       HITE(KTP,KN)=HITE(KTP,KN)+DINCR*DENR
!       IF(KTP.LE.7) HMETAL(KN)=HMETAL(KN)+HITE(KTP,KN)
!       IF(KTP.GE.8) HOXIDE(KN)=HOXIDE(KN)+HITE(KTP,KN)
!       IF(NL(1,KN).EQ.2) GO TO 7763
!       HBMT(1,KN,KTP)=HBMT(1,KN,KTP)-DINCR 
!       HBMT(1,KN,KTP)=DMAX1(HBMT(1,KN,KTP),0.D0)     
!  7763 CONTINUE
!       GO TO 7762      
!  7759 CONTINUE
! C.....NBC=5 OR 8 CASES TREATED HERE.  PLACE INITALLY ABLATED MATERIAL   
! C.....INTO MOLTEN FILM.
!       DFILMT(KN)=DFM  
!       IF(NTYPMT(1,KN).GT.3) GO TO 7764    
!       IF(NL(1,KN).EQ.2) GO TO 7764
!       DO 7765 KTP=1,16
!       DFILM(KTP,KN)=0.D0
!       IF(KTP.LT.16) GO TO 7765  
!       DFILM(KTP,KN)=DFILMT(KN)  
!  7765 CONTINUE
!       GO TO 7762      
!  7764 CONTINUE
!       DO 7766 KTP=1,16
!       CALL INDEX(KTP,KJ)
!       DENR=ROM(KJ)/ROMLIQ(KJ)   
!       IF(KTP.EQ.16) DENR=RSLAGS/RSLAGL    
!       DINCR=(DFS*HBMT(1,KN,KTP))/XBTW(1,KN)
!       IF(NL(1,KN).EQ.2) DINCR=XWTSS(KTP)*DFS
!       DFILM(KTP,KN)=DENR*DINCR  
!       IF(NL(1,KN).EQ.2) GO TO 7766
!       HBMT(1,KN,KTP)=HBMT(1,KN,KTP)-DINCR 
!  7766 CONTINUE
!  7762 CONTINUE
! C.....FOR ABLATION CASES, SET RELEVANT INFORMATION FOR START OF ABLATION
! C.....CALCULATION.    
!       TEMP(1,KN)=TFRZCN
!       ENTHP(1,KN)=ESOL
!       DTDEB(1,KN)=DTDES
!       IF(NTYPMT(1,KN).LE.3.AND.NL(1,KN).EQ.1) EMAX(1,KN)=ENTHP(1,KN)    
!       ZABLAT(KN)=XDIST(1,KN)-DFS
!       ZABOLD(KN)=ZABLAT(KN)
!       XDISTO(KN)=XDIST(1,KN)    
!       XBTWO(KN)=XBTW(1,KN)      
!       IF(NBCINT(KN).EQ.4.OR.NBCINT(KN).EQ.6.OR.NBCINT(KN).EQ.7) ELEVAT(K
!      1N)=ELEVAT(KN)-DFS
!       IF(NBCINT(KN).EQ.5.OR.NBCINT(KN).EQ.8.OR.NBCINT(KN).EQ.9) ELEVAT(K
!      1N)=ELEVAT(KN)-DFS+DFM     
!       IF(NTYPMT(1,KN).LE.3) DABCON(KN)=DABOLD(KN)+DFS
!       ELOLD(KN)=ELEVAT(KN)
!       DABOLD(KN)=DABCON(KN)
!  7750 CONTINUE
! C.....IF NEEDED, RECOMPUTE BULK MELT GLOBAL INVENTORIES WHEN CRUSTING OR 
! C.....ABLATION WITH DRAINAGE TO MELT HAS BEEN INITIATED AT THIS TIMESTEP.
!       IF(NCHNG.EQ.0) GO TO 88
!       TOTMET=0.D0     
!       TOTOX=0.D0      
!       TOTVOL=0.D0     
!       DO 3447 KT=1,16 
!       VOLCN(KT)=0.D0  
!       DO 3449 KN=1,NUMNOD
!       VOLCN(KT)=VOLCN(KT)+HITE(KT,KN)*AREA(KN)*FLOAT(NDOOR)   
!  3449 CONTINUE
!       TOTVOL=TOTVOL+VOLCN(KT)   
!       IF(KT.LE.7) TOTMET=TOTMET+VOLCN(KT) 
!       IF(KT.GE.8) TOTOX=TOTOX+VOLCN(KT)   
!  3447 CONTINUE
!       DO 7491 KN=1,NUMNOD
!       HTOT(KN)=0.D0   
!       DO 7492 KT=1,16 
!       HTOT(KN)=HTOT(KN)+HITE(KT,KN)
!  7492 CONTINUE
!  7491 CONTINUE
!    88 CONTINUE
!       RETURN
!       END
! C...................................................................... 
! C.....SUBROUTINE ENDBC CHECKS THERMAL CONDITIONS FOR CRUSTING, ABLATION, 
! C.....AND SIMULTANEOUS CRUSTING AND ABLATION CASES TO DETERMINE WHETHER 
! C.....THESE PROCESSES CAN BE SUSTAINED.  IF NOT, THE PROPER BOUNDARY 
! C.....CONDITION IS SET.
! C...................................................................... 
!       SUBROUTINE ENDBC
!       IMPLICIT DOUBLE PRECISION(A-H,O-Z)
!       DIMENSION HSEND(28)
!       COMMON/CATCHR/A(999),B(999),C(999),D(999),P(999),Q(999),
!      1RECON(999),DELVEL(999),DSRDT(999),DELHTS(999),EMAX(999,999),
!      2DBLKEN(999),DELHIT(16,999),SOURCE(16,999),SRCTOT(999),
!      3HCROLD(16,999),DCDOT(999),HCRUST(16,999),DFILM(16,999),
!      4DFMOLD(16,999),DENOLD(999),SIGOX(999),SIGCON(999),BET(999),
!      5TFZX(999),TFZC(999),TKX(999),TKM(999),THETO(999,999),
!      6THET1(999,999),OMEG0(4,999),OMEG1(4,999),TAO0(999),TAO1(999),
!      7SIG0(999),SIG1(999),TARGB(999),DADOT(999),DADOTG(999),
!      8XLOLD(4,999),VISREX(999),TATMS(999),HTMP(999),DHTMP(999),
!      9HTMOLD(999)
!       COMMON/CATCHI/NUMS(4,999),NUMOLD(4,999),NTRACK(16),NSUMP(999),
!      1NPASSG(999),NCRSTM(999),NCRRT(999),NPASS(999),NBURN,NBURNO     
!       COMMON/PRINTB/ELEVAT(999),ELOLD(999),XDIST(999,999),XBTW(999,999),
!      1TEMP(999,999),ENTHP(999,999),EOLD(999,999),ENBLK(999),EBKOLD(999),
!      2TBULK(999),HITE(16,999),HITOLD(16,999),HTOT(999),HTOLD(999),
!      3HTCFT(999),HTCOEF(999),QFLUXT(999),QFLUXB(999),VEL(999),ELO(999),
!      4VELOLD(999),SRSCOR(16),AREA(999),RAD(999),ARC(999),VOLCN(16),
!      5VOID(999),VGJ(999),ZABLAT(999),ZABOLD(999),DCRUST(999),
!      6DCROLD(999),DABCON(999),DABOLD(999),DFILMT(999),DFOLT(999),
!      7SMFLX(4,999),XLSMF(4,999),TOTVOL,XFACMS(999),XMFLXA,XMCORT,
!      8VCORT,TOTOX,TOTMET,QFLXT,QFLXB,TIME,DTIME,XMCOR(16),VCOR(16),
!      9TCONI,RSAND,HDOWNC,TBOUND,EMISCN,PDRYWL,XDISTO(999),QOXT(999),
!      1XLENSH,XBTWO(999),RCOMP,WDOOR,RSUMP,RSHELL,RPED,TPED,ELSMP,
!      1TENDP(10,999),TFRZSH,TDEBRS,TKDEBR,PDEBR,CPDEBR,ENENDP(10,999),
!      2ENOLDP(10,999),DXVERT,DXSNK,XDSTE(10,999),XBTE(10,999),HXLA(999),
!      3HXLB(999),TSFEB(999),DCRS(999),DCRSLD(999),HCRS(16,999),
!      4HCRSLD(16,999),THETE0(10,999),THETE1(10,999),QSHELL,QSHELE,TSHELI,
!      5SIGOXE(999),FKOXE(999),RINJC,XLSEC,ANGSEC,ANINJC,XLCHAN,WCHNL,
!      6TEFZX(999),TIMSPC(999),DXNODE(999),TNORM(999),FRCSOL(999),
!      7ALPSPR(999),CRAMCON,HINTF,TSHLMX,XFRMX(999),XFROX(999),XFRTX(999),
!      8XMLMX(999),XMLOX(999),XMLTX(999),XTOTX(999),TIMEO,TMAX,EDOWN(999),
!      9HCP(999)
!       COMMON/HCONS/HMETAL(999),HOXIDE(999)  
!       COMMON/PROPI/ NMATC,NMATFI,NMATFF,ICAOH2,ICACO3,IMCCO3,IFH2O,     
!      1IVH2O,ICK2O,IVK2O,INA2O,ITIO2,ISIO2,ICAO,IMGO,IAL2O3,IFEO,IFE2O3, 
!      2IFE3O4,IFE,ICR,INI,IZR,IU,IB4C,IB,ICR2O3,INIO,IUO2,IZRO2,IB2O3,   
!      3NBCINT(999),NODES(999),NUMNOD,IMOX(28),IBAS,ILCS,ILL,NACTIV(999),     
!      4NBFRZM,NBFRZO,NABLFM,NDRNFM,NTYPMT(999,999),NDOOR,NBMADJ,NUMSHV,   
!      5NBSHL(999),NCRSTS(999),NUMSHH,NSKIPE,NACSH,NWAT,NPEND,NBCBOT,
!      6NCRTOP,NBFZOE,NBFZME,NGEOM,NL(999,999),NFRSCT,NLOGSH,NADAB,NINVIS,
!      7NSIMST,NSTEEL,NOVHT,NOVTK,NOVUM,NOVEM,NOVSIG,NPLLOC(999),NBPL,
!      8IXP(999),IYP(999),NVTPE,NSOLTP,NSOLF,NINTF,IFLGA(999),ICTYPE,ICTC,
!      9NPOURS,NSMP,NPED,NDOR,NSHL,NANULS,NSMPCV,NBOIL,NSWALL,NMVER,
!      1NCRTEM,NTHINC,NVELP,NITMAX,NENMAX,NPRINT,NPFREQ,NTIMSPC,NPLFREQ,
!      2NPLTOT,NJET,NJETP,NJETD,NJETND,NODCAP,NVELPW,NITMAXW,NENMXW,
!      3IFLGJ(999),NBEDCQ,ISHELE
!       COMMON/PRINTR/ QFEH2O,QCRH2O,QZRH2O,QFECO2,QCRCO2,QZRCO2,
!      4XFH2OU,XFCAOH,XFMGCA,XFCACO,XZRMRE,XFEMRE,XCRMRE,XZRORE,XFEORE,   
!      5XCRORE,XMH2O,XMCO2,XMCACO,XMMGCA,XMCAOH,TFWL,TFWS,TBWL,TBWS,      
!      6TMCAL,TMCAS,TCAL,TCAS,TFOS,TFOL,TFMS,TFML,XVISC(28),SVISC(28),    
!      7XMOL(28),FMMOL(28),ROM(28),ROMLIQ(28),AEQM(28,2),BEQM(28,2),
!      8CEQM(28,2),ECL,ECS,ECAL,ECAS,EMCAL,EMCAS,EBWL,EBWS,EFWL,EFWS,    
!      9STEF,GRAV,PI,TCS,TCL,CCL,CCS,RMASSL,WPCC,WPM,WPA,WPCS,ROC,RMASSS,   
!      1ANGSHL,RSLAGL,RSLAGS,HNODT,VFAV,VGAV,QXAV,XWTSS(16),  
!      2TSCS(2),TSCL(2),ESCS(2),ESCL(2),CCSS(2),CCSL(2),ROSTLS,ROSTLL,
!      3XFRGAS,HMINC,TST(99),TSTOP(99),AINTP(99),BINTP(99),DRATIO(999),
!      4XBCN(999),XDCN(999),XBLT(15),ADEC(99),BDEC(99),APOUR(16,99),
!      5BPOUR(16,99),XWTC(14),BWIDTH,THCKCV,TMBOIL,TEBOIL,VFINT,ANGFAN,
!      6ALPMAX,THSHL,XFCABL,XNDMIN,DVMX,DAVMX,DEAVMX,DEMX,TDC,QDCU,QDCUO2,
!      7TSINJ,EINJ,DTINJ,TKINJ,ROEV,CPINJ,SURFT,VSINJ,EMINJ,TSINJO,EINJO,
!      8DTINJO,TKINJO,ROEVO,CPINJO,SURFTO,VSINJO,EMINJO,XLEADE,ARSUM,
!      9DBUBOX,UTRISE,TREMSH,DJET,DFALL,WEBER,FROUDE,XPSAITO,XPEPSTN,
!      1FRAG,XMBEDT,XMBED(16),XLPENT,XLPENA,UJET,UFALL,HFALL,ERPV,
!      2TJETT(99),DJETT(99),HWATP,XDOTJET,DVMXW,DAVMXW,DEMXW,DEAVMXW,
!      3QJETW,XSTMJF,TINTSJF,ESAT,DRDOOR,DRANL,EI,QDCBUO2,QDCBU,
!      4EBEDS,EBEDB
!       COMMON/BASPR/ HBMT(999,999,16),HBMOLD(999,999,16) 
!       COMMON/PROPB/CPBM(999),FKB(999,999),DENB(999,999),DTDEB(999,999),
!      1EMIBM(999),DENCRS(999),ENCRS(999),FKRF(999),DENRF(999),CPRF(999) 
! C.....MARCH THROUGH THE MESH TO SEE IF ANY CHANGES ARE NEEDED....
!       DO 3710 KH=1,NUMNOD
!       IF(NACTIV(KH).EQ.0.OR.NADAB.EQ.1) GO TO 3710      
!       NFAILA=0
!       NFAILC=0
!       GO TO(3710,871,871,872,872,873,873,873,873),NBCINT(KH)  
!   871 CONTINUE
!       IF(HTOT(KH).LE.0.D0) NFAILC=1
!       IF(NCRSTM(KH).EQ.2) GO TO 773
!       IF(HOXIDE(KH).LE.0.D0.AND.DCRUST(KH).GT.DCROLD(KH)) NFAILC=1
!       GO TO 774
!   773 CONTINUE
!       IF(HMETAL(KH).LE.0.D0.AND.DCRUST(KH).GT.DCROLD(KH)) NFAILC=1
!   774 CONTINUE
!       IF(NFAILC.EQ.0) GO TO 3710
!       NBCEND=1
!       GO TO 3711      
!   872 CONTINUE
!       IF(ZABLAT(KH).GT.ZABOLD(KH)) NFAILA=1
!       IF(NFAILA.EQ.0) GO TO 3710
!       NBCEND=1
!       GO TO 3711      
!   873 CONTINUE
!       IF(HTOT(KH).LE.0.D0) NFAILC=1
!       IF(NCRSTM(KH).EQ.2) GO TO 973
!       IF(HOXIDE(KH).LE.0.D0) NFAILC=1
!       GO TO 1973
!   973 CONTINUE
!       IF(HMETAL(KH).LE.0.D0) NFAILC=1
!  1973 CONTINUE
!       IF(ZABLAT(KH).GT.ZABOLD(KH)) NFAILA=1
!       IF(NFAILC.EQ.0.AND.NFAILA.EQ.0) GO TO 3710    
!       NFAILT=NFAILA+NFAILC      
!       IF(NFAILT.EQ.2.OR.NFAILC.EQ.1) GO TO 3712     
!       IF(NBCINT(KH).EQ.6.OR.NBCINT(KH).EQ.8) NBCEND=2
!       IF(NBCINT(KH).EQ.7.OR.NBCINT(KH).EQ.9) NBCEND=3
!       GO TO 3711      
!  3712 CONTINUE
!       NBCEND=1
!  3711 CONTINUE
! C.....ROUTE TO APPROPRIATE PROCEDURAL BLOCKS TO (1) RE-INDEX BASEMAT    
! C.....WHEN BOUNDARY NODES ARE SUFFICIENTLY ABLATED, (2) NODALIZE MOLTEN 
! C.....FILMS, OR (3) NODALIZE CRUST, DEPENDING ON THE VALUES OF NBC AND  
! C.....NBCEND.
!       IF(NBCINT(KH).LE.3) GO TO 3713      
!       ZMIN=XDISTO(KH)-XBTWO(KH) 
!       IF(ZABLAT(KH).GT.ZMIN) GO TO 3713   
!       ZBOLD=ZABLAT(KH)
!       NODES(KH)=NODES(KH)-1     
      
!       ZABLAT(KH)=ZABLAT(KH)+XDIST(2,KH)   
!       ZABOLD(KH)=ZABLAT(KH)
!       XDISTO(KH)=XDIST(2,KH)+ZBOLD
!       XBTWO(KH)=XBTW(2,KH)+ZBOLD
!       DO 3714 KGS=1,4 
!       IF(NUMS(KGS,KH).GT.2) GO TO 5921   
!       XLENLD=XLSMF(KGS,KH)      
!       IF(NUMS(KGS,KH).EQ.2) XLENLD=ZBOLD+XLSMF(KGS,KH)
!       NUMS(KGS,KH)=1  
!       XLSMF(KGS,KH)=XLENLD      
!       GO TO 3714      
!  5921 CONTINUE
!       NUMS(KGS,KH)=NUMS(KGS,KH)-1
!  3714 CONTINUE
!       DO 3717 KV=1,NODES(KH)    
!       ZMULT=1.D0      
!       IF(KV.EQ.1) ZMULT=(ZBOLD+XBTW(2,KH))/XBTW(2,KH)
!       DO 3715 KTP=1,16
!       HBMT(KV,KH,KTP)=HBMT(KV+1,KH,KTP)*ZMULT
!  3715 CONTINUE
!       DTDEB(KV,KH)=DTDEB(KV+1,KH)
!       NTYPMT(KV,KH)=NTYPMT(KV+1,KH)
!       NL(KV,KH)=NL(KV+1,KH)     
!       IF(KV.GT.1) GO TO 3097    
!       XDIST(KV,KH)=XDIST(KV+1,KH)+ZBOLD   
!       XBTW(KV,KH)=XBTW(KV+1,KH)+ZBOLD     
!       GO TO 3717      
!  3097 CONTINUE
!       XDIST(KV,KH)=XDIST(KV+1,KH)
!       XBTW(KV,KH)=XBTW(KV+1,KH) 
!       TEMP(KV,KH)=TEMP(KV+1,KH) 
!       ENTHP(KV,KH)=ENTHP(KV+1,KH)
!       EMAX(KV,KH)=EMAX(KV+1,KH) 
!  3717 CONTINUE
!  3713 CONTINUE
!       IF(NBCINT(KH).EQ.3.OR.NBCINT(KH).EQ.4) GO TO 3718
!       IF(NBCINT(KH).EQ.2) GO TO 3720     
!       IF(NBCINT(KH).EQ.7) GO TO 3718      
!       IF(NBCINT(KH).EQ.6.AND.NBCEND.NE.1) GO TO 3718
!       IF(NBCINT(KH).EQ.6.AND.NBCEND.EQ.1) GO TO 3720
!       IF(NBCINT(KH).EQ.5) NPASS(KH)=1     
!       IF(NBCEND.EQ.2.OR.NBCEND.EQ.3) NPASS(KH)=1    
! C.....NODALIZE MOLTEN FILM.  FIRST FIND FILM/MELT OR FILM/CRUST
! C.....INTERFACIAL TEMPERATURE, DEPENDING UPON THE BOUNDARY CONDITION.   
!       CALL ASINEA(DFILM,KH,HSEND,ROMLIQ,WPCC,WPM,WPA,WPCS,ROC,RSLAGL,0) 
!       CALL CONDF(TEMP(1,KH),HSEND,FKO,FKM,TKMOL)    
!       IF(NBCINT(KH).EQ.5) GO TO 3722      
!       TFREEZ=TFOS     
!       IF(NCRSTM(KH).EQ.2) TFREEZ=TFMS    
!       CALL ASINEA(HCRUST,KH,HSEND,ROM,WPCC,WPM,WPA,WPCS,ROC,RSLAGS,NCRST
!      1M(KH))
!       IF(NBCINT(KH).EQ.8) GO TO 1819      
!       TINT=TEMP(1,KH)+(HTCOEF(KH)*DFILMT(KH)*(TBULK(KH)-TFREEZ))/TKMOL  
!       GO TO 3721      
!  1819 CONTINUE
!       CALL CONDF(TFREEZ,HSEND,FKO,FKM,TKOXD)
!       C1=TKOXD/DCRUST(KH)+TKMOL/DFILMT(KH)
!       C2=(TKOXD*TFREEZ)/DCRUST(KH)+(TKMOL*TEMP(1,KH))/DFILMT(KH)
!       TINT=C2/C1      
!       GO TO 3721      
!  3722 CONTINUE
!       C1=HTCOEF(KH)+TKMOL/DFILMT(KH)      
!       C2=HTCOEF(KH)*TBULK(KH)+(TKMOL*TEMP(1,KH))/DFILMT(KH)   
!       TINT=C2/C1      
!  3721 CONTINUE
!       CALL ASINEA(DFILM,KH,HSEND,ROMLIQ,WPCC,WPM,WPA,WPCS,ROC,RSLAGL,0) 
!       CALL ETF(ESF,HSEND,TINT,DTDES)      
!       TSTORE=TEMP(1,KH)
!       ESTORE=ENTHP(1,KH)
!       TEMP(1,KH)=TINT 
!       ENTHP(1,KH)=ESF 
!       DTDEB(1,KH)=DTDES
! C.....DETERMINE WHETHER THE MOLTEN FILM IS PRIMARILY OXIDIC OR METALLIC.
!       DFMM=0.D0
!       DFMO=0.D0
!       DO 3723 KTP=1,16
!       IF(KTP.LE.7) DFMM=DFMM+DFILM(KTP,KH)
!       IF(KTP.GE.8) DFMO=DFMO+DFILM(KTP,KH)
!  3723 CONTINUE
!       DFMT=DFMM+DFMO  
!       DENOM=0.D0
!       IF(DFMT.GT.0.D0) DENOM=1.0/DFMT
!       DFFOX=DENOM*DFMO
!       NTPN=4
!       IF(DFFOX.GT.0.5D0) NTPN=5 
! C.....CONSTRUCT NODAL CELL.     
!       NODES(KH)=NODES(KH)+1     
!       IF(NODES(KH).GT.NODCAP) NODES(KH)=NODCAP      
!       DO 3726 KDR=1,NODES(KH)-2 
!       IEV=NODES(KH)-KDR+1
!       DO 3728 KTP=1,16
!       HBMT(IEV,KH,KTP)=HBMT(IEV-1,KH,KTP) 
!  3728 CONTINUE
!       DTDEB(IEV,KH)=DTDEB(IEV-1,KH)
!       NTYPMT(IEV,KH)=NTYPMT(IEV-1,KH)     
!       NL(IEV,KH)=NL(IEV-1,KH)   
!       XDIST(IEV,KH)=XDIST(IEV-1,KH)
!       XBTW(IEV,KH)=XBTW(IEV-1,KH)
!       TEMP(IEV,KH)=TEMP(IEV-1,KH)
!       ENTHP(IEV,KH)=ENTHP(IEV-1,KH)
!       EMAX(IEV,KH)=EMAX(IEV-1,KH)
!  3726 CONTINUE
!       XMID=0.5D0*ZABLAT(KH)-0.5D0*(XDISTO(KH)-XBTWO(KH))      
!       XDIST(2,KH)=XMID+XDISTO(KH)-XBTWO(KH)
!       XBTW(2,KH)=XMID 
!       XBTW(1,KH)=DFILMT(KH)     
!       XDIST(1,KH)=DFILMT(KH)+XMID
!       IF(NTYPMT(1,KH).GT.3) GO TO 6563    
!       FMULTF=1.D0+(XMID/ZABLAT(KH))*(TEMP(2,KH)/TSTORE-1.D0)  
!       ENTHP(2,KH)=ESTORE*FMULTF 
!       EMAX(2,KH)=EMAX(1,KH)*FMULTF
!       GO TO 6564      
!  6563 CONTINUE
!       TEMP(2,KH)=TSTORE+(TEMP(2,KH)-TSTORE)*(XMID/ZABLAT(KH)) 
!  6564 CONTINUE
!       NTYPMT(2,KH)=NTYPMT(1,KH) 
!       NL(2,KH)=NL(1,KH)
!       NTYPMT(1,KH)=NTPN
!       NL(1,KH)=0      
!       IF(NTYPMT(2,KH).LE.3) GO TO 3729    
!       CALL ASINED(1,KH,HSEND,ROM,WPCC,WPM,WPA,WPCS,ROC,RSLAGS,0)
!       CALL TEF(ENTHP(2,KH),HSEND,TEMP(2,KH),DTDEB(2,KH))      
!       DO 3730 KTP=1,16
!       HBMT(2,KH,KTP)=HBMT(1,KH,KTP)
!  3730 CONTINUE
!       GO TO 3731      
!  3729 CONTINUE
!       CALL TEC(ENTHP(2,KH),EMAX(2,KH),TEMP(2,KH),DTDE,RMASS,YCACO3,YMCCO
!      13,YCAOH2,YFH2O,NL(2,KH))  
!       DTDEB(2,KH)=DTDE
!  3731 CONTINUE
!       DGAS=DFILMT(KH) 
!       DFILMT(KH)=0.D0 
!       ZABLAT(KH)=XDIST(1,KH)    
!       ZABOLD(KH)=ZABLAT(KH)
!       XDISTO(KH)=XDIST(1,KH)    
!       XBTWO(KH)=XBTW(1,KH)      
!       DO 3732 KTP=1,16
!       HBMT(1,KH,KTP)=DFILM(KTP,KH)
!       DFILM(KTP,KH)=0.D0
!  3732 CONTINUE
!       DO 3733 KGS=1,4 
!       IF(NUMS(KGS,KH).GT.1) GO TO 3736    
!       XLCOMP=XLSMF(KGS,KH)-XMID 
!       IF(XLCOMP.GT.0.D0) GO TO 3734
!       XLSMF(KGS,KH)=XLSMF(KGS,KH)+DGAS    
!       NUMS(KGS,KH)=1  
!       GO TO 3733      
!  3734 CONTINUE
!       XLSMF(KGS,KH)=XLCOMP      
!       NUMS(KGS,KH)=NUMS(KGS,KH)+1
!       GO TO 3733      
!  3736 CONTINUE
!       NUMS(KGS,KH)=NUMS(KGS,KH)+1
!  3733 CONTINUE
!       IF(NBCINT(KH).EQ.5) GO TO 3718      
!       IF(NBCINT(KH).EQ.9) GO TO 3718      
!       IF(NBCEND.EQ.2) GO TO 3718
! C.....NODALIZE THE CRUST AND INCORPORATE THE MATERIAL INTO THE BASEMAT. 
!  3720 CONTINUE
!       NODES(KH)=NODES(KH)+1     
!       IF(NODES(KH).GT.NODCAP) NODES(KH)=NODCAP      
!       DO 3751 KDR=1,NODES(KH)-2 
!       IEV=NODES(KH)-KDR+1
!       DO 3753 KTP=1,16
!       HBMT(IEV,KH,KTP)=HBMT(IEV-1,KH,KTP) 
!  3753 CONTINUE
!       DTDEB(IEV,KH)=DTDEB(IEV-1,KH)
!       NTYPMT(IEV,KH)=NTYPMT(IEV-1,KH)     
!       NL(IEV,KH)=NL(IEV-1,KH)   
!       XDIST(IEV,KH)=XDIST(IEV-1,KH)
!       XBTW(IEV,KH)=XBTW(IEV-1,KH)
!       TEMP(IEV,KH)=TEMP(IEV-1,KH)
!       ENTHP(IEV,KH)=ENTHP(IEV-1,KH)
!       EMAX(IEV,KH)=EMAX(IEV-1,KH)
!  3751 CONTINUE
!       NTYPMT(2,KH)=NTYPMT(1,KH) 
!       NL(2,KH)=NL(1,KH)
!       XMID=0.5D0*ZABLAT(KH)-0.5D0*(XDISTO(KH)-XBTWO(KH))      
!       FMULTF=1.D0+(XMID/ZABLAT(KH))*(TEMP(2,KH)/TEMP(1,KH)-1.D0)
!       ENTHP(2,KH)=ENTHP(1,KH)*FMULTF      
!       EMAX(2,KH)=EMAX(1,KH)*FMULTF
!       IF(NTYPMT(2,KH).LE.3) GO TO 3754    
!       CALL ASINED(1,KH,HSEND,ROM,WPCC,WPM,WPA,WPCS,ROC,RSLAGS,0)
!       CALL TEF(ENTHP(2,KH),HSEND,TEMP(2,KH),DTDE)   
!       DTDEB(2,KH)=DTDE
!       DO 3755 KTP=1,16
!       HBMT(2,KH,KTP)=HBMT(1,KH,KTP)
!  3755 CONTINUE
!       GO TO 3756      
!  3754 CONTINUE
!       CALL TEC(ENTHP(2,KH),EMAX(2,KH),TEMP(2,KH),DTDE,RMASS,YCACO3,YMCCO
!      13,YCAOH2,YFH2O,NL(2,KH))  
!  3756 CONTINUE
!       XBTW(2,KH)=XMID 
!       XDIST(2,KH)=XMID+XDISTO(KH)-XBTWO(KH)
!       IF(NCRSTM(KH).EQ.2) GO TO 3757     
!       TEMP(1,KH)=TFOS 
!       KINL=1
!       KINH=7
!       KOUTL=8
!       KOUTH=16
!       GO TO 3758      
!  3757 CONTINUE
!       TEMP(1,KH)=TFMS 
!       KINL=8
!       KINH=16
!       KOUTL=1
!       KOUTH=7
!  3758 CONTINUE
!       DO 3759 KTP=KINL,KINH     
!       HBMT(1,KH,KTP)=0.D0
!       HCRUST(KH,KTP)=0.D0
!  3759 CONTINUE
!       DO 3760 KTP=KOUTL,KOUTH   
!       HBMT(1,KH,KTP)=HCRUST(KTP,KH)
!       HBMOLD(1,KH,KTP)=HBMT(1,KH,KTP)     
!       HCRUST(KTP,KH)=0.D0
!  3760 CONTINUE
!       CALL ASINED(1,KH,HSEND,ROM,WPCC,WPM,WPA,WPCS,ROC,RSLAGS,0)
!       CALL ETF(ENTHP(1,KH),HSEND,TEMP(1,KH),DTDEB(1,KH))      
!       NTYPMT(1,KH)=5  
!       IF(NCRSTM(KH).EQ.2) NTYPMT(1,KH)=4 
!       NL(1,KH)=0      
!       XDIST(1,KH)=DCRUST(KH)+XMID
!       XBTW(1,KH)=DCRUST(KH)     
!       ZGASCR=XBTW(1,KH)
!       ZMOVE=XMID      
!       XDISTO(KH)=XDIST(1,KH)    
!       XBTWO(KH)=XBTW(1,KH)      
!       DCRUST(KH)=0.D0 
!       ZABLAT(KH)=XDISTO(KH)     
!       ZABOLD(KH)=ZABLAT(KH)
!       DO 3761 KGS=1,4 
!       IF(NUMS(KGS,KH).GT.1) GO TO 3762    
!       XLCOMP=XLSMF(KGS,KH)-ZMOVE
!       IF(XLCOMP.GT.0.D0) GO TO 7654
!       XLSMF(KGS,KH)=XLSMF(KGS,KH)+ZGASCR  
!       NUMS(KGS,KH)=1  
!       GO TO 3761      
!  7654 CONTINUE
!       XLSMF(KGS,KH)=XLSMF(KGS,KH)-ZMOVE+ZGASCR      
!       NUMS(KGS,KH)=1  
!       GO TO 3761      
!  3762 CONTINUE
!       NUMS(KGS,KH)=NUMS(KGS,KH)+1
!  3761 CONTINUE
!  3718 CONTINUE
!       NBCINT(KH)=NBCEND
!  3710 CONTINUE
!       RETURN
!       END
! C...................................................................... 
! C.....SUBROUTINE REMESH CHECKS IF ABLATION DEPTH OF BASEMAT NODAL CELLS
! C.....AND IF IT IS LESS THAN THE MINIMUM VALUE, IT REMESHES SO THAT  
! C.....ABLATION INTO THE NEXT CELL CAN OCCUR.
! C...................................................................... 
!       SUBROUTINE REMESH(IFAILJ)
!       IMPLICIT DOUBLE PRECISION(A-H,O-Z)
!       DIMENSION HSEND(28)
!       COMMON/CATCHR/A(999),B(999),C(999),D(999),P(999),Q(999),
!      1RECON(999),DELVEL(999),DSRDT(999),DELHTS(999),EMAX(999,999),
!      2DBLKEN(999),DELHIT(16,999),SOURCE(16,999),SRCTOT(999),
!      3HCROLD(16,999),DCDOT(999),HCRUST(16,999),DFILM(16,999),
!      4DFMOLD(16,999),DENOLD(999),SIGOX(999),SIGCON(999),BET(999),
!      5TFZX(999),TFZC(999),TKX(999),TKM(999),THETO(999,999),
!      6THET1(999,999),OMEG0(4,999),OMEG1(4,999),TAO0(999),TAO1(999),
!      7SIG0(999),SIG1(999),TARGB(999),DADOT(999),DADOTG(999),
!      8XLOLD(4,999),VISREX(999),TATMS(999),HTMP(999),DHTMP(999),
!      9HTMOLD(999)
!       COMMON/CATCHI/NUMS(4,999),NUMOLD(4,999),NTRACK(16),NSUMP(999),
!      1NPASSG(999),NCRSTM(999),NCRRT(999),NPASS(999),NBURN,NBURNO     
!       COMMON/PRINTB/ELEVAT(999),ELOLD(999),XDIST(999,999),XBTW(999,999),
!      1TEMP(999,999),ENTHP(999,999),EOLD(999,999),ENBLK(999),EBKOLD(999),
!      2TBULK(999),HITE(16,999),HITOLD(16,999),HTOT(999),HTOLD(999),
!      3HTCFT(999),HTCOEF(999),QFLUXT(999),QFLUXB(999),VEL(999),ELO(999),
!      4VELOLD(999),SRSCOR(16),AREA(999),RAD(999),ARC(999),VOLCN(16),
!      5VOID(999),VGJ(999),ZABLAT(999),ZABOLD(999),DCRUST(999),
!      6DCROLD(999),DABCON(999),DABOLD(999),DFILMT(999),DFOLT(999),
!      7SMFLX(4,999),XLSMF(4,999),TOTVOL,XFACMS(999),XMFLXA,XMCORT,
!      8VCORT,TOTOX,TOTMET,QFLXT,QFLXB,TIME,DTIME,XMCOR(16),VCOR(16),
!      9TCONI,RSAND,HDOWNC,TBOUND,EMISCN,PDRYWL,XDISTO(999),QOXT(999),
!      1XLENSH,XBTWO(999),RCOMP,WDOOR,RSUMP,RSHELL,RPED,TPED,ELSMP,
!      1TENDP(10,999),TFRZSH,TDEBRS,TKDEBR,PDEBR,CPDEBR,ENENDP(10,999),
!      2ENOLDP(10,999),DXVERT,DXSNK,XDSTE(10,999),XBTE(10,999),HXLA(999),
!      3HXLB(999),TSFEB(999),DCRS(999),DCRSLD(999),HCRS(16,999),
!      4HCRSLD(16,999),THETE0(10,999),THETE1(10,999),QSHELL,QSHELE,TSHELI,
!      5SIGOXE(999),FKOXE(999),RINJC,XLSEC,ANGSEC,ANINJC,XLCHAN,WCHNL,
!      6TEFZX(999),TIMSPC(999),DXNODE(999),TNORM(999),FRCSOL(999),
!      7ALPSPR(999),CRAMCON,HINTF,TSHLMX,XFRMX(999),XFROX(999),XFRTX(999),
!      8XMLMX(999),XMLOX(999),XMLTX(999),XTOTX(999),TIMEO,TMAX,EDOWN(999),
!      9HCP(999)
!       COMMON/HCONS/HMETAL(999),HOXIDE(999)  
!       COMMON/PROPI/ NMATC,NMATFI,NMATFF,ICAOH2,ICACO3,IMCCO3,IFH2O,     
!      1IVH2O,ICK2O,IVK2O,INA2O,ITIO2,ISIO2,ICAO,IMGO,IAL2O3,IFEO,IFE2O3, 
!      2IFE3O4,IFE,ICR,INI,IZR,IU,IB4C,IB,ICR2O3,INIO,IUO2,IZRO2,IB2O3,   
!      3NBCINT(999),NODES(999),NUMNOD,IMOX(28),IBAS,ILCS,ILL,NACTIV(999),     
!      4NBFRZM,NBFRZO,NABLFM,NDRNFM,NTYPMT(999,999),NDOOR,NBMADJ,NUMSHV,   
!      5NBSHL(999),NCRSTS(999),NUMSHH,NSKIPE,NACSH,NWAT,NPEND,NBCBOT,
!      6NCRTOP,NBFZOE,NBFZME,NGEOM,NL(999,999),NFRSCT,NLOGSH,NADAB,NINVIS,
!      7NSIMST,NSTEEL,NOVHT,NOVTK,NOVUM,NOVEM,NOVSIG,NPLLOC(999),NBPL,
!      8IXP(999),IYP(999),NVTPE,NSOLTP,NSOLF,NINTF,IFLGA(999),ICTYPE,ICTC,
!      9NPOURS,NSMP,NPED,NDOR,NSHL,NANULS,NSMPCV,NBOIL,NSWALL,NMVER,
!      1NCRTEM,NTHINC,NVELP,NITMAX,NENMAX,NPRINT,NPFREQ,NTIMSPC,NPLFREQ,
!      2NPLTOT,NJET,NJETP,NJETD,NJETND,NODCAP,NVELPW,NITMAXW,NENMXW,
!      3IFLGJ(999),NBEDCQ,ISHELE
!       COMMON/DATOVER/COVS,COVL,DHSOV,XMOLOV,ROVS,ROVL,TKOVS,TKOVL,VISOV,
!      1EMOV,SIGOV
!       COMMON/PRINTR/ QFEH2O,QCRH2O,QZRH2O,QFECO2,QCRCO2,QZRCO2,
!      4XFH2OU,XFCAOH,XFMGCA,XFCACO,XZRMRE,XFEMRE,XCRMRE,XZRORE,XFEORE,   
!      5XCRORE,XMH2O,XMCO2,XMCACO,XMMGCA,XMCAOH,TFWL,TFWS,TBWL,TBWS,      
!      6TMCAL,TMCAS,TCAL,TCAS,TFOS,TFOL,TFMS,TFML,XVISC(28),SVISC(28),    
!      7XMOL(28),FMMOL(28),ROM(28),ROMLIQ(28),AEQM(28,2),BEQM(28,2),
!      8CEQM(28,2),ECL,ECS,ECAL,ECAS,EMCAL,EMCAS,EBWL,EBWS,EFWL,EFWS,    
!      9STEF,GRAV,PI,TCS,TCL,CCL,CCS,RMASSL,WPCC,WPM,WPA,WPCS,ROC,RMASSS,   
!      1ANGSHL,RSLAGL,RSLAGS,HNODT,VFAV,VGAV,QXAV,XWTSS(16),  
!      2TSCS(2),TSCL(2),ESCS(2),ESCL(2),CCSS(2),CCSL(2),ROSTLS,ROSTLL,
!      3XFRGAS,HMINC,TST(99),TSTOP(99),AINTP(99),BINTP(99),DRATIO(999),
!      4XBCN(999),XDCN(999),XBLT(15),ADEC(99),BDEC(99),APOUR(16,99),
!      5BPOUR(16,99),XWTC(14),BWIDTH,THCKCV,TMBOIL,TEBOIL,VFINT,ANGFAN,
!      6ALPMAX,THSHL,XFCABL,XNDMIN,DVMX,DAVMX,DEAVMX,DEMX,TDC,QDCU,QDCUO2,
!      7TSINJ,EINJ,DTINJ,TKINJ,ROEV,CPINJ,SURFT,VSINJ,EMINJ,TSINJO,EINJO,
!      8DTINJO,TKINJO,ROEVO,CPINJO,SURFTO,VSINJO,EMINJO,XLEADE,ARSUM,
!      9DBUBOX,UTRISE,TREMSH,DJET,DFALL,WEBER,FROUDE,XPSAITO,XPEPSTN,
!      1FRAG,XMBEDT,XMBED(16),XLPENT,XLPENA,UJET,UFALL,HFALL,ERPV,
!      2TJETT(99),DJETT(99),HWATP,XDOTJET,DVMXW,DAVMXW,DEMXW,DEAVMXW,
!      3QJETW,XSTMJF,TINTSJF,ESAT,DRDOOR,DRANL,EI,QDCBUO2,QDCBU,
!      4EBEDS,EBEDB
!       COMMON/BLKHT/TKMLT,PM,CM,UM,EMISM,SIGMAM,TKNC,PNC,CNC,UNC    
!       COMMON/BASPR/ HBMT(999,999,16),HBMOLD(999,999,16) 
!       COMMON/DATSH/TSTLS,TSTLL,ESTLS,ESTLL,DFUSST,CSTLL
!       COMMON/DATSIMS/TSIS,TSIL,CSIS,CSIL,DHSIL,RSIS,RSIL,TKSIS,TKSIL,
!      1ESIL,XCSI(16)
!       COMMON/DEFUNC/CPLIQP,CPSOLP,EFOSP,EFOLP,EFMSP,EFMLP     
!       COMMON/PROPB/CPBM(999),FKB(999,999),DENB(999,999),DTDEB(999,999),
!      1EMIBM(999),DENCRS(999),ENCRS(999),FKRF(999),DENRF(999),CPRF(999) 
!       COMMON/PROPM/DTDEM(999),CPMLT(999),FKMLT(999),DENMLT(999),
!      1SIGMLT(999),UMMLT(999),EMIMLT(999)      
! C.....MARCH THROUGH THE MESH LATERALLY AND CHECK CONDITIONS FOR VERTICAL
! C.....REMESHING
!       DO 2032 KN=1,NUMNOD
!       IF(NBCINT(KN).LE.3) GO TO 2032      
!       ZCOMP=XDISTO(KN)-ZABLAT(KN)
!       IF(ZCOMP.LT.XBTWO(KN)) GO TO 2032   
!       IP=2  
!       IF(NTYPMT(IP,KN).GT.3) GO TO 6048   
!       TEMP(1,KN)=TSCS(NL(IP,KN))
!       ENTHP(1,KN)=ESCS(NL(IP,KN))
!       GO TO 6049      
!  6048 CONTINUE
!       CALL ASINED(IP,KN,HSEND,ROM,WPCC,WPM,WPA,WPCS,ROC,RSLAGS,0)
!       TEMP(1,KN)=TFOS 
!       IF(NTYPMT(1,KN).EQ.4) TEMP(1,KN)=TFMS
!       CALL ETF(ENTHP(1,KN),HSEND,TEMP(1,KN),DTDE)   
!       DTDEB(1,KN)=DTDE
!  6049 CONTINUE
!       XLSTRT=XDISTO(KN)-XBTWO(KN)
!       XLMIN=XFCABL*XLSTRT
!       IF(ZABLAT(KN).GT.XLMIN) GO TO 2032  
!       ZBOLD=ZABLAT(KN)
!       NODES(KN)=NODES(KN)-1     
!       IF(NODES(KN).GE.3) GO TO 3332
!       WRITE(6,7671) TIME,KN
!       WRITE(2,7671) TIME,KN
!  7671 FORMAT(//,1X,'****BASEMAT ABLATION HAS LOCALLY REDUCED THE NUMBER
!      1OF NODES TO 3, INCREASE NODALIATION DEPTH AND RESTART, TIME=',
!      2 G12.5,' LATERAL NODE=',I4)
!       IFAILJ=1
!       GO TO 110
!  3332 CONTINUE
!       ZABLAT(KN)=ZABLAT(KN)+XDIST(2,KN)   
!       ZABOLD(KN)=ZABLAT(KN)
!       XDISTO(KN)=XDIST(2,KN)+ZBOLD
!       XBTWO(KN)=XBTW(2,KN)+ZBOLD
!       DO 2034 KGS=1,4 
!       IF(NUMS(KGS,KN).GT.2) GO TO 6930   
!       IF(NUMS(KGS,KN).EQ.2) XLSMF(KGS,KN)=XLSMF(KGS,KN)+ZBOLD
!       NUMS(KGS,KN)=1  
!       GO TO 2034      
!  6930 CONTINUE
!       NUMS(KGS,KN)=NUMS(KGS,KN)-1
!  2034 CONTINUE
!       DO 2035 KV=1,NODES(KN)    
!       ZMULT=1.D0      
!       IF(KV.EQ.1) ZMULT=(ZBOLD+XBTW(2,KN))/XBTW(2,KN)
!       DO 2037 KTP=1,16
!       HBMT(KV,KN,KTP)=HBMT(KV+1,KN,KTP)*ZMULT
!  2037 CONTINUE
!       DTDEB(KV,KN)=DTDEB(KV+1,KN)
!       NTYPMT(KV,KN)=NTYPMT(KV+1,KN)
!       NL(KV,KN)=NL(KV+1,KN)     
!       IF(KV.GT.1) GO TO 2038    
!       XDIST(KV,KN)=XDIST(KV+1,KN)+ZBOLD   
!       XBTW(KV,KN)=XBTW(KV+1,KN)+ZBOLD     
!       GO TO 2035      
!  2038 CONTINUE
!       XDIST(KV,KN)=XDIST(KV+1,KN)
!       XBTW(KV,KN)=XBTW(KV+1,KN) 
!       TEMP(KV,KN)=TEMP(KV+1,KN) 
!       ENTHP(KV,KN)=ENTHP(KV+1,KN)
!       EMAX(KV,KN)=EMAX(KV+1,KN) 
!  2035 CONTINUE
!  2032 CONTINUE
!   110 CONTINUE
!       RETURN
!       END
! C...................................................................... 
! C.....SUBROUTINE TRACKER CHECKS TO SEE IF KT-TH CONSTITUENT IS EJECTED 
! C.....FROM RPV AND, IF SO, IT IS TRACKED.  IF CONSTITUENT IS NOT 
! C.....EJECTED, OR IT GOES TO ZERO DO TO CRUSTING/OXIDATION, IT IS NO
! C.....LONGER TRACKED.     
! C...................................................................... 
!       SUBROUTINE TRACKER
!       IMPLICIT DOUBLE PRECISION(A-H,O-Z)
!       COMMON/CATCHR/A(999),B(999),C(999),D(999),P(999),Q(999),
!      1RECON(999),DELVEL(999),DSRDT(999),DELHTS(999),EMAX(999,999),
!      2DBLKEN(999),DELHIT(16,999),SOURCE(16,999),SRCTOT(999),
!      3HCROLD(16,999),DCDOT(999),HCRUST(16,999),DFILM(16,999),
!      4DFMOLD(16,999),DENOLD(999),SIGOX(999),SIGCON(999),BET(999),
!      5TFZX(999),TFZC(999),TKX(999),TKM(999),THETO(999,999),
!      6THET1(999,999),OMEG0(4,999),OMEG1(4,999),TAO0(999),TAO1(999),
!      7SIG0(999),SIG1(999),TARGB(999),DADOT(999),DADOTG(999),
!      8XLOLD(4,999),VISREX(999),TATMS(999),HTMP(999),DHTMP(999),
!      9HTMOLD(999)
!       COMMON/CATCHI/NUMS(4,999),NUMOLD(4,999),NTRACK(16),NSUMP(999),
!      1NPASSG(999),NCRSTM(999),NCRRT(999),NPASS(999),NBURN,NBURNO     
!       COMMON/PRINTB/ELEVAT(999),ELOLD(999),XDIST(999,999),XBTW(999,999),
!      1TEMP(999,999),ENTHP(999,999),EOLD(999,999),ENBLK(999),EBKOLD(999),
!      2TBULK(999),HITE(16,999),HITOLD(16,999),HTOT(999),HTOLD(999),
!      3HTCFT(999),HTCOEF(999),QFLUXT(999),QFLUXB(999),VEL(999),ELO(999),
!      4VELOLD(999),SRSCOR(16),AREA(999),RAD(999),ARC(999),VOLCN(16),
!      5VOID(999),VGJ(999),ZABLAT(999),ZABOLD(999),DCRUST(999),
!      6DCROLD(999),DABCON(999),DABOLD(999),DFILMT(999),DFOLT(999),
!      7SMFLX(4,999),XLSMF(4,999),TOTVOL,XFACMS(999),XMFLXA,XMCORT,
!      8VCORT,TOTOX,TOTMET,QFLXT,QFLXB,TIME,DTIME,XMCOR(16),VCOR(16),
!      9TCONI,RSAND,HDOWNC,TBOUND,EMISCN,PDRYWL,XDISTO(999),QOXT(999),
!      1XLENSH,XBTWO(999),RCOMP,WDOOR,RSUMP,RSHELL,RPED,TPED,ELSMP,
!      1TENDP(10,999),TFRZSH,TDEBRS,TKDEBR,PDEBR,CPDEBR,ENENDP(10,999),
!      2ENOLDP(10,999),DXVERT,DXSNK,XDSTE(10,999),XBTE(10,999),HXLA(999),
!      3HXLB(999),TSFEB(999),DCRS(999),DCRSLD(999),HCRS(16,999),
!      4HCRSLD(16,999),THETE0(10,999),THETE1(10,999),QSHELL,QSHELE,TSHELI,
!      5SIGOXE(999),FKOXE(999),RINJC,XLSEC,ANGSEC,ANINJC,XLCHAN,WCHNL,
!      6TEFZX(999),TIMSPC(999),DXNODE(999),TNORM(999),FRCSOL(999),
!      7ALPSPR(999),CRAMCON,HINTF,TSHLMX,XFRMX(999),XFROX(999),XFRTX(999),
!      8XMLMX(999),XMLOX(999),XMLTX(999),XTOTX(999),TIMEO,TMAX,EDOWN(999),
!      9HCP(999)
!       COMMON/HCONS/HMETAL(999),HOXIDE(999)  
!       COMMON/PROPI/ NMATC,NMATFI,NMATFF,ICAOH2,ICACO3,IMCCO3,IFH2O,     
!      1IVH2O,ICK2O,IVK2O,INA2O,ITIO2,ISIO2,ICAO,IMGO,IAL2O3,IFEO,IFE2O3, 
!      2IFE3O4,IFE,ICR,INI,IZR,IU,IB4C,IB,ICR2O3,INIO,IUO2,IZRO2,IB2O3,   
!      3NBCINT(999),NODES(999),NUMNOD,IMOX(28),IBAS,ILCS,ILL,NACTIV(999),     
!      4NBFRZM,NBFRZO,NABLFM,NDRNFM,NTYPMT(999,999),NDOOR,NBMADJ,NUMSHV,   
!      5NBSHL(999),NCRSTS(999),NUMSHH,NSKIPE,NACSH,NWAT,NPEND,NBCBOT,
!      6NCRTOP,NBFZOE,NBFZME,NGEOM,NL(999,999),NFRSCT,NLOGSH,NADAB,NINVIS,
!      7NSIMST,NSTEEL,NOVHT,NOVTK,NOVUM,NOVEM,NOVSIG,NPLLOC(999),NBPL,
!      8IXP(999),IYP(999),NVTPE,NSOLTP,NSOLF,NINTF,IFLGA(999),ICTYPE,ICTC,
!      9NPOURS,NSMP,NPED,NDOR,NSHL,NANULS,NSMPCV,NBOIL,NSWALL,NMVER,
!      1NCRTEM,NTHINC,NVELP,NITMAX,NENMAX,NPRINT,NPFREQ,NTIMSPC,NPLFREQ,
!      2NPLTOT,NJET,NJETP,NJETD,NJETND,NODCAP,NVELPW,NITMAXW,NENMXW,
!      3IFLGJ(999),NBEDCQ,ISHELE
!       COMMON/DATOVER/COVS,COVL,DHSOV,XMOLOV,ROVS,ROVL,TKOVS,TKOVL,VISOV,
!      1EMOV,SIGOV
!       COMMON/PRINTR/ QFEH2O,QCRH2O,QZRH2O,QFECO2,QCRCO2,QZRCO2,
!      4XFH2OU,XFCAOH,XFMGCA,XFCACO,XZRMRE,XFEMRE,XCRMRE,XZRORE,XFEORE,   
!      5XCRORE,XMH2O,XMCO2,XMCACO,XMMGCA,XMCAOH,TFWL,TFWS,TBWL,TBWS,      
!      6TMCAL,TMCAS,TCAL,TCAS,TFOS,TFOL,TFMS,TFML,XVISC(28),SVISC(28),    
!      7XMOL(28),FMMOL(28),ROM(28),ROMLIQ(28),AEQM(28,2),BEQM(28,2),
!      8CEQM(28,2),ECL,ECS,ECAL,ECAS,EMCAL,EMCAS,EBWL,EBWS,EFWL,EFWS,    
!      9STEF,GRAV,PI,TCS,TCL,CCL,CCS,RMASSL,WPCC,WPM,WPA,WPCS,ROC,RMASSS,   
!      1ANGSHL,RSLAGL,RSLAGS,HNODT,VFAV,VGAV,QXAV,XWTSS(16),  
!      2TSCS(2),TSCL(2),ESCS(2),ESCL(2),CCSS(2),CCSL(2),ROSTLS,ROSTLL,
!      3XFRGAS,HMINC,TST(99),TSTOP(99),AINTP(99),BINTP(99),DRATIO(999),
!      4XBCN(999),XDCN(999),XBLT(15),ADEC(99),BDEC(99),APOUR(16,99),
!      5BPOUR(16,99),XWTC(14),BWIDTH,THCKCV,TMBOIL,TEBOIL,VFINT,ANGFAN,
!      6ALPMAX,THSHL,XFCABL,XNDMIN,DVMX,DAVMX,DEAVMX,DEMX,TDC,QDCU,QDCUO2,
!      7TSINJ,EINJ,DTINJ,TKINJ,ROEV,CPINJ,SURFT,VSINJ,EMINJ,TSINJO,EINJO,
!      8DTINJO,TKINJO,ROEVO,CPINJO,SURFTO,VSINJO,EMINJO,XLEADE,ARSUM,
!      9DBUBOX,UTRISE,TREMSH,DJET,DFALL,WEBER,FROUDE,XPSAITO,XPEPSTN,
!      1FRAG,XMBEDT,XMBED(16),XLPENT,XLPENA,UJET,UFALL,HFALL,ERPV,
!      2TJETT(99),DJETT(99),HWATP,XDOTJET,DVMXW,DAVMXW,DEMXW,DEAVMXW,
!      3QJETW,XSTMJF,TINTSJF,ESAT,DRDOOR,DRANL,EI,QDCBUO2,QDCBU,
!      4EBEDS,EBEDB
!       COMMON/BLKHT/TKMLT,PM,CM,UM,EMISM,SIGMAM,TKNC,PNC,CNC,UNC    
!       COMMON/BASPR/ HBMT(999,999,16),HBMOLD(999,999,16) 
!       COMMON/DATSH/TSTLS,TSTLL,ESTLS,ESTLL,DFUSST,CSTLL
!       COMMON/DATSIMS/TSIS,TSIL,CSIS,CSIL,DHSIL,RSIS,RSIL,TKSIS,TKSIL,
!      1ESIL,XCSI(16)
!       COMMON/DEFUNC/CPLIQP,CPSOLP,EFOSP,EFOLP,EFMSP,EFMLP     
!       COMMON/PROPB/CPBM(999),FKB(999,999),DENB(999,999),DTDEB(999,999),
!      1EMIBM(999),DENCRS(999),ENCRS(999),FKRF(999),DENRF(999),CPRF(999) 
!       COMMON/PROPM/DTDEM(999),CPMLT(999),FKMLT(999),DENMLT(999),
!      1SIGMLT(999),UMMLT(999),EMIMLT(999)      
!       DO 7700 KT=1,16 
!       IF(NTRACK(KT).EQ.1) GO TO 7701      
!       IF(SRSCOR(KT).LE.0.D0) GO TO 7702   
!       NTRACK(KT)=1    
!       GO TO 7700      
!  7702 CONTINUE
! C.....CHECK OXIDATION SOURCE TERMS FOR FEO, CR2O3, AND ZRO2.  
!       IF(KT.NE.8) GO TO 7704    
!       KSRC=1
!       GO TO 7705      
!  7704 CONTINUE
!       IF(KT.NE.9) GO TO 7706    
!       KSRC=2
!       GO TO 7705      
!  7706 CONTINUE
!       IF(KT.NE.12) GO TO 7707   
!       KSRC=3
!  7705 CONTINUE
!       DO 7708 KN=1,NUMNOD
!       IF(HITE(KSRC,KN).LE.0.D0.OR.VGJ(KN).LE.0.D0) GO TO 7708 
!       IF(KSRC.NE.2) GO TO 6117 
!       IF(HITE(1,KN).GT.0.D0) GO TO 7708   
!       IF(HITE(3,KN).GT.0.D0) GO TO 7708   
!  6117 CONTINUE
!       NTRACK(KT)=1    
!       GO TO 7700      
!  7708 CONTINUE
!  7707 CONTINUE
! C.....CHECK ABLATION SOURCE TERMS.
!       DO 7904 KN=1,NUMNOD
!       IF(NBCINT(KN).EQ.4) GO TO 7709      
!       IF(NBCINT(KN).EQ.6) GO TO 7709      
!       IF(NBCINT(KN).EQ.7) GO TO 7709      
!       GO TO 7904      
!  7709 CONTINUE
!       ZCOMP=XDISTO(KN)-ZABLAT(KN)
!       IF(ZCOMP.LT.XBTWO(KN)) GO TO 7710   
!       IP=2  
!       GO TO 7903      
!  7710 CONTINUE
!       IP=1  
!  7903 CONTINUE
!       IF(NTYPMT(IP,KN).GT.3) GO TO 7720   
!       IF(NL(IP,KN).EQ.2) GO TO 7720      
!       IF(KT.NE.16) GO TO 7904   
!       NTRACK(KT)=1    
!       GO TO 7700      
!  7720 CONTINUE
!       HCOMP=HBMT(IP,KN,KT)      
!       IF(NL(IP,KN).EQ.2) HCOMP=XWTSS(KT) 
!       IF(HCOMP.LE.0.D0) GO TO 7904
!       NTRACK(KT)=1    
!       GO TO 7700      
!  7904 CONTINUE
!       GO TO 7700      
!  7701 CONTINUE
! C.....CHECK WHETHER TO STOP TRACKING THE KT-TH CONSTITUENT.   
!       IF(SRSCOR(KT).GT.0.D0) GO TO 7700   
!       IF(VOLCN(KT).GT.0.D0) GO TO 7700    
!       NTRACK(KT)=0    
!  7700 CONTINUE
!       RETURN
!       END
! C...................................................................... 
! C.....SUBROUTINE CRUSTCK CONTROLS CRUST GROWTH LOGIC DEPENDING UPON
! C.....USER MODEING ASSUMPTIONS. IT ALSO CHECKS FOR THE POSSIBILITY  OF
! C.....SOLIDIFICATION OF MOLTEN, SUB-SURFACE, NODES IN THE BASEMAT  
! C...................................................................... 
!       SUBROUTINE CRUSTCK
!       IMPLICIT DOUBLE PRECISION(A-H,O-Z)
!       COMMON/CATCHI/NUMS(4,999),NUMOLD(4,999),NTRACK(16),NSUMP(999),
!      1NPASSG(999),NCRSTM(999),NCRRT(999),NPASS(999),NBURN,NBURNO     
!       COMMON/PRINTB/ELEVAT(999),ELOLD(999),XDIST(999,999),XBTW(999,999),
!      1TEMP(999,999),ENTHP(999,999),EOLD(999,999),ENBLK(999),EBKOLD(999),
!      2TBULK(999),HITE(16,999),HITOLD(16,999),HTOT(999),HTOLD(999),
!      3HTCFT(999),HTCOEF(999),QFLUXT(999),QFLUXB(999),VEL(999),ELO(999),
!      4VELOLD(999),SRSCOR(16),AREA(999),RAD(999),ARC(999),VOLCN(16),
!      5VOID(999),VGJ(999),ZABLAT(999),ZABOLD(999),DCRUST(999),
!      6DCROLD(999),DABCON(999),DABOLD(999),DFILMT(999),DFOLT(999),
!      7SMFLX(4,999),XLSMF(4,999),TOTVOL,XFACMS(999),XMFLXA,XMCORT,
!      8VCORT,TOTOX,TOTMET,QFLXT,QFLXB,TIME,DTIME,XMCOR(16),VCOR(16),
!      9TCONI,RSAND,HDOWNC,TBOUND,EMISCN,PDRYWL,XDISTO(999),QOXT(999),
!      1XLENSH,XBTWO(999),RCOMP,WDOOR,RSUMP,RSHELL,RPED,TPED,ELSMP,
!      1TENDP(10,999),TFRZSH,TDEBRS,TKDEBR,PDEBR,CPDEBR,ENENDP(10,999),
!      2ENOLDP(10,999),DXVERT,DXSNK,XDSTE(10,999),XBTE(10,999),HXLA(999),
!      3HXLB(999),TSFEB(999),DCRS(999),DCRSLD(999),HCRS(16,999),
!      4HCRSLD(16,999),THETE0(10,999),THETE1(10,999),QSHELL,QSHELE,TSHELI,
!      5SIGOXE(999),FKOXE(999),RINJC,XLSEC,ANGSEC,ANINJC,XLCHAN,WCHNL,
!      6TEFZX(999),TIMSPC(999),DXNODE(999),TNORM(999),FRCSOL(999),
!      7ALPSPR(999),CRAMCON,HINTF,TSHLMX,XFRMX(999),XFROX(999),XFRTX(999),
!      8XMLMX(999),XMLOX(999),XMLTX(999),XTOTX(999),TIMEO,TMAX,EDOWN(999),
!      9HCP(999)
!       COMMON/HCONS/HMETAL(999),HOXIDE(999)  
!       COMMON/PROPI/ NMATC,NMATFI,NMATFF,ICAOH2,ICACO3,IMCCO3,IFH2O,     
!      1IVH2O,ICK2O,IVK2O,INA2O,ITIO2,ISIO2,ICAO,IMGO,IAL2O3,IFEO,IFE2O3, 
!      2IFE3O4,IFE,ICR,INI,IZR,IU,IB4C,IB,ICR2O3,INIO,IUO2,IZRO2,IB2O3,   
!      3NBCINT(999),NODES(999),NUMNOD,IMOX(28),IBAS,ILCS,ILL,NACTIV(999),     
!      4NBFRZM,NBFRZO,NABLFM,NDRNFM,NTYPMT(999,999),NDOOR,NBMADJ,NUMSHV,   
!      5NBSHL(999),NCRSTS(999),NUMSHH,NSKIPE,NACSH,NWAT,NPEND,NBCBOT,
!      6NCRTOP,NBFZOE,NBFZME,NGEOM,NL(999,999),NFRSCT,NLOGSH,NADAB,NINVIS,
!      7NSIMST,NSTEEL,NOVHT,NOVTK,NOVUM,NOVEM,NOVSIG,NPLLOC(999),NBPL,
!      8IXP(999),IYP(999),NVTPE,NSOLTP,NSOLF,NINTF,IFLGA(999),ICTYPE,ICTC,
!      9NPOURS,NSMP,NPED,NDOR,NSHL,NANULS,NSMPCV,NBOIL,NSWALL,NMVER,
!      1NCRTEM,NTHINC,NVELP,NITMAX,NENMAX,NPRINT,NPFREQ,NTIMSPC,NPLFREQ,
!      2NPLTOT,NJET,NJETP,NJETD,NJETND,NODCAP,NVELPW,NITMAXW,NENMXW,
!      3IFLGJ(999),NBEDCQ,ISHELE
!       COMMON/PRINTR/ QFEH2O,QCRH2O,QZRH2O,QFECO2,QCRCO2,QZRCO2,
!      4XFH2OU,XFCAOH,XFMGCA,XFCACO,XZRMRE,XFEMRE,XCRMRE,XZRORE,XFEORE,   
!      5XCRORE,XMH2O,XMCO2,XMCACO,XMMGCA,XMCAOH,TFWL,TFWS,TBWL,TBWS,      
!      6TMCAL,TMCAS,TCAL,TCAS,TFOS,TFOL,TFMS,TFML,XVISC(28),SVISC(28),    
!      7XMOL(28),FMMOL(28),ROM(28),ROMLIQ(28),AEQM(28,2),BEQM(28,2),
!      8CEQM(28,2),ECL,ECS,ECAL,ECAS,EMCAL,EMCAS,EBWL,EBWS,EFWL,EFWS,    
!      9STEF,GRAV,PI,TCS,TCL,CCL,CCS,RMASSL,WPCC,WPM,WPA,WPCS,ROC,RMASSS,   
!      1ANGSHL,RSLAGL,RSLAGS,HNODT,VFAV,VGAV,QXAV,XWTSS(16),  
!      2TSCS(2),TSCL(2),ESCS(2),ESCL(2),CCSS(2),CCSL(2),ROSTLS,ROSTLL,
!      3XFRGAS,HMINC,TST(99),TSTOP(99),AINTP(99),BINTP(99),DRATIO(999),
!      4XBCN(999),XDCN(999),XBLT(15),ADEC(99),BDEC(99),APOUR(16,99),
!      5BPOUR(16,99),XWTC(14),BWIDTH,THCKCV,TMBOIL,TEBOIL,VFINT,ANGFAN,
!      6ALPMAX,THSHL,XFCABL,XNDMIN,DVMX,DAVMX,DEAVMX,DEMX,TDC,QDCU,QDCUO2,
!      7TSINJ,EINJ,DTINJ,TKINJ,ROEV,CPINJ,SURFT,VSINJ,EMINJ,TSINJO,EINJO,
!      8DTINJO,TKINJO,ROEVO,CPINJO,SURFTO,VSINJO,EMINJO,XLEADE,ARSUM,
!      9DBUBOX,UTRISE,TREMSH,DJET,DFALL,WEBER,FROUDE,XPSAITO,XPEPSTN,
!      1FRAG,XMBEDT,XMBED(16),XLPENT,XLPENA,UJET,UFALL,HFALL,ERPV,
!      2TJETT(99),DJETT(99),HWATP,XDOTJET,DVMXW,DAVMXW,DEMXW,DEAVMXW,
!      3QJETW,XSTMJF,TINTSJF,ESAT,DRDOOR,DRANL,EI,QDCBUO2,QDCBU,
!      4EBEDS,EBEDB
! C.....START ANALYSIS ACROSS THE MESH
!       DO 4532 KH=1,NUMNOD
!       IP=1  
!       IF(NBCINT(KH).LE.3) GO TO 4711      
!       ZCOMP=XDISTO(KH)-ZABLAT(KH)
!       IF(ZCOMP.GE.XBTWO(KH)) IP=2
!  4711 CONTINUE
!       NPASSG(KH)=0    
!       NFL=0 
!       DO 2714 KV=1,NODES(KH)    
!       KL=IP 
!       IF(KV.GE.2) KL=KV
!       IF(NTYPMT(KL,KH).GT.3) GO TO 2714   
!       NAR=NL(KL,KH)   
!       IF(NAR.EQ.0) GO TO 2714   
!       IF(NAR.EQ.1) GO TO 2714   
!       NFL=1 
!  2714 CONTINUE
!       NPASSG(KH)=NFL  
!       IF(NPASS(KH).EQ.0) GO TO 3821
!       IF(NTYPMT(1,KH).GT.3) GO TO 3822    
!       IF(TEMP(1,KH).LE.TSCS(NL(1,KH))) NPASS(KH)=0  
!       GO TO 3821      
!  3822 CONTINUE
!       IF(NTYPMT(1,KH).EQ.4) TFREEZ=TFMS   
!       IF(NTYPMT(1,KH).EQ.5) TFREEZ=TFOS   
!       IF(TEMP(1,KH).LE.TFREEZ) NPASS(KH)=0
!  3821 CONTINUE
!       IF(NBCINT(KH).EQ.2) GO TO 3823     
!       IF(NBCINT(KH).EQ.6) GO TO 3823      
!       IF(NBCINT(KH).EQ.8) GO TO 3823      
!       GO TO 4532      
!  3823 CONTINUE
!       IF(NCRSTM(KH).EQ.1) HCOMP=HOXIDE(KH)
!       IF(NCRSTM(KH).EQ.2) HCOMP=HMETAL(KH)
!       NCRRT(KH)=1     
!       IF(HCOMP.LE.0.D0) NCRRT(KH)=2
!  4532 CONTINUE
!       RETURN
!       END
! C...................................................................... 
! C.....BEFORE ENTERING ITERATION LOOP, CALCULATE MATERIAL PROPERITES OF
! C.....VARIOUS STRUCTURE, MELT, AND DEBRIS ZONES; THESE ARE ASSUMED
! C.....CONSTANT OVER THE TIMESTEP.
! C...................................................................... 
!       SUBROUTINE PROPEVL
!       IMPLICIT DOUBLE PRECISION(A-H,O-Z)
!       REAL(8) KL
!       DIMENSION HSEND(28)
!       COMMON/CATCHR/A(999),B(999),C(999),D(999),P(999),Q(999),
!      1RECON(999),DELVEL(999),DSRDT(999),DELHTS(999),EMAX(999,999),
!      2DBLKEN(999),DELHIT(16,999),SOURCE(16,999),SRCTOT(999),
!      3HCROLD(16,999),DCDOT(999),HCRUST(16,999),DFILM(16,999),
!      4DFMOLD(16,999),DENOLD(999),SIGOX(999),SIGCON(999),BET(999),
!      5TFZX(999),TFZC(999),TKX(999),TKM(999),THETO(999,999),
!      6THET1(999,999),OMEG0(4,999),OMEG1(4,999),TAO0(999),TAO1(999),
!      7SIG0(999),SIG1(999),TARGB(999),DADOT(999),DADOTG(999),
!      8XLOLD(4,999),VISREX(999),TATMS(999),HTMP(999),DHTMP(999),
!      9HTMOLD(999)
!       COMMON/CATCHI/NUMS(4,999),NUMOLD(4,999),NTRACK(16),NSUMP(999),
!      1NPASSG(999),NCRSTM(999),NCRRT(999),NPASS(999),NBURN,NBURNO     
!       COMMON/PRINTB/ELEVAT(999),ELOLD(999),XDIST(999,999),XBTW(999,999),
!      1TEMP(999,999),ENTHP(999,999),EOLD(999,999),ENBLK(999),EBKOLD(999),
!      2TBULK(999),HITE(16,999),HITOLD(16,999),HTOT(999),HTOLD(999),
!      3HTCFT(999),HTCOEF(999),QFLUXT(999),QFLUXB(999),VEL(999),ELO(999),
!      4VELOLD(999),SRSCOR(16),AREA(999),RAD(999),ARC(999),VOLCN(16),
!      5VOID(999),VGJ(999),ZABLAT(999),ZABOLD(999),DCRUST(999),
!      6DCROLD(999),DABCON(999),DABOLD(999),DFILMT(999),DFOLT(999),
!      7SMFLX(4,999),XLSMF(4,999),TOTVOL,XFACMS(999),XMFLXA,XMCORT,
!      8VCORT,TOTOX,TOTMET,QFLXT,QFLXB,TIME,DTIME,XMCOR(16),VCOR(16),
!      9TCONI,RSAND,HDOWNC,TBOUND,EMISCN,PDRYWL,XDISTO(999),QOXT(999),
!      1XLENSH,XBTWO(999),RCOMP,WDOOR,RSUMP,RSHELL,RPED,TPED,ELSMP,
!      1TENDP(10,999),TFRZSH,TDEBRS,TKDEBR,PDEBR,CPDEBR,ENENDP(10,999),
!      2ENOLDP(10,999),DXVERT,DXSNK,XDSTE(10,999),XBTE(10,999),HXLA(999),
!      3HXLB(999),TSFEB(999),DCRS(999),DCRSLD(999),HCRS(16,999),
!      4HCRSLD(16,999),THETE0(10,999),THETE1(10,999),QSHELL,QSHELE,TSHELI,
!      5SIGOXE(999),FKOXE(999),RINJC,XLSEC,ANGSEC,ANINJC,XLCHAN,WCHNL,
!      6TEFZX(999),TIMSPC(999),DXNODE(999),TNORM(999),FRCSOL(999),
!      7ALPSPR(999),CRAMCON,HINTF,TSHLMX,XFRMX(999),XFROX(999),XFRTX(999),
!      8XMLMX(999),XMLOX(999),XMLTX(999),XTOTX(999),TIMEO,TMAX,EDOWN(999),
!      9HCP(999)
!       COMMON/HCONS/HMETAL(999),HOXIDE(999)  
!       COMMON/PROPI/ NMATC,NMATFI,NMATFF,ICAOH2,ICACO3,IMCCO3,IFH2O,     
!      1IVH2O,ICK2O,IVK2O,INA2O,ITIO2,ISIO2,ICAO,IMGO,IAL2O3,IFEO,IFE2O3, 
!      2IFE3O4,IFE,ICR,INI,IZR,IU,IB4C,IB,ICR2O3,INIO,IUO2,IZRO2,IB2O3,   
!      3NBCINT(999),NODES(999),NUMNOD,IMOX(28),IBAS,ILCS,ILL,NACTIV(999),     
!      4NBFRZM,NBFRZO,NABLFM,NDRNFM,NTYPMT(999,999),NDOOR,NBMADJ,NUMSHV,   
!      5NBSHL(999),NCRSTS(999),NUMSHH,NSKIPE,NACSH,NWAT,NPEND,NBCBOT,
!      6NCRTOP,NBFZOE,NBFZME,NGEOM,NL(999,999),NFRSCT,NLOGSH,NADAB,NINVIS,
!      7NSIMST,NSTEEL,NOVHT,NOVTK,NOVUM,NOVEM,NOVSIG,NPLLOC(999),NBPL,
!      8IXP(999),IYP(999),NVTPE,NSOLTP,NSOLF,NINTF,IFLGA(999),ICTYPE,ICTC,
!      9NPOURS,NSMP,NPED,NDOR,NSHL,NANULS,NSMPCV,NBOIL,NSWALL,NMVER,
!      1NCRTEM,NTHINC,NVELP,NITMAX,NENMAX,NPRINT,NPFREQ,NTIMSPC,NPLFREQ,
!      2NPLTOT,NJET,NJETP,NJETD,NJETND,NODCAP,NVELPW,NITMAXW,NENMXW,
!      3IFLGJ(999),NBEDCQ,ISHELE
!       COMMON/PRINTR/ QFEH2O,QCRH2O,QZRH2O,QFECO2,QCRCO2,QZRCO2,
!      4XFH2OU,XFCAOH,XFMGCA,XFCACO,XZRMRE,XFEMRE,XCRMRE,XZRORE,XFEORE,   
!      5XCRORE,XMH2O,XMCO2,XMCACO,XMMGCA,XMCAOH,TFWL,TFWS,TBWL,TBWS,      
!      6TMCAL,TMCAS,TCAL,TCAS,TFOS,TFOL,TFMS,TFML,XVISC(28),SVISC(28),    
!      7XMOL(28),FMMOL(28),ROM(28),ROMLIQ(28),AEQM(28,2),BEQM(28,2),
!      8CEQM(28,2),ECL,ECS,ECAL,ECAS,EMCAL,EMCAS,EBWL,EBWS,EFWL,EFWS,    
!      9STEF,GRAV,PI,TCS,TCL,CCL,CCS,RMASSL,WPCC,WPM,WPA,WPCS,ROC,RMASSS,   
!      1ANGSHL,RSLAGL,RSLAGS,HNODT,VFAV,VGAV,QXAV,XWTSS(16),  
!      2TSCS(2),TSCL(2),ESCS(2),ESCL(2),CCSS(2),CCSL(2),ROSTLS,ROSTLL,
!      3XFRGAS,HMINC,TST(99),TSTOP(99),AINTP(99),BINTP(99),DRATIO(999),
!      4XBCN(999),XDCN(999),XBLT(15),ADEC(99),BDEC(99),APOUR(16,99),
!      5BPOUR(16,99),XWTC(14),BWIDTH,THCKCV,TMBOIL,TEBOIL,VFINT,ANGFAN,
!      6ALPMAX,THSHL,XFCABL,XNDMIN,DVMX,DAVMX,DEAVMX,DEMX,TDC,QDCU,QDCUO2,
!      7TSINJ,EINJ,DTINJ,TKINJ,ROEV,CPINJ,SURFT,VSINJ,EMINJ,TSINJO,EINJO,
!      8DTINJO,TKINJO,ROEVO,CPINJO,SURFTO,VSINJO,EMINJO,XLEADE,ARSUM,
!      9DBUBOX,UTRISE,TREMSH,DJET,DFALL,WEBER,FROUDE,XPSAITO,XPEPSTN,
!      1FRAG,XMBEDT,XMBED(16),XLPENT,XLPENA,UJET,UFALL,HFALL,ERPV,
!      2TJETT(99),DJETT(99),HWATP,XDOTJET,DVMXW,DAVMXW,DEMXW,DEAVMXW,
!      3QJETW,XSTMJF,TINTSJF,ESAT,DRDOOR,DRANL,EI,QDCBUO2,QDCBU,
!      4EBEDS,EBEDB
!       COMMON /WATVARS/FCRUST(999),VLW(999),VLWOLD(999),DWAT(999),
!      1DWATOLD(999),EWAT(999),EWATOLD(999),TWAT(999),CORDDC(999),
!      2DSRDC(999),DHDC(999),TSRDC,TINTDC,HWATB(999),TSURFW(999),XMS(999),
!      3XMST,XINTS,ESRDTW(999),TSRDTW(999),DSRDTW(999),TSRDW,TINTDW,
!      4TWATI,ELDCO(999),ELDCX(999,99),CRDCX(999,99),TIMINJ(999,99),
!      5XDTINJ(999,99),TDTINJ(999,99),ELWATI,XMWAT,XMWATO,XBALW,
!      6HDRY(999),EINTW,XMCT(199),XMCDT(16,999),TMPCDT(999),CMPCDT(999),
!      7FDC(999),FCOV(999),FBED(999),FHEAT(999),XFACJ(999),
!      8XMBEDJ(16,999),XMBEDJT(999),PBED,QBED(999),QWATER(999),
!      9QSURFACE(999),QWATERT(999),HBED(999),POROSBED,XMCRDT(16,999),
!      1XMCRT(999),XMBDINT(999),XMT(999)
!       COMMON/BLKHT/TKMLT,PM,CM,UM,EMISM,SIGMAM,TKNC,PNC,CNC,UNC    
!       COMMON/BASPR/ HBMT(999,999,16),HBMOLD(999,999,16) 
!       COMMON/DEFUNC/CPLIQP,CPSOLP,EFOSP,EFOLP,EFMSP,EFMLP     
!       COMMON/PROPB/CPBM(999),FKB(999,999),DENB(999,999),DTDEB(999,999),
!      1EMIBM(999),DENCRS(999),ENCRS(999),FKRF(999),DENRF(999),CPRF(999) 
!       COMMON/PROPM/DTDEM(999),CPMLT(999),FKMLT(999),DENMLT(999),
!      1SIGMLT(999),UMMLT(999),EMIMLT(999)      
! C.....CALCULATE WATER SATURATION TEMPERATURE IF NEEDED.
!       IF(NWAT.GT.0) CALL CONWAT(TSAT,KL,PL,CL,UL,HLV,EWL,EWV,CWV,SIGMA,
!      1PDRYWL)
! C.....FIRST GET PARTICLE BED PROPERTIES WHICH AT THIS POINT ARE ONLY
! C.....THE SPECIFIC ENTHALPIES AT SATURATION TEMPERATURE IF WATER IS
! C.....PRESENT OR AT ABOVE STRUCTURE TEMPERATURE IF WATER IS ABSENT.
!       EBEDS=0.D0
!       EBEDB=0.D0
!       IF(XMBEDT.LE.0.D0) GO TO 4539
!       HSUM=0.E0
!       DO 4538 KTP=1,15
!       CALL INDEX(KTP,KJ)
!       HSEND(KJ)=XMBED(KTP)/ROM(KJ)
!       HSUM=HSUM+HSEND(KJ)
!  4538 CONTINUE
!       HSEND(10)=(WPCS*XMBED(16))/ROM(ISIO2)   
!       HSEND(11)=(WPCC*XMBED(16))/ROM(ICAO)    
!       HSEND(12)=(WPM*XMBED(16))/ROM(IMGO)     
!       HSEND(13)=(WPA*XMBED(16))/ROM(IAL2O3)   
!       HSUM=HSUM+HSEND(10)+HSEND(11)+HSEND(12)+HSEND(13)
!       CALL ETF(EBEDB,HSEND,TBOUND,DPASS)    
!       IF(NWAT.EQ.0) GO TO 4539
!       CALL ETF(EBEDS,HSEND,TSAT,DPASS)    
!  4539 CONTINUE
!       DO 3735 J=1,NUMNOD
!       IF(NACTIV(J).EQ.0) GO TO 3735
! C.....NOW CALCULATE MELT PROPERTIES AT ACTIVE NODES.    
!       ALPSPR(J)=1.D0
!       IF(HTOT(J).LE.0.D0) GO TO 1516      
!       CALL MASFRA(HITE,ROMLIQ,J,RSLAGL,ROC,DENMLT(J),0)
!       CALL ASINEA(HITE,J,HSEND,ROMLIQ,WPCC,WPM,WPA,WPCS,ROC,RSLAGL,0)   
!       CALL TEF(ENBLK(J),HSEND,TPASS,DTDE) 
!       DTDEM(J)=DTDE   
!       CPMLT(J)=CPLIQP 
!       CALL CONDF(TBULK(J),HSEND,FKO,FKM,FKMLT(J))   
!       CALL TEN(TBULK(J),HSEND,SIGMLT(J))  
!       CALL VISCF(TBULK(J),HSEND,VISFLO,VISFLM,UMMLT(J),VISREX(J))
!       CALL EMISF(TBULK(J),HSEND,EMIMLT(J))
!       CALL SOLCALC(TBULK(J),HSEND,VFM,VFO,VSOLM,VSOLO,ALPSPR(J))
!       TDOWN=TBOUND    
!       IF(NWAT.EQ.0) GO TO 2232
!       IF(DWAT(J).LE.0.D0) GO TO 2232
!       TDOWN=TSAT+1.D0  
!  2232 CONTINUE
!       CALL ETF(EDOWN(J),HSEND,TDOWN,DTDE)    
!  1516 CONTINUE
! C.....IF CRUST GROWTH IS SPECIFIED, CALCULATE CRUST PROPERTIES.
!       IF(NBCINT(J).EQ.1.OR.NBCINT(J).EQ.4.OR.NBCINT(J).EQ.5) GO TO 931  
!       TFZX(J)=TFOS    
!       IF(NCRSTM(J).EQ.2) TFZX(J)=TFMS    
!       IF(NBCINT(J).EQ.3.OR.NBCINT(J).EQ.7.OR.NBCINT(J).EQ.9) GO TO 931  
!       CALL ASINEA(HCRUST,J,HSEND,ROM,WPCC,WPM,WPA,WPCS,ROC,RSLAGS,NCRSTM
!      1(J))  
!       CALL TEF(ENBLK(J),HSEND,TPASS,DTDE) 
!       IF(NCRSTM(J).EQ.2) GO TO 58
!       HFREEZ=EFOLP-EFOSP
!       ENCRS(J)=EFOSP  
!       GO TO 59
!    58 CONTINUE
!       HFREEZ=EFMLP-EFMSP
!       ENCRS(J)=EFMSP  
!    59 CONTINUE
!       CALL CONDF(TFZX(J),HSEND,FKO,FKM,TKX(J))      
!       CALL MASFRA(HCRUST,ROM,J,RSLAGS,ROC,DENCR,NCRSTM(J))    
!       DENCRS(J)=DENCR 
!       SIGOX(J)=(DENCR*HFREEZ)/(2.D0*DTIME)
!   931 CONTINUE
! C.....CALCULATE ABLATING SUBSTRATE PROPERTIES IF ABLATION IS OCCURING.  
!       IF(NBCINT(J).GT.3) GO TO 935
!       NDRIVE=1
!       IF(NTYPMT(1,J).GT.3) GO TO 2719     
!       CPBM(J)=CCSS(NL(1,J))     
!       CALL EMISC(TEMP(1,J),NTYPMT(1,J),EMIBM(J),NL(1,J))      
!       GO TO 936
!  2719 CONTINUE
!       CALL ASINED(1,J,HSEND,ROM,WPCC,WPM,WPA,WPCS,ROC,RSLAGS,0)
!       CALL TEF(ENTHP(1,J),HSEND,TPASS,DTDE)
!       CPBM(J)=CPSOLP  
!       CALL EMISF(TEMP(1,J),HSEND,EMIBM(J))
!       GO TO 936
!   935 CONTINUE
!       NDRIVE=3
!       ZCOMP=XDISTO(J)-ZABLAT(J) 
!       IP=2  
!       IF(ZCOMP.LT.XBTWO(J)) IP=1
!       IF(NTYPMT(IP,J).GT.3) GO TO 937     
!       TFZC(J)=TSCS(NL(IP,J))    
!       TLIQP=TSCL(NL(IP,J))      
!       HABL=ESCL(NL(IP,J))-ESCS(NL(IP,J))  
!       DTDEB(IP,J)=1./CCSS(NL(IP,J))
!       DENB(IP,J)=ROC  
!       IF(NL(IP,J).EQ.2) DENB(IP,J)=ROSTLS
!       DRATIO(J)=RMASSS/RSLAGL   
!       IF(NL(IP,J).EQ.2) DRATIO(J)=ROSTLS/ROSTLL    
!       CALL CONDC(TEMP(IP,J),NTYPMT(IP,J),FKB(IP,J),NL(IP,J))  
!       CALL CONDC(TLIQP,NTYPMT(IP,J),FKRF(J),NL(IP,J))
!       CPBM(J)=CCSS(NL(IP,J))    
!       CPRF(J)=CCSL(NL(IP,J))    
!       DENRF(J)=RSLAGL*ROC
!       IF(NL(IP,J).EQ.2) DENRF(J)=ROSTLL  
!       CALL EMISC(TFZC(J),NTYPMT(IP,J),EMIBM(J),NL(IP,J))      
!       GO TO 938
!   937 CONTINUE
!       CALL ASINED(IP,J,HSEND,ROM,WPCC,WPM,WPA,WPCS,ROC,RSLAGS,0)
!       CALL TEF(ENTHP(IP,J),HSEND,TPASS,DTDE)
!       IF(NTYPMT(IP,J).EQ.5) GO TO 939     
!       TFZC(J)=TFMS    
!       TLIQP=TFML      
!       HABL=EFMLP-EFMSP
!       GO TO 940
!   939 CONTINUE
!       TFZC(J)=TFOS    
!       TLIQP=TFOL      
!       HABL=EFOLP-EFOSP
!   940 CONTINUE
!       DTDEB(IP,J)=DTDE
!       CPBM(J)=CPSOLP  
!       CPRF(J)=CPLIQP  
!       CALL MASFRD(ROMLIQ,IP,J,RSLAGL,ROC,DENRF(J))  
!       CALL MASFRD(ROM,IP,J,RSLAGS,ROC,DENB(IP,J))   
!       DRATIO(J)=DENB(IP,J)/DENRF(J)
!       CALL CONDF(TFZC(J),HSEND,FKO,FKM,FKB(IP,J))   
!       CALL CONDF(TLIQP,HSEND,FKO,FKM,FKRF(J))
!       CALL EMISF(TFZC(J),HSEND,EMIBM(J))  
!   938 CONTINUE
!       IF(IP.EQ.1) GO TO 942     
!       FKB(IP-1,J)=FKB(IP,J)     
!       DENB(IP-1,J)=DENB(IP,J)   
!       DTDEB(IP-1,J)=DTDEB(IP,J) 
!       BET(J)=FKB(IP,J)
!       GO TO 943
!   942 CONTINUE
!       ZLINT=XBTWO(J)-ZCOMP      
!       ZRINT=XDISTO(J)-XBTWO(J)  
!       IP1=IP+1
!       IF(NTYPMT(IP1,J).GT.3) GO TO 944    
!       CALL CONDC(TEMP(IP1,J),NTYPMT(IP1,J),FKB(IP1,J),NL(IP1,J))
!       CALL TEC(ENTHP(IP1,J),EMAX(IP1,J),TPASS,DTDE,RMASS,YCACO3,YMCCO3,Y
!      1CAOH2,YFH2O,NL(IP1,J))    
!       DTDEB(IP1,J)=DTDE
!       DENB(IP1,J)=ROC 
!       IF(NL(IP1,J).EQ.2) DENB(IP1,J)=ROSTLS
!       GO TO 945
!   944 CONTINUE
!       CALL ASINED(IP1,J,HSEND,ROMLIQ,WPCC,WPM,WPA,WPCS,ROC,RSLAGS,0)    
!       CALL ETF(EPS,HSEND,TEMP(IP1,J),DTDEB(IP1,J))  
!       CALL CONDF(TEMP(IP1,J),HSEND,FKO,FKM,FKB(IP1,J))
!       CALL MASFRD(ROM,IP1,J,RSLAGS,ROC,DENB(IP1,J)) 
!   945 CONTINUE
!       BET(J)=(ZABLAT(J)*FKB(IP,J)*FKB(IP1,J))/(FKB(IP,J)*ZRINT+FKB(IP1,J
!      1)*ZLINT)
!   943 CONTINUE
!       HEVAL=HABL      
!       IF(NTYPMT(IP,J).GT.3) GO TO 5121    
!       IF(NL(IP,J).EQ.2) GO TO 5121
!       IF(DADOTG(J).GE.0.D0) GO TO 5121    
!       C1=ESCL(NL(IP,J))
!       C2=BET(J)*(TFZC(J)-TEMP(2,J))
!       C3=DENB(IP,J)*ZABLAT(J)*ABS(DADOTG(J))
!       HEVAL=C1-C2/C3  
!       HEVAL=DMAX1(HEVAL,HABL)   
!       HEVAL=DMIN1(ESCL(NL(IP,J)),HEVAL)   
!  5121 CONTINUE
!       SIGCON(J)=(DENB(IP,J)*HEVAL)/(2.D0*DTIME)     
! C.....CALCULATE MOLTEN FILM PROPERTIES IF FILM EXISTS.
!       IF(NBCINT(J).EQ.5.OR.NBCINT(J).EQ.8.OR.NBCINT(J).EQ.9) GO TO 946  
!       GO TO 936
!   946 CONTINUE
!       CALL ASINEA(DFILM,J,HSEND,ROMLIQ,WPCC,WPM,WPA,WPCS,ROC,RSLAGL,0)  
!       CALL CONDF(TFZC(J),HSEND,FKO,FKM,TKM(J))      
!   936 CONTINUE
!       DO 3719 KV=NDRIVE,NODES(J)
!       IF(NTYPMT(KV,J).GT.3) GO TO 950     
!       CALL CONDC(TEMP(KV,J),NTYPMT(KV,J),FKB(KV,J),NL(KV,J))  
!       IF(NL(KV,J).EQ.2) GO TO 949
!       DENB(KV,J)=ROC  
!       GO TO 3719      
!   949 CONTINUE
!       DENB(KV,J)=ROSTLS
!       GO TO 3719      
!   950 CONTINUE
!       CALL ASINED(KV,J,HSEND,ROM,WPCC,WPM,WPA,WPCS,ROC,RSLAGS,0)
!       CALL CONDF(TEMP(KV,J),HSEND,FKO,FKM,FKB(KV,J))
!       CALL MASFRD(ROM,KV,J,RSLAGS,ROC,DENB(KV,J))   
!  3719 CONTINUE
!  3735 CONTINUE
! C.....IF MELT HAS CONTACTED THE SHELL AND THE SHELL HEATUP CALCULATION  
! C.....IS BEING PERFORMED, CALCULATE LOCAL SHELL CRUST PROPERTIES.
!       IF(NSKIPE.EQ.0) GO TO 6211
!       IF(ISHELE.EQ.1) GO TO 6211
!       IF(NACSH.EQ.0) GO TO 6211 
!       DO 6212 KV=2,NUMSHV
!       IF(NBSHL(KV).EQ.1) GO TO 6212
!       CALL ASINEA(HCRS,KV,HSEND,ROM,WPCC,WPM,WPA,WPCS,ROC,RSLAGL,NCRSTS(
!      1KV))  
!       CALL TEF(ENBLK(NBMADJ),HSEND,TPASS,DTDE)      
!       IF(NCRSTS(KV).EQ.2) GO TO 6213     
!       TEFZX(KV)=TFOS  
!       IF(NCRTEM.EQ.1) TEFZX(KV)=TREMSH    
!       TEFZX(KV)=DMAX1(TFOS,TREMSH)
!       HOX=EFOLP-EFOSP 
!       GO TO 6214      
!  6213 CONTINUE
!       TEFZX(KV)=TFMS  
!       IF(NCRTEM.EQ.1) TEFZX(KV)=TREMSH    
!       TEFZX(KV)=DMAX1(TFMS,TREMSH)
!       HOX=EFMLP-EFMSP 
!  6214 CONTINUE
!       CALL MASFRA(HCRS,ROM,KV,RSLAGL,ROC,DENCA,NCRSTS(KV))    
!       SIGOXE(KV)=(DENCA*HOX)/(2.D0*DTIME) 
!       CALL CONDF(TEFZX(KV),HSEND,FKO,FKM,FKOXE(KV)) 
!  6212 CONTINUE
!  6211 CONTINUE
!       RETURN
!       END
! C...................................................................... 
! C.....SUBROUTINE SAVER SAVES OLD DATA PRIOR TO INITIATION OF TIMESTEP.
! C.....NOTHING SOPHISTICATED HERE.
! C...................................................................... 
!       SUBROUTINE SAVER
!       IMPLICIT DOUBLE PRECISION(A-H,O-Z)
!       COMMON/CATCHR/A(999),B(999),C(999),D(999),P(999),Q(999),
!      1RECON(999),DELVEL(999),DSRDT(999),DELHTS(999),EMAX(999,999),
!      2DBLKEN(999),DELHIT(16,999),SOURCE(16,999),SRCTOT(999),
!      3HCROLD(16,999),DCDOT(999),HCRUST(16,999),DFILM(16,999),
!      4DFMOLD(16,999),DENOLD(999),SIGOX(999),SIGCON(999),BET(999),
!      5TFZX(999),TFZC(999),TKX(999),TKM(999),THETO(999,999),
!      6THET1(999,999),OMEG0(4,999),OMEG1(4,999),TAO0(999),TAO1(999),
!      7SIG0(999),SIG1(999),TARGB(999),DADOT(999),DADOTG(999),
!      8XLOLD(4,999),VISREX(999),TATMS(999),HTMP(999),DHTMP(999),
!      9HTMOLD(999)
!       COMMON/CATCHI/NUMS(4,999),NUMOLD(4,999),NTRACK(16),NSUMP(999),
!      1NPASSG(999),NCRSTM(999),NCRRT(999),NPASS(999),NBURN,NBURNO     
!       COMMON/PRINTB/ELEVAT(999),ELOLD(999),XDIST(999,999),XBTW(999,999),
!      1TEMP(999,999),ENTHP(999,999),EOLD(999,999),ENBLK(999),EBKOLD(999),
!      2TBULK(999),HITE(16,999),HITOLD(16,999),HTOT(999),HTOLD(999),
!      3HTCFT(999),HTCOEF(999),QFLUXT(999),QFLUXB(999),VEL(999),ELO(999),
!      4VELOLD(999),SRSCOR(16),AREA(999),RAD(999),ARC(999),VOLCN(16),
!      5VOID(999),VGJ(999),ZABLAT(999),ZABOLD(999),DCRUST(999),
!      6DCROLD(999),DABCON(999),DABOLD(999),DFILMT(999),DFOLT(999),
!      7SMFLX(4,999),XLSMF(4,999),TOTVOL,XFACMS(999),XMFLXA,XMCORT,
!      8VCORT,TOTOX,TOTMET,QFLXT,QFLXB,TIME,DTIME,XMCOR(16),VCOR(16),
!      9TCONI,RSAND,HDOWNC,TBOUND,EMISCN,PDRYWL,XDISTO(999),QOXT(999),
!      1XLENSH,XBTWO(999),RCOMP,WDOOR,RSUMP,RSHELL,RPED,TPED,ELSMP,
!      1TENDP(10,999),TFRZSH,TDEBRS,TKDEBR,PDEBR,CPDEBR,ENENDP(10,999),
!      2ENOLDP(10,999),DXVERT,DXSNK,XDSTE(10,999),XBTE(10,999),HXLA(999),
!      3HXLB(999),TSFEB(999),DCRS(999),DCRSLD(999),HCRS(16,999),
!      4HCRSLD(16,999),THETE0(10,999),THETE1(10,999),QSHELL,QSHELE,TSHELI,
!      5SIGOXE(999),FKOXE(999),RINJC,XLSEC,ANGSEC,ANINJC,XLCHAN,WCHNL,
!      6TEFZX(999),TIMSPC(999),DXNODE(999),TNORM(999),FRCSOL(999),
!      7ALPSPR(999),CRAMCON,HINTF,TSHLMX,XFRMX(999),XFROX(999),XFRTX(999),
!      8XMLMX(999),XMLOX(999),XMLTX(999),XTOTX(999),TIMEO,TMAX,EDOWN(999),
!      9HCP(999)
!       COMMON/PROPI/ NMATC,NMATFI,NMATFF,ICAOH2,ICACO3,IMCCO3,IFH2O,     
!      1IVH2O,ICK2O,IVK2O,INA2O,ITIO2,ISIO2,ICAO,IMGO,IAL2O3,IFEO,IFE2O3, 
!      2IFE3O4,IFE,ICR,INI,IZR,IU,IB4C,IB,ICR2O3,INIO,IUO2,IZRO2,IB2O3,   
!      3NBCINT(999),NODES(999),NUMNOD,IMOX(28),IBAS,ILCS,ILL,NACTIV(999),     
!      4NBFRZM,NBFRZO,NABLFM,NDRNFM,NTYPMT(999,999),NDOOR,NBMADJ,NUMSHV,   
!      5NBSHL(999),NCRSTS(999),NUMSHH,NSKIPE,NACSH,NWAT,NPEND,NBCBOT,
!      6NCRTOP,NBFZOE,NBFZME,NGEOM,NL(999,999),NFRSCT,NLOGSH,NADAB,NINVIS,
!      7NSIMST,NSTEEL,NOVHT,NOVTK,NOVUM,NOVEM,NOVSIG,NPLLOC(999),NBPL,
!      8IXP(999),IYP(999),NVTPE,NSOLTP,NSOLF,NINTF,IFLGA(999),ICTYPE,ICTC,
!      9NPOURS,NSMP,NPED,NDOR,NSHL,NANULS,NSMPCV,NBOIL,NSWALL,NMVER,
!      1NCRTEM,NTHINC,NVELP,NITMAX,NENMAX,NPRINT,NPFREQ,NTIMSPC,NPLFREQ,
!      2NPLTOT,NJET,NJETP,NJETD,NJETND,NODCAP,NVELPW,NITMAXW,NENMXW,
!      3IFLGJ(999),NBEDCQ,ISHELE
!       COMMON /WATVARS/FCRUST(999),VLW(999),VLWOLD(999),DWAT(999),
!      1DWATOLD(999),EWAT(999),EWATOLD(999),TWAT(999),CORDDC(999),
!      2DSRDC(999),DHDC(999),TSRDC,TINTDC,HWATB(999),TSURFW(999),XMS(999),
!      3XMST,XINTS,ESRDTW(999),TSRDTW(999),DSRDTW(999),TSRDW,TINTDW,
!      4TWATI,ELDCO(999),ELDCX(999,99),CRDCX(999,99),TIMINJ(999,99),
!      5XDTINJ(999,99),TDTINJ(999,99),ELWATI,XMWAT,XMWATO,XBALW,
!      6HDRY(999),EINTW,XMCT(199),XMCDT(16,999),TMPCDT(999),CMPCDT(999),
!      7FDC(999),FCOV(999),FBED(999),FHEAT(999),XFACJ(999),
!      8XMBEDJ(16,999),XMBEDJT(999),PBED,QBED(999),QWATER(999),
!      9QSURFACE(999),QWATERT(999),HBED(999),POROSBED,XMCRDT(16,999),
!      1XMCRT(999),XMBDINT(999),XMT(999)
!       COMMON /WATINT/NDOWNC,NDC(999),NPTDC(999),NINJ,NINJP(999),
!      1NPTINJ(999)
!       COMMON/PROPM/DTDEM(999),CPMLT(999),FKMLT(999),DENMLT(999),
!      1SIGMLT(999),UMMLT(999),EMIMLT(999)      
!       COMMON/BASPR/ HBMT(999,999,16),HBMOLD(999,999,16) 
!       DO 117 KT=1,NUMNOD
!       ELOLD(KT)=ELEVAT(KT)      
!       EBKOLD(KT)=ENBLK(KT)      
!       EWATOLD(KT)=EWAT(KT)
!       HTOLD(KT)=HTOT(KT)
!       VELOLD(KT)=VEL(KT)
!       VLWOLD(KT)=VLW(KT)
!       DWATOLD(KT)=DWAT(KT)
!       ZABOLD(KT)=ZABLAT(KT)     
!       DCROLD(KT)=DCRUST(KT)     
!       DABOLD(KT)=DABCON(KT)     
!       DFOLT(KT)=DFILMT(KT)      
!       HTMP(KT)=HTOT(KT)
!       HTMOLD(KT)=HTMP(KT)
!       DENOLD(KT)=DENMLT(KT)
!   117 CONTINUE
!       DO 115 KN=1,NUMNOD
!       DO 1118 KT=1,16 
!       HITOLD(KT,KN)=HITE(KT,KN) 
!       HCROLD(KT,KN)=HCRUST(KT,KN)
!       DFMOLD(KT,KN)=DFILM(KT,KN)
!  1118 CONTINUE
!   115 CONTINUE
!       DO 1211 KX=1,NUMNOD
!       DO 1212 KY=1,NODES(KX)    
!       EOLD(KY,KX)=ENTHP(KY,KX)  
!       IF(NTYPMT(KY,KX).GT.3) GO TO 1618   
!       IF(NL(KY,KX).EQ.2) GO TO 1618      
!       IF(ENTHP(KY,KX).GT.EMAX(KY,KX)) EMAX(KY,KX)=ENTHP(KY,KX)
!  1618 CONTINUE
!       IF(NTYPMT(KY,KX).LE.3) GO TO 1212   
!       DO 1213 KT=1,16 
!       HBMOLD(KY,KX,KT)=HBMT(KY,KX,KT)     
!  1213 CONTINUE
!  1212 CONTINUE
!  1211 CONTINUE
!       DO 1219 KN=1,NUMNOD
!       DO 1226 KG=1,4  
!       XLOLD(KG,KN)=XLSMF(KG,KN) 
!       NUMOLD(KG,KN)=NUMS(KG,KN) 
!  1226 CONTINUE
!  1219 CONTINUE
!       IF(NSKIPE.EQ.0) GO TO 9319
!       IF(ISHELE.EQ.1) GO TO 9319
!       IF(NACSH.EQ.0) GO TO 9319 
!       DO 9320 KV=1,NUMSHV
!       DCRSLD(KV)=DCRS(KV)
!       DO 9321 KH=1,NUMSHH
!       ENOLDP(KH,KV)=ENENDP(KH,KV)
!  9321 CONTINUE
!       IF(NBSHL(KV).EQ.1) GO TO 9320
!       DO 9322 KT=1,16 
!       HCRSLD(KT,KV)=HCRS(KT,KV) 
!  9322 CONTINUE
!  9320 CONTINUE
!  9319 CONTINUE
!       RETURN
!       END
! C...................................................................... 
! C.....SUBROUTINE VELCALC SOLVES THE 1-D TRANSIENT MOMENTUM EQUATION FOR
! C.....SPREADING VELOCITIES ACROSS THE MESH USING AN APPROXIMATE 
! C.....CONSERVATION OF MASS EQUATION.
! C...................................................................... 
!       SUBROUTINE VELCALC
!       IMPLICIT DOUBLE PRECISION(A-H,O-Z)
!       COMMON/CATCHR/A(999),B(999),C(999),D(999),P(999),Q(999),
!      1RECON(999),DELVEL(999),DSRDT(999),DELHTS(999),EMAX(999,999),
!      2DBLKEN(999),DELHIT(16,999),SOURCE(16,999),SRCTOT(999),
!      3HCROLD(16,999),DCDOT(999),HCRUST(16,999),DFILM(16,999),
!      4DFMOLD(16,999),DENOLD(999),SIGOX(999),SIGCON(999),BET(999),
!      5TFZX(999),TFZC(999),TKX(999),TKM(999),THETO(999,999),
!      6THET1(999,999),OMEG0(4,999),OMEG1(4,999),TAO0(999),TAO1(999),
!      7SIG0(999),SIG1(999),TARGB(999),DADOT(999),DADOTG(999),
!      8XLOLD(4,999),VISREX(999),TATMS(999),HTMP(999),DHTMP(999),
!      9HTMOLD(999)
!       COMMON/CATCHI/NUMS(4,999),NUMOLD(4,999),NTRACK(16),NSUMP(999),
!      1NPASSG(999),NCRSTM(999),NCRRT(999),NPASS(999),NBURN,NBURNO     
!       COMMON/PRINTB/ELEVAT(999),ELOLD(999),XDIST(999,999),XBTW(999,999),
!      1TEMP(999,999),ENTHP(999,999),EOLD(999,999),ENBLK(999),EBKOLD(999),
!      2TBULK(999),HITE(16,999),HITOLD(16,999),HTOT(999),HTOLD(999),
!      3HTCFT(999),HTCOEF(999),QFLUXT(999),QFLUXB(999),VEL(999),ELO(999),
!      4VELOLD(999),SRSCOR(16),AREA(999),RAD(999),ARC(999),VOLCN(16),
!      5VOID(999),VGJ(999),ZABLAT(999),ZABOLD(999),DCRUST(999),
!      6DCROLD(999),DABCON(999),DABOLD(999),DFILMT(999),DFOLT(999),
!      7SMFLX(4,999),XLSMF(4,999),TOTVOL,XFACMS(999),XMFLXA,XMCORT,
!      8VCORT,TOTOX,TOTMET,QFLXT,QFLXB,TIME,DTIME,XMCOR(16),VCOR(16),
!      9TCONI,RSAND,HDOWNC,TBOUND,EMISCN,PDRYWL,XDISTO(999),QOXT(999),
!      1XLENSH,XBTWO(999),RCOMP,WDOOR,RSUMP,RSHELL,RPED,TPED,ELSMP,
!      1TENDP(10,999),TFRZSH,TDEBRS,TKDEBR,PDEBR,CPDEBR,ENENDP(10,999),
!      2ENOLDP(10,999),DXVERT,DXSNK,XDSTE(10,999),XBTE(10,999),HXLA(999),
!      3HXLB(999),TSFEB(999),DCRS(999),DCRSLD(999),HCRS(16,999),
!      4HCRSLD(16,999),THETE0(10,999),THETE1(10,999),QSHELL,QSHELE,TSHELI,
!      5SIGOXE(999),FKOXE(999),RINJC,XLSEC,ANGSEC,ANINJC,XLCHAN,WCHNL,
!      6TEFZX(999),TIMSPC(999),DXNODE(999),TNORM(999),FRCSOL(999),
!      7ALPSPR(999),CRAMCON,HINTF,TSHLMX,XFRMX(999),XFROX(999),XFRTX(999),
!      8XMLMX(999),XMLOX(999),XMLTX(999),XTOTX(999),TIMEO,TMAX,EDOWN(999),
!      9HCP(999)
!       COMMON/HCONS/HMETAL(999),HOXIDE(999)  
!       COMMON/PROPI/ NMATC,NMATFI,NMATFF,ICAOH2,ICACO3,IMCCO3,IFH2O,     
!      1IVH2O,ICK2O,IVK2O,INA2O,ITIO2,ISIO2,ICAO,IMGO,IAL2O3,IFEO,IFE2O3, 
!      2IFE3O4,IFE,ICR,INI,IZR,IU,IB4C,IB,ICR2O3,INIO,IUO2,IZRO2,IB2O3,   
!      3NBCINT(999),NODES(999),NUMNOD,IMOX(28),IBAS,ILCS,ILL,NACTIV(999),     
!      4NBFRZM,NBFRZO,NABLFM,NDRNFM,NTYPMT(999,999),NDOOR,NBMADJ,NUMSHV,   
!      5NBSHL(999),NCRSTS(999),NUMSHH,NSKIPE,NACSH,NWAT,NPEND,NBCBOT,
!      6NCRTOP,NBFZOE,NBFZME,NGEOM,NL(999,999),NFRSCT,NLOGSH,NADAB,NINVIS,
!      7NSIMST,NSTEEL,NOVHT,NOVTK,NOVUM,NOVEM,NOVSIG,NPLLOC(999),NBPL,
!      8IXP(999),IYP(999),NVTPE,NSOLTP,NSOLF,NINTF,IFLGA(999),ICTYPE,ICTC,
!      9NPOURS,NSMP,NPED,NDOR,NSHL,NANULS,NSMPCV,NBOIL,NSWALL,NMVER,
!      1NCRTEM,NTHINC,NVELP,NITMAX,NENMAX,NPRINT,NPFREQ,NTIMSPC,NPLFREQ,
!      2NPLTOT,NJET,NJETP,NJETD,NJETND,NODCAP,NVELPW,NITMAXW,NENMXW,
!      3IFLGJ(999),NBEDCQ,ISHELE
!       COMMON/PRINTR/ QFEH2O,QCRH2O,QZRH2O,QFECO2,QCRCO2,QZRCO2,
!      4XFH2OU,XFCAOH,XFMGCA,XFCACO,XZRMRE,XFEMRE,XCRMRE,XZRORE,XFEORE,   
!      5XCRORE,XMH2O,XMCO2,XMCACO,XMMGCA,XMCAOH,TFWL,TFWS,TBWL,TBWS,      
!      6TMCAL,TMCAS,TCAL,TCAS,TFOS,TFOL,TFMS,TFML,XVISC(28),SVISC(28),    
!      7XMOL(28),FMMOL(28),ROM(28),ROMLIQ(28),AEQM(28,2),BEQM(28,2),
!      8CEQM(28,2),ECL,ECS,ECAL,ECAS,EMCAL,EMCAS,EBWL,EBWS,EFWL,EFWS,    
!      9STEF,GRAV,PI,TCS,TCL,CCL,CCS,RMASSL,WPCC,WPM,WPA,WPCS,ROC,RMASSS,   
!      1ANGSHL,RSLAGL,RSLAGS,HNODT,VFAV,VGAV,QXAV,XWTSS(16),  
!      2TSCS(2),TSCL(2),ESCS(2),ESCL(2),CCSS(2),CCSL(2),ROSTLS,ROSTLL,
!      3XFRGAS,HMINC,TST(99),TSTOP(99),AINTP(99),BINTP(99),DRATIO(999),
!      4XBCN(999),XDCN(999),XBLT(15),ADEC(99),BDEC(99),APOUR(16,99),
!      5BPOUR(16,99),XWTC(14),BWIDTH,THCKCV,TMBOIL,TEBOIL,VFINT,ANGFAN,
!      6ALPMAX,THSHL,XFCABL,XNDMIN,DVMX,DAVMX,DEAVMX,DEMX,TDC,QDCU,QDCUO2,
!      7TSINJ,EINJ,DTINJ,TKINJ,ROEV,CPINJ,SURFT,VSINJ,EMINJ,TSINJO,EINJO,
!      8DTINJO,TKINJO,ROEVO,CPINJO,SURFTO,VSINJO,EMINJO,XLEADE,ARSUM,
!      9DBUBOX,UTRISE,TREMSH,DJET,DFALL,WEBER,FROUDE,XPSAITO,XPEPSTN,
!      1FRAG,XMBEDT,XMBED(16),XLPENT,XLPENA,UJET,UFALL,HFALL,ERPV,
!      2TJETT(99),DJETT(99),HWATP,XDOTJET,DVMXW,DAVMXW,DEMXW,DEAVMXW,
!      3QJETW,XSTMJF,TINTSJF,ESAT,DRDOOR,DRANL,EI,QDCBUO2,QDCBU,
!      4EBEDS,EBEDB
!       COMMON/PROPM/DTDEM(999),CPMLT(999),FKMLT(999),DENMLT(999),
!      1SIGMLT(999),UMMLT(999),EMIMLT(999)      
!       COMMON/PROPB/CPBM(999),FKB(999,999),DENB(999,999),DTDEB(999,999),
!      1EMIBM(999),DENCRS(999),ENCRS(999),FKRF(999),DENRF(999),CPRF(999) 
! C.....FIRST ZERO OUT PREVIOUS APROXIMATE HEIGHT AND VELOCITY ICNREMENTS
! C.....AND CALCULATE QUANTITIES BASED ON PREVIOUS TIMESTEP DATA.
!       DO 1181 KN=1,NUMNOD
!       DELVEL(KN)=0.D0
!       DHTMP(KN)=0.D0
!       DSRDT(KN)=0.D0  
!       IF(SRCTOT(KN).LE.0.D0) GO TO 2618   
!       DO 2615 KTP=1,16
!       CALL INDEX(KTP,KJ)
!       RVLE=ROMLIQ(KJ) 
!       IF(KTP.EQ.16) RVLE=RSLAGL*ROC
!       DSRDT(KN)=DSRDT(KN)+(SOURCE(KTP,KN)*AREA(KN))/RVLE
!  2615 CONTINUE
!  2618 CONTINUE
!       IF(NACTIV(KN).EQ.0) GO TO 1184      
!       IF(HTOT(KN).LE.0.D0) GO TO 1184      
!       RECON(KN)=DENMLT(KN)/VISREX(KN)     
!       GO TO 1181      
!  1184 CONTINUE
!       RECON(KN)=0.D0  
!  1181 CONTINUE
! C.....GIVEN PREVIOUS TIMESTEP DATA, CALCULATE NEW VELOCITIES...
!       DTVEL=DTIME/FLOAT(NVELP)  
!       DO 2231 KITV=1,NVELP      
!       IF(KITV.EQ.1) GO TO 2232  
!       DO 2233 KSV=1,NUMNOD      
!       VELOLD(KSV)=VEL(KSV)      
!       HTMOLD(KSV)=HTMP(KSV)     
!  2233 CONTINUE
!       VELOLD(NUMNOD+1)=VEL(NUMNOD+1)      
!  2232 CONTINUE
!       NITER=0
!  2711 CONTINUE
!       NITER=NITER+1   
!       IF(NITER.GT.NITMAX) WRITE(2,*) 'WARNING: MELT VELOCITY CONV. FAILE
!      1D, T=',TIME
!       IF(NITER.GT.NITMAX) GO TO 2712      
! C.....SOLVE FOR THE CELL BOUNDARY VELOCITIES.
!       NUP=NUMNOD+1    
!       DO 5001 K=1,NUP 
!       IF(K.EQ.1) GO TO 6013     
!       IF(K.EQ.NUP) GO TO 6013   
!       GO TO 6014      
! C.....BOUNDARY EDGE NODES ZEROED HERE.
!  6013 CONTINUE
!       A(K)=1.D0
!       B(K)=0.D0
!       C(K)=0.D0
!       D(K)=0.D0
!       GO TO 5001      
!  6014 CONTINUE
! C.....FIRST CHECK TO SEE IF THE NODE IS CAPPED IN HEIGHT, IF SO HAS IT
! C.....FROZEN SHUT, AND IN THAT CASE ROUTE TO LOCATION WHERE VELOCITY 
! C.....IS ZEROED AT CELL BOUNDARY. 
!       IF(HCP(K-1)-ELEVAT(K-1).LE.0.D0) GO TO 5002
!       IF(HCP(K)-ELEVAT(K).LE.0.D0) GO TO 5002
! C.....FLOW OPENING EXISTS, SO PROCEED.
!       HMJ=HMINC
!       HMJM1=HMINC     
!       HAJP1=0.D0      
!       IF(K.LE.NUMNOD-1) HAJP1=HTMP(K+1)   
!       HAJ=HTMP(K)     
!       HAJM1=HTMP(K-1) 
!       HAJM2=0.D0      
!       IF(K.GT.2) HAJM2=HTMP(K-2)
!       VJM32=VEL(K-1)  
!       VJM12=VEL(K)    
!       VJP12=VEL(K+1)  
!       ACJM32=ARC(K-1) 
!       ACJM12=ARC(K)   
!       ACJP12=ARC(K+1) 
!       SNJM32=1.D0     
!       IF(VEL(K-1).LT.0.D0) SNJM32=-1.D0   
!       SNJM12=1.D0     
!       IF(VEL(K).LT.0.D0) SNJM12=-1.D0     
!       SNJP12=1.D0     
!       IF(VEL(K+1).LT.0.D0) SNJP12=-1.D0   
! C.....EVALUATE FRICTION COEFFICIENT.      
!       IF(HTOLD(K-1).GT.0.D0) GO TO 2693   
!       FRFAC=0.D0      
!       GO TO 2694      
!  2693 CONTINUE
!       HTFRC=HTOLD(K-1)
!       IF(HTFRC.LT.HMINC) HTFRC=HMINC      
!       DHJM1=(4.D0*HTMP(K-1))
!       VELJM1=ABS(VEL(K))
!       REJM1=DHJM1*VELJM1*RECON(K-1)
!       CALL FRCCF(DHJM1,REJM1,RSAND,FRCJM1)
!       FRFAC=(FRCJM1*(DXNODE(K)+DXNODE(K-1)))/HTFRC
!  2694 CONTINUE
!       W1=DSRDT(K)+ACJM12*HAJM1*DMAX1(VJM12,0.D0)+ACJP12*HAJP1*DMAX1(-VJP
!      112,0.D0)-ACJM12*HAJ*DMAX1(-VJM12,0.D0)-ACJP12*HAJ*DMAX1(VJP12,0.D0
!      2)     
!       AAJ=(W1*DTVEL)/AREA(K)    
!       W2=DSRDT(K-1)+ACJM32*HAJM2*DMAX1(VJM32,0.D0)+ACJM12*HAJ*DMAX1(-VJM
!      112,0.D0)-ACJM32*HAJM1*DMAX1(-VJM32,0.D0)-ACJM12*HAJM1*DMAX1(VJM12,
!      20.D0) 
!       AAJM1=(W2*DTVEL)/AREA(K-1)
!       HTGJ=HTMOLD(K)+AAJ
!       HTJR=HTGJ-HMJ   
!       HTJR=DMAX1(HTJR,0.D0)     
!       HTGJM1=HTMOLD(K-1)+AAJM1  
!       HTJM1R=HTGJM1-HMJM1
!       HTJM1R=DMAX1(HTJM1R,0.D0) 
!       IF(HTGJ.GT.0.D0.AND.HTGJM1.GT.0.D0) GO TO 8939
!       IF(HTJM1R.LE.0.D0.AND.HTJR.LE.0.D0) GO TO 5002
!  8939 CONTINUE
!       HTVJM1=HTGJM1+ELEVAT(K-1)
!       HTVJ=HTGJ+ELEVAT(K)
!       DELHT=HTVJ-HTVJM1
! C.....CHECK IF NODE IS A SUMP
!       IF(NSUMP(K).EQ.1) GO TO 4525
!       GO TO 5004      
!  4525 CONTINUE
!       HSMPCOMP=HTGJM1+ELEVAT(K-1)
!       IF(HSMPCOMP.GT.ELEVAT(K)) GO TO 5004  
!       IF(HTJR.LE.0.D0) GO TO 5002
!       DELHT=HTJR
!       GO TO 5004      
!  5002 CONTINUE
!       A(K)=1.D0
!       B(K)=0.D0
!       C(K)=0.D0
!       D(K)=-VEL(K)    
!       GO TO 5001      
!  5004 CONTINUE
! C.....CALCULATE TDMA ELEMENTS FOR CASES IN WHICH THERE IS FLOW ACROSS   
! C.....THE CELL BOUNDARIES.      
!       W3=HAJM1*DMAX1(SNJM12,0.D0)-HAJ*DMAX1(-SNJM12,0.D0)     
!       BBJ=(DTVEL*ACJM12*W3)/AREA(K)
!       W4=HAJM2*DMAX1(SNJM32,0.D0)-HAJM1*DMAX1(-SNJM32,0.D0)   
!       BBJM1=(DTVEL*ACJM32*W4)/AREA(K-1)
!       W5=HAJP1*DMAX1(-SNJP12,0.D0)-HAJ*DMAX1(SNJP12,0.D0)     
!       GGJ=(DTVEL*ACJP12*W5)/AREA(K)
!       W6=HAJ*DMAX1(-SNJM12,0.D0)-HAJM1*DMAX1(SNJM12,0.D0)     
!       GGJM1=(DTVEL*ACJM12*W6)/AREA(K-1)
!       DELRJ=DXNODE(K)+DXNODE(K-1)
!       DELXA=DXNODE(K)+DXNODE(K-1)+SNJM12*(DXNODE(K)-DXNODE(K-1))
!       ZWXJ=(DXNODE(K)*(1.D0+SNJM12))/(DELXA*DXNODE(K-1))      
!       EWXJ=(DXNODE(K-1)*(1.D0-SNJM12))/(DELXA*DXNODE(K))      
! C.....EVALUATE THE TDMA COEFFICIENTS.     
!       A(K)=DELRJ/DTVEL+GRAV*(BBJ-GGJM1)+FRFAC*SNJM12*VJM12
!      1+0.5D0*DELRJ*(ZWXJ*(2.D0*VJM12-VJM32)+EWXJ*(VJP12-2.D0*VJM12))    
!       B(K)=-0.5D0*DELRJ*EWXJ*VJM12-GRAV*GGJ   
!       C(K)=0.5D0*DELRJ*ZWXJ*VJM12+GRAV*BBJM1  
!       X1=(DELRJ*(VJM12-VELOLD(K)))/DTVEL+0.5D0*DELRJ*VJM12*(ZWXJ*(VJM12 
!      1-VJM32)+EWXJ*(VJP12-VJM12))
!       X2=GRAV*DELHT+0.5D0*FRFAC*SNJM12*VJM12*VJM12      
!       D(K)=-(X1+X2)   
!  5001 CONTINUE
! C.....SET UP AND SOLVE THE TDMA PROBLEM FOR THE VELOCITY INCREMENTS.    
!       P(1)=B(1)/A(1)  
!       Q(1)=D(1)/A(1)  
!       DO 5010 KD=2,NUP
!       P(KD)=B(KD)/(A(KD)-C(KD)*P(KD-1))   
!       Q(KD)=(D(KD)+C(KD)*Q(KD-1))/(A(KD)-C(KD)*P(KD-1))
!  5010 CONTINUE
!       DELVEL(NUP)=Q(NUP)
!       DO 5011 KD=1,NUMNOD
!       NARG=NUP-KD     
!       DELVEL(NARG)=P(NARG)*DELVEL(NARG+1)+Q(NARG)   
!  5011 CONTINUE
! C.....CALCULATE NEW VELOCITIES BASED ON VELOCITY INCREMENTS.  
!       DO 5012 KD=1,NUP
!       VEL(KD)=VEL(KD)+DELVEL(KD)
!  5012 CONTINUE
! C.....NOW CHECK MESH TO SEE IF THERE ARE ANY HEIGHT LIMITATIONS ON 
! C.....THE DEBRIS AND ADJUST VELOCITIES TO ACCOUNT ACCORDINGLY.
!       DO 3818 J=1,NUMNOD
!       IF(HTMP(J)+ELEVAT(J).LE.HCP(J)) GO TO 3818
!       IF(ELEVAT(J).LT.HCP(J)) GO TO 5113
!       VEL(J)=0.D0
!       VEL(J+1)=0.D0
!       HTMP(J)=0.D0
!       GO TO 3818
!  5113 CONTINUE
!       IF(VEL(J).LE.0.D0.AND.VEL(J+1).GE.0.D0) GO TO 3818
!       IF(VEL(J).LT.0.D0.AND.VEL(J+1).LT.0.D0) GO TO 3819
!       IF(VEL(J+1).LT.0.D0) GO TO 4821
! C.....CASE 1 HERE: VJ>0 and VJ+1>0.
!       QJ=0.D0 
!       IF(J.GT.1) QJ=ARC(J)*HTMP(J-1)*VEL(J)
!       QJP1=ARC(J+1)*HTMP(J)*VEL(J+1)
!       IF(QJ.LE.QJP1) GO TO 3818 
!       IF(J.EQ.1) GO TO 3820
!       IF(HTMP(J-1).GE.HCP(J-1)-ELEVAT(J-1)) GO TO 3820
!       VEL(J)=0.D0
!       IF(HTMP(J-1).GT.0.D0) VEL(J)=QJP1/(HTMP(J-1)*ARC(J))
!       GO TO 3818
!  3820 CONTINUE
!       VEL(J+1)=QJ/((HCP(J)-ELEVAT(J))*ARC(J+1))
!       GO TO 3818
!  3819 CONTINUE
! C.....CASE 2 HERE: VJ<0 AND VJ+1<0.
!       QJ=ARC(J)*DABS(VEL(J))*HTMP(J)
!       QJP1=0.D0 
!       IF(J.LT.NUMNOD) QJP1=ARC(J+1)*DABS(VEL(J+1))*HTMP(J+1)
!       IF(QJ.GE.QJP1) GO TO 3818
!       IF(J.EQ.NUMNOD) GO TO 4822
!       IF(HTMP(J+1).GE.HCP(J+1)-ELEVAT(J+1)) GO TO 4822
!       VEL(J+1)=0.D0
!       IF(HTMP(J+1).GT.0.D0) VEL(J+1)=-QJ/(HTMP(J+1)*ARC(J+1))
!       GO TO 3818
!  4822 CONTINUE
!       VEL(J)=-QJP1/((HCP(J)-ELEVAT(J))*ARC(J))
!       GO TO 3818
!  4821 CONTINUE
! C.....CASE 3 HERE: VJ>0 and VJ+1<0.
!       QJ=0.D0
!       IF(J.GT.1) QJ=ARC(J)*VEL(J)*HTMP(J-1)
!       QJP1=0.D0
!       IF(J.LT.NUMNOD) QJP1=ARC(J+1)*DABS(VEL(J+1))*HTMP(J+1)
!       IF(J.EQ.1) GO TO 3824
!       IF(HTMP(J-1).LT.HCP(J-1)-ELEVAT(J-1)) 
!      1 VEL(J)=-QJP1/((HCP(J)-ELEVAT(J))*ARC(J))
!       GO TO 3818
!  3824 CONTINUE
!       IF(J.EQ.NUMNOD) GO TO 3818
!       IF(HTMP(J+1).LT.HCP(J+1)-ELEVAT(J+1)) 
!      1 VEL(J+1)=QJ/((HCP(J)-ELEVAT(J))*ARC(J+1))
!  3818 CONTINUE 
! C.....SOLVE SIMPLIFIED CONSERVATION OF MASS EQUATION TO OBTAIN THE      
! C.....APROXIMATE HEIGHT DISTRIBUTION.     
!       DO 2611 KND=1,NUMNOD      
!       VJM12=VEL(KND)  
!       VJP12=VEL(KND+1)
!       IF(KND.EQ.1) GO TO 2612   
!       IF(KND.EQ.NUMNOD) GO TO 2613
!       HJM1=HTMP(KND-1)
!       HJ=HTMP(KND)    
!       HJP1=HTMP(KND+1)
!       GO TO 2614      
!  2612 CONTINUE
!       HJM1=0.D0
!       HJ=HTMP(KND)    
!       HJP1=HTMP(KND+1)
!       GO TO 2614      
!  2613 CONTINUE
!       HJM1=HTMP(KND-1)
!       HJ=HTMP(KND)    
!       HJP1=0.D0
!  2614 CONTINUE
!       D1=(AREA(KND)*(HJ-HTMOLD(KND)))/DTVEL
!       D2=ARC(KND)*(HJ*DMAX1(-VJM12,0.D0)-HJM1*DMAX1(VJM12,0.D0))
!       D3=ARC(KND+1)*(HJ*DMAX1(VJP12,0.D0)-HJP1*DMAX1(-VJP12,0.D0))      
!       D4=DSRDT(KND)   
!       D(KND)=-(D1+D2+D3-D4)     
!       C(KND)=ARC(KND)*DMAX1(VJM12,0.D0)   
!       B(KND)=ARC(KND+1)*DMAX1(-VJP12,0.D0)
!       A(KND)=AREA(KND)/DTVEL+ARC(KND)*DMAX1(-VJM12,0.D0)+ARC(KND+1)*DMAX
!      11(VJP12,0.D0)   
!  2611 CONTINUE
! C.....FIND APPROXIMATE HEIGHT INCREMENTS. 
!       P(1)=B(1)/A(1)  
!       Q(1)=D(1)/A(1)  
!       DO 2616 KTOP=2,NUMNOD     
!       DENOM=A(KTOP)-C(KTOP)*P(KTOP-1)     
!       P(KTOP)=B(KTOP)/DENOM     
!       Q(KTOP)=(D(KTOP)+C(KTOP)*Q(KTOP-1))/DENOM     
!  2616 CONTINUE
! C.....DO BACKWARDS SUBSTITUTION 
!       DHTMP(NUMNOD)=Q(NUMNOD)   
!       DO 2617 KLP=1,NUMNOD-1    
!       IARG=NUMNOD-KLP 
!       DHTMP(IARG)=P(IARG)*DHTMP(IARG+1)+Q(IARG)     
!  2617 CONTINUE
! C.....FIND ITERATED HEIGHTS.    
!       DO 2818 KND=1,NUMNOD      
!       HTMP(KND)=HTMP(KND)+DHTMP(KND)      
!       HTMP(KND)=DMAX1(HTMP(KND),0.D0)     
!  2818 CONTINUE
! C.....CONDUCT AT LEAST ONE ITERATION BEFORE CHECKING ON 
! C.....CONVERGENCE.
!       IF(NITER.EQ.1) GO TO 2711 
!       DVMAX=ABS(DELVEL(1))      
!       DVSUM=DVMAX     
!       DO 3283 KN=2,NUMNOD+1     
! C.....PERFORM AT LEAST FIVE ITERATIONS BEFORE CHECKING TO SEE IF 
! C.....CONVERGANCE IS LIMITED BY FREEZING AT THE LEADING EDGE.
!       IF(NITER.LE.5) GO TO 8332
!       IF(HTMP(KN).LE.HMINC) GO TO 3283
!  8332 CONTINUE
!       DABV=ABS(DELVEL(KN))      
!       DVSUM=DVSUM+DABV
!       DVMAX=DMAX1(DABV,DVMAX)   
!  3283 CONTINUE
!       DVAV=DVSUM/FLOAT(NUMNOD+1)
!       IF(DVMAX.LE.DVMX.AND.DVAV.LE.DAVMX) GO TO 2712
!       GO TO 2711      
!  2712 CONTINUE
!  2231 CONTINUE
! C.....RE-ESTABLISH MELT PROPERTIES IF MELT IS NOW OVER PREVIOUSLY 
! C.....FROZEN DEBRIS.  FIRST FIND A NODE THAT IS A RECEPTOR IF THERE
! C.....IS A MELT POUR.
!       JSEND=1
!       IF(NGEOM.EQ.1) GO TO 4533
!       DO 4534 I=1,NUMNOD
!       IF(IFLGA(I).EQ.1) JSEND=I
!  4534 CONTINUE
!  4533 CONTINUE
!       DO 1033 KN=1,NUMNOD
!       IF(NACTIV(KN).EQ.0) GO TO 1033      
!       IF(HTOT(KN).GT.0.D0) GO TO 1033     
!       IF(HTMP(KN).LE.0.D0) GO TO 1033     
!       IF(SRCTOT(KN).LE.0.D0) GO TO 1034   
!       TBULK(KN)=TSINJ 
!       ENBLK(KN)=EINJ  
!       EBKOLD(KN)=EINJ 
!       DTDEM(KN)=DTINJ 
!       FKMLT(KN)=TKINJ 
!       DENMLT(KN)=ROEV 
!       CPMLT(KN)=CPINJ 
!       SIGMLT(KN)=SURFT
!       UMMLT(KN)=VSINJ 
!       VISREX(KN)=VSINJ
!       EMIMLT(KN)=EMINJ
!       GO TO 1033      
!  1034 CONTINUE
!       NLOC=KN-1
!       IF(KN.EQ.1) NLOC=KN+1     
!       IF(KN.LE.JSEND) NLOC=KN+1
!       TBULK(KN)=TBULK(NLOC)     
!       ENBLK(KN)=ENBLK(NLOC)     
!       EBKOLD(KN)=ENBLK(KN)      
!       DTDEM(KN)=DTDEM(NLOC)     
!       FKMLT(KN)=FKMLT(NLOC)     
!       DENMLT(KN)=DENMLT(NLOC)   
!       CPMLT(KN)=CPMLT(NLOC)     
!       SIGMLT(KN)=SIGMLT(NLOC)   
!       UMMLT(KN)=UMMLT(NLOC)     
!       VISREX(KN)=UMMLT(NLOC)
!       EMIMLT(KN)=EMIMLT(NLOC)   
!  1033 CONTINUE
!       RETURN
!       END
! C...................................................................... 
! C.....SUBROUTINE HTCOEFC CALCULATES MELT-TO-BASEMAT AND MELT/SOLDIFIED 
! C.....DEBRIS-TO-ATMOSPHERE (WET OR DRY) HEAT TRANSFER COFFICIENTS.
! C...................................................................... 
!       SUBROUTINE HTCOEFC
!       IMPLICIT DOUBLE PRECISION(A-H,O-Z)
!       REAL(8) KL
!       COMMON/CATCHR/A(999),B(999),C(999),D(999),P(999),Q(999),
!      1RECON(999),DELVEL(999),DSRDT(999),DELHTS(999),EMAX(999,999),
!      2DBLKEN(999),DELHIT(16,999),SOURCE(16,999),SRCTOT(999),
!      3HCROLD(16,999),DCDOT(999),HCRUST(16,999),DFILM(16,999),
!      4DFMOLD(16,999),DENOLD(999),SIGOX(999),SIGCON(999),BET(999),
!      5TFZX(999),TFZC(999),TKX(999),TKM(999),THETO(999,999),
!      6THET1(999,999),OMEG0(4,999),OMEG1(4,999),TAO0(999),TAO1(999),
!      7SIG0(999),SIG1(999),TARGB(999),DADOT(999),DADOTG(999),
!      8XLOLD(4,999),VISREX(999),TATMS(999),HTMP(999),DHTMP(999),
!      9HTMOLD(999)
!       COMMON/PRINTB/ELEVAT(999),ELOLD(999),XDIST(999,999),XBTW(999,999),
!      1TEMP(999,999),ENTHP(999,999),EOLD(999,999),ENBLK(999),EBKOLD(999),
!      2TBULK(999),HITE(16,999),HITOLD(16,999),HTOT(999),HTOLD(999),
!      3HTCFT(999),HTCOEF(999),QFLUXT(999),QFLUXB(999),VEL(999),ELO(999),
!      4VELOLD(999),SRSCOR(16),AREA(999),RAD(999),ARC(999),VOLCN(16),
!      5VOID(999),VGJ(999),ZABLAT(999),ZABOLD(999),DCRUST(999),
!      6DCROLD(999),DABCON(999),DABOLD(999),DFILMT(999),DFOLT(999),
!      7SMFLX(4,999),XLSMF(4,999),TOTVOL,XFACMS(999),XMFLXA,XMCORT,
!      8VCORT,TOTOX,TOTMET,QFLXT,QFLXB,TIME,DTIME,XMCOR(16),VCOR(16),
!      9TCONI,RSAND,HDOWNC,TBOUND,EMISCN,PDRYWL,XDISTO(999),QOXT(999),
!      1XLENSH,XBTWO(999),RCOMP,WDOOR,RSUMP,RSHELL,RPED,TPED,ELSMP,
!      1TENDP(10,999),TFRZSH,TDEBRS,TKDEBR,PDEBR,CPDEBR,ENENDP(10,999),
!      2ENOLDP(10,999),DXVERT,DXSNK,XDSTE(10,999),XBTE(10,999),HXLA(999),
!      3HXLB(999),TSFEB(999),DCRS(999),DCRSLD(999),HCRS(16,999),
!      4HCRSLD(16,999),THETE0(10,999),THETE1(10,999),QSHELL,QSHELE,TSHELI,
!      5SIGOXE(999),FKOXE(999),RINJC,XLSEC,ANGSEC,ANINJC,XLCHAN,WCHNL,
!      6TEFZX(999),TIMSPC(999),DXNODE(999),TNORM(999),FRCSOL(999),
!      7ALPSPR(999),CRAMCON,HINTF,TSHLMX,XFRMX(999),XFROX(999),XFRTX(999),
!      8XMLMX(999),XMLOX(999),XMLTX(999),XTOTX(999),TIMEO,TMAX,EDOWN(999),
!      9HCP(999)
!       COMMON/HCONS/HMETAL(999),HOXIDE(999)  
!       COMMON/PROPI/ NMATC,NMATFI,NMATFF,ICAOH2,ICACO3,IMCCO3,IFH2O,     
!      1IVH2O,ICK2O,IVK2O,INA2O,ITIO2,ISIO2,ICAO,IMGO,IAL2O3,IFEO,IFE2O3, 
!      2IFE3O4,IFE,ICR,INI,IZR,IU,IB4C,IB,ICR2O3,INIO,IUO2,IZRO2,IB2O3,   
!      3NBCINT(999),NODES(999),NUMNOD,IMOX(28),IBAS,ILCS,ILL,NACTIV(999),     
!      4NBFRZM,NBFRZO,NABLFM,NDRNFM,NTYPMT(999,999),NDOOR,NBMADJ,NUMSHV,   
!      5NBSHL(999),NCRSTS(999),NUMSHH,NSKIPE,NACSH,NWAT,NPEND,NBCBOT,
!      6NCRTOP,NBFZOE,NBFZME,NGEOM,NL(999,999),NFRSCT,NLOGSH,NADAB,NINVIS,
!      7NSIMST,NSTEEL,NOVHT,NOVTK,NOVUM,NOVEM,NOVSIG,NPLLOC(999),NBPL,
!      8IXP(999),IYP(999),NVTPE,NSOLTP,NSOLF,NINTF,IFLGA(999),ICTYPE,ICTC,
!      9NPOURS,NSMP,NPED,NDOR,NSHL,NANULS,NSMPCV,NBOIL,NSWALL,NMVER,
!      1NCRTEM,NTHINC,NVELP,NITMAX,NENMAX,NPRINT,NPFREQ,NTIMSPC,NPLFREQ,
!      2NPLTOT,NJET,NJETP,NJETD,NJETND,NODCAP,NVELPW,NITMAXW,NENMXW,
!      3IFLGJ(999),NBEDCQ,ISHELE
!       COMMON/PRINTR/ QFEH2O,QCRH2O,QZRH2O,QFECO2,QCRCO2,QZRCO2,
!      4XFH2OU,XFCAOH,XFMGCA,XFCACO,XZRMRE,XFEMRE,XCRMRE,XZRORE,XFEORE,   
!      5XCRORE,XMH2O,XMCO2,XMCACO,XMMGCA,XMCAOH,TFWL,TFWS,TBWL,TBWS,      
!      6TMCAL,TMCAS,TCAL,TCAS,TFOS,TFOL,TFMS,TFML,XVISC(28),SVISC(28),    
!      7XMOL(28),FMMOL(28),ROM(28),ROMLIQ(28),AEQM(28,2),BEQM(28,2),
!      8CEQM(28,2),ECL,ECS,ECAL,ECAS,EMCAL,EMCAS,EBWL,EBWS,EFWL,EFWS,    
!      9STEF,GRAV,PI,TCS,TCL,CCL,CCS,RMASSL,WPCC,WPM,WPA,WPCS,ROC,RMASSS,   
!      1ANGSHL,RSLAGL,RSLAGS,HNODT,VFAV,VGAV,QXAV,XWTSS(16),  
!      2TSCS(2),TSCL(2),ESCS(2),ESCL(2),CCSS(2),CCSL(2),ROSTLS,ROSTLL,
!      3XFRGAS,HMINC,TST(99),TSTOP(99),AINTP(99),BINTP(99),DRATIO(999),
!      4XBCN(999),XDCN(999),XBLT(15),ADEC(99),BDEC(99),APOUR(16,99),
!      5BPOUR(16,99),XWTC(14),BWIDTH,THCKCV,TMBOIL,TEBOIL,VFINT,ANGFAN,
!      6ALPMAX,THSHL,XFCABL,XNDMIN,DVMX,DAVMX,DEAVMX,DEMX,TDC,QDCU,QDCUO2,
!      7TSINJ,EINJ,DTINJ,TKINJ,ROEV,CPINJ,SURFT,VSINJ,EMINJ,TSINJO,EINJO,
!      8DTINJO,TKINJO,ROEVO,CPINJO,SURFTO,VSINJO,EMINJO,XLEADE,ARSUM,
!      9DBUBOX,UTRISE,TREMSH,DJET,DFALL,WEBER,FROUDE,XPSAITO,XPEPSTN,
!      1FRAG,XMBEDT,XMBED(16),XLPENT,XLPENA,UJET,UFALL,HFALL,ERPV,
!      2TJETT(99),DJETT(99),HWATP,XDOTJET,DVMXW,DAVMXW,DEMXW,DEAVMXW,
!      3QJETW,XSTMJF,TINTSJF,ESAT,DRDOOR,DRANL,EI,QDCBUO2,QDCBU,
!      4EBEDS,EBEDB
!       COMMON /WATVARS/FCRUST(999),VLW(999),VLWOLD(999),DWAT(999),
!      1DWATOLD(999),EWAT(999),EWATOLD(999),TWAT(999),CORDDC(999),
!      2DSRDC(999),DHDC(999),TSRDC,TINTDC,HWATB(999),TSURFW(999),XMS(999),
!      3XMST,XINTS,ESRDTW(999),TSRDTW(999),DSRDTW(999),TSRDW,TINTDW,
!      4TWATI,ELDCO(999),ELDCX(999,99),CRDCX(999,99),TIMINJ(999,99),
!      5XDTINJ(999,99),TDTINJ(999,99),ELWATI,XMWAT,XMWATO,XBALW,
!      6HDRY(999),EINTW,XMCT(199),XMCDT(16,999),TMPCDT(999),CMPCDT(999),
!      7FDC(999),FCOV(999),FBED(999),FHEAT(999),XFACJ(999),
!      8XMBEDJ(16,999),XMBEDJT(999),PBED,QBED(999),QWATER(999),
!      9QSURFACE(999),QWATERT(999),HBED(999),POROSBED,XMCRDT(16,999),
!      1XMCRT(999),XMBDINT(999),XMT(999)
!       COMMON/BLKHT/TKMLT,PM,CM,UM,EMISM,SIGMAM,TKNC,PNC,CNC,UNC    
!       COMMON/PROPB/CPBM(999),FKB(999,999),DENB(999,999),DTDEB(999,999),
!      1EMIBM(999),DENCRS(999),ENCRS(999),FKRF(999),DENRF(999),CPRF(999) 
!       COMMON/PROPM/DTDEM(999),CPMLT(999),FKMLT(999),DENMLT(999),
!      1SIGMLT(999),UMMLT(999),EMIMLT(999)      
!       AHYDR=0.D0      
! C.....GET WATER SATURATION TEMPERATURE IF NEEDED
!       IF(NWAT.GT.0) CALL CONWAT(TSAT,KL,PL,CL,UL,HLV,EWL,EWV,CWV,SIGMA,
!      1PDRYWL)
! C.....SET HT COEFFICIENT EQUAL TO ZERO UNLESS MELT IS PRESENT.
!       DO 7311 J=1,NUMNOD
!       HWATB(J)=0.D0
!       TSURFW(J)=TCONI
!       TSUB=0.D0
!       IF(NWAT.EQ.2) TSUB=DMAX1(TSAT-TWAT(J),0.D0)
!       IF(NACTIV(J).EQ.0) GO TO 7311
!       IF(NADAB.EQ.1) GO TO 7311
! C.....MELT PRESENT MOVE ON.   
!       ZCOMP=XDISTO(J)-ZABLAT(J) 
!       IP=2  
!       IF(ZCOMP.LT.XBTWO(J)) IP=1
!       HFUSS=(2.D0*SIGCON(J)*DTIME)/DENB(IP,J)
!       IF(VGJ(J).GT.0.D0) GO TO 4239
!       FRAH2O=1.D0     
!       FRACO2=0.D0     
!       GO TO 4240      
!  4239 CONTINUE
!       FRADEN=(SMFLX(1,J)+SMFLX(2,J))/XMH2O+(SMFLX(3,J)+SMFLX(4,J))/XMCO2
!       FRAH2O=(SMFLX(1,J)+SMFLX(2,J))/(XMH2O*FRADEN) 
!       FRACO2=(SMFLX(3,J)+SMFLX(4,J))/(XMCO2*FRADEN) 
!       FRAH2O=DMAX1(0.D0,FRAH2O) 
!       FRACO2=DMAX1(0.D0,FRACO2) 
!       FRAH2O=DMIN1(1.D0,FRAH2O) 
!       FRACO2=DMIN1(1.D0,FRACO2) 
!  4240 CONTINUE
!       TAV=0.5D0*(TCS+TSAT)
!       CALL CONCO2(TAV,PDRYWL,CPC,VISC,FKC,DENC)     
!       CALL CONH2O(TAV,PDRYWL,CPH,VISH,FKH,DENH)     
!       TKNC=FRAH2O*FKH+FRACO2*FKC
!       PNC=FRAH2O*DENH+FRACO2*DENC
!       CNC=FRAH2O*CPH+FRACO2*CPC 
!       UNC=FRAH2O*VISH+FRACO2*VISC
!       IF(HTOT(J).GT.0.D0) GO TO 8740      
! C.....NO MELT PRESENT OVER BASEMAT HERE; CALCULATE BASEMAT-TO-WATER OR  
! C.....BASEMAT-TO-ATMOSPHERE HEAT TRANSFER COEFFICIENT, DEPENDING UPON   
! C.....WHETHER OR NOT WATER IS PRESENT.    
!       TEVAL=TEMP(1,J) 
!       IF(NWAT.EQ.0) GO TO 9741
!       IF(DWAT(J).GT.0.D0) GO TO 8741
! C.....BASEMAT-TO-ATMOSPHERE HEAT TRANSFER COEFFICIENT DETERMINED HERE.  
!  9741 CONTINUE
!       TARGB(J)=TBOUND 
!       VIEWU=STEF*(TEVAL+TBOUND)*(TEVAL*TEVAL+TBOUND*TBOUND)   
!       VIEWD=(1.D0/EMIBM(J)+1.D0/EMISCN-1.D0)
!       HTCOEF(J)=VIEWU/VIEWD     
!       HTCFT(J)=0.D0   
!       TSURFW(J)=TEVAL
!       HWATB(J)=0.D0
!       HDRY(J)=HTCOEF(J)
!       GO TO 7311      
!  8741 CONTINUE
! C.....NO MELT, WATER OVER BASEMAT CASE TREATED HERE.
!       TARGB(J)=TSAT   
!       EMISM=EMIBM(J)  
!       TKMLT=FKB(IP,J) 
!       PM=DENB(IP,J)   
!       CM=CPBM(J)      
!       VGSND=0.D0
!       CALL WAT(TEVAL,TSUB,VGSND,HTCOEF(J),PDRYWL,HTOT(J))    
!       HTCFT(J)=0.D0   
!       TSURFW(J)=TEVAL
!       IF(NWAT.LE.1) GO TO 7311
!       HWATB(J)=HTCOEF(J)
!       VIEWU=STEF*(TEVAL+TBOUND)*(TEVAL*TEVAL+TBOUND*TBOUND)   
!       VIEWD=(1.D0/EMIBM(J)+1.D0/EMISCN-1.D0)
!       QDRY=(VIEWU/VIEWD)*(TEVAL-TBOUND)
!       HDRY(J)=0.D0
!       IF(TEVAL.GT.TARGB(J)) HDRY(J)=QDRY/(TEVAL-TARGB(J))
!       GO TO 7311      
!  8740 CONTINUE
! C.....CASE IN WHICH MELT IS PRESENT OVER BASEMAT IS TREATED HERE.  FIRST
! C.....DETERMINE MELT-TO-BASEMAT INTERFACIAL HEAT TRANSFER COEFFICIENT.  
! C.....CASES CONSIDERED ARE: (1) NBCBOT=1 IS CORCON/MOD2 GAS FILM MODEL, 
! C.....NBCBOT=2 IS KAO & KAZIMI'S REVISED PERIODIC CONACT MODEL, (3)     
! C.....NBCBOT=3 IS DITTUS BOLTLER FORCED CONVECTION HEAT TRANSFER COEF,  
! C.....(4) NBCBOT=4 IS A LINEAR SUPERPOSITION OF THE GAS FILM AND FORCED 
! C.....CONVECTION HEAT TRANSFER COEFFICIENTS, AND (5) NBCBOT=5 IS A      
! C.....LINEAR SUPERPOSITION OF THE PERIODIC CONTACT AND FORCED CONVECTION
! C.....COEFFICIENTS.   
!       HDEPLY=HTOT(J)  
!       HDEPLY=DMAX1(HDEPLY,HMINC)
!       TARGB(J)=TBULK(J)
!       HCONLIM=(1.9D0*FKMLT(J))/HDEPLY
!       GO TO(1193,1194,1195,1193,1194),NBCBOT
!  1193 CONTINUE
!       IF(VGJ(J).GT.0.D0) GO TO 1291
!       HTCOEF(J)=HCONLIM
!       HGASF=HTCOEF(J) 
!       IF(NBCBOT.EQ.4) GO TO 1195
!       GO TO 2228      
!  1291 CONTINUE
!       ALAP=SQRT(SIGMLT(J)/(GRAV*DENMLT(J)))
!       E23=2.D0/3.D0   
!       XKUT=(1.D6*CPMLT(J)*VGJ(J)*PDRYWL)/(FKMLT(J)*GRAV)      
!       VTRAN=(4.3D-4*SIGMLT(J))/UMMLT(J)   
!       C1=(1.50D-3*FKMLT(J)*XKUT**E23)/ALAP
!       C2=1.D0
!       IF(VGJ(J).GT.VTRAN) C2=SQRT(VTRAN/VGJ(J))     
!       C3=0.29
!       HTCOEF(J)=C1*C2*C3
!       HGASF=HTCOEF(J) 
!       IF(NBCBOT.EQ.4) GO TO 1195
!       GO TO 2228      
!  1194 CONTINUE
!       IF(VGJ(J).LE.0.D0) GO TO 2236
!       IF(NBCINT(J).GT.3) GO TO 1236
!  2236 CONTINUE
!       HTCOEF(J)=HCONLIM
!       HPCM=HTCOEF(J)  
!       IF(NBCBOT.EQ.5) GO TO 1195
!       GO TO 2228      
!  1236 CONTINUE
!       ALAP=SQRT(SIGMLT(J)/(GRAV*DENMLT(J)))
!       E13=1.D0/3.D0   
!       SLIP=(DENRF(J)/PNC)**E13  
!       C2=(1.D0-XFRGAS)*PNC*SLIP 
!       C3=XFRGAS*DENRF(J)
!       C4=1.D0+C2/C3   
!       VDRF=1.D0/C4    
!       PRF=PNC*VDRF+DENRF(J)*(1.D0-VDRF)   
!       CRF=CNC*XFRGAS+CPRF(J)*(1.D0-XFRGAS)
!       TKRF=TKNC*VDRF+FKRF(J)*(1.D0-VDRF)  
!       BETBLK=SQRT(FKMLT(J)*DENMLT(J)*CPMLT(J))      
!       BETSRF=SQRT(FKB(IP,J)*DENB(IP,J)*CPBM(J))     
!       BETSLG=SQRT(TKRF*PRF*CRF) 
!       C1=HFUSS
!       C2=HFUSS-(CRF*TFZC(J))/3.D0
!       C3=CRF/3.D0     
!       C4N=BETBLK*TBULK(J)+BETSRF*TFZC(J)  
!       C4=C4N/(BETBLK+BETSRF)    
!       C5N=BETBLK*TBULK(J)+BETSLG*TFZC(J)  
!       C5=C5N/(BETBLK+BETSLG)    
!       DENOM=0.D0      
!       IF(C4-C5.NE.0.D0) DENOM=1.D0/ABS(C4-C5)
!       ETA=(DENOM*(C2+C3*C5))/C3 
!       OMG=(DENOM*C1)/C3
!       TIMSCL=0.5D0*(-ETA+SQRT(ETA*ETA+4.D0*OMG))    
!       TIMSCL=DMAX1(TIMSCL,0.D0) 
!       TIMSCL=DMIN1(TIMSCL,1.D0) 
!       TINTF=TIMSCL*C4+(1.D0-TIMSCL)*C5    
!       C6=(BETBLK*(TBULK(J)-TINTF))/(BETSLG*(TBULK(J)-TFZC(J)))
!       C7=(CRF*(TBULK(J)-TFZC(J)))/C1      
!       C8=(2.8D0*TKRF*C6*C6)/ALAP
!       HTCOEF(J)=C8*C7*TIMSCL*TIMSCL
!       HPCM=HTCOEF(J)  
!       IF(NBCBOT.EQ.2) GO TO 2228
!  1195 CONTINUE
!       VELAVE=ABS(VEL(J+1))      
!       IF(J.GT.1) VELAVE=ABS(0.5D0*(VEL(J)+VEL(J+1)))
!       REJ=(4.D0*HTOT(J)*VELAVE*DENMLT(J))/UMMLT(J)   
!       DHYDR=4.D0*HDEPLY
!       PRANDT=ABS((CPMLT(J)*UMMLT(J))/FKMLT(J))      
!       HTCOEF(J)=(0.023D0*(REJ**0.8D0)*(PRANDT**0.4D0)*FKMLT(J))/DHYDR   
!       HTCOEF(J)=DMAX1(HTCOEF(J),HCONLIM)
!       HFCONV=HTCOEF(J)
!       IF(NBCBOT.EQ.3) GO TO 2228
!       IF(VGJ(J).LE.0.D0) GO TO 2228
!       IF(NBCBOT.EQ.5) GO TO 2039
!       HTCOEF(J)=DMAX1(HFCONV,HGASF)    
!       GO TO 2228      
!  2039 CONTINUE
!       IF(NBCINT(J).LE.3) GO TO 2228
!       HTCOEF(J)=DMAX1(HPCM,HFCONV)     
!  2228 CONTINUE
! C.....IF INTERFACIAL HEAT TRANSFER COEFFICIENT IS TREATED, MAKE THE 
! C.....CORRECTION BELOW:
!       IF(NINTF.EQ.1) HTCOEF(J)=(HTCOEF(J)*HINTF)/(HTCOEF(J)+HINTF) 
! C.....EVALUATE MELT-TO-WATER OR MELT-TO-ATMOSPHERE HEAT TRANSFER
! C.....COEFFICIENT IF NO WATER IS PRESENT.  ALSO, ASSESS WHETHER OR NOT  
! C.....THE MELT COOLING RATE IS SUFFICIENT TO INDUCE A THIN CRUST
! C.....BOUNDARY CONDITION ON THE MELT UPPER SURFACE. 
!       HFRM=HMETAL(J)/HTOT(J)  
!       TFRZT=TFOS      
!       IF(HFRM.GT.0.5D0.AND.TBULK(J).GE.TFMS) TFRZT=TFMS
!       TEVAL=TBULK(J)  
!       IF(NCRTOP.EQ.1) TEVAL=TFRZT  
!       IF(NWAT.EQ.0) GO TO 509
!       IF(DWAT(J).LE.0.D0) GO TO 509 
!       GO TO 609
!   509 CONTINUE
! C.....NO WATER HERE....
!       RADCST=STEF/(1.D0/EMIMLT(J)+1.D0/EMISCN-1.D0) 
!       QTOP=RADCST*(TEVAL**4-TBOUND**4)    
!       TATMS(J)=TBOUND 
!       IF(NCRTOP.EQ.1) TATMS(J)=TFRZT
!       HTCFT(J)=0.D0   
!       IF(TBULK(J)-TATMS(J).GT.0.D0) HTCFT(J)=QTOP/(TBULK(J)-TATMS(J))   
!       HWATB(J)=0.D0
!       TSURFW(J)=TEVAL
!       HDRY(J)=HTCFT(J)
!       GO TO 7311      
!   609 CONTINUE
! C.....WATER HERE....
!       IF(NCRTOP.EQ.1) GO TO 761    
!       TATMS(J)=TSAT   
!       GO TO 762
!   761 CONTINUE
!       TATMS(J)=TFRZT  
!   762 CONTINUE
!       EMISM=EMIMLT(J) 
!       TKMLT=FKMLT(J)  
!       PM=DENMLT(J)    
!       UM=UMMLT(J)     
!       CM=CPMLT(J)     
!       SIGMAM=SIGMLT(J)
!       CALL WAT(TEVAL,TSUB,VGJ(J),HTTM,PDRYWL,HTOT(J))   
!       QTOP=HTTM*(TEVAL-TSAT)    
!       HTCFT(J)=0.D0   
!       IF(TBULK(J)-TATMS(J).NE.0.D0) HTCFT(J)=QTOP/(TBULK(J)-TATMS(J))   
!       HWATB(J)=HTTM
!       TSURFW(J)=TEVAL
!       VIEWU=STEF*(TEVAL+TBOUND)*(TEVAL*TEVAL+TBOUND*TBOUND)   
!       VIEWD=(1.D0/EMIBM(J)+1.D0/EMISCN-1.D0)
!       QDRY=(VIEWU/VIEWD)*(TEVAL-TBOUND)
!       HDRY(J)=0.D0
!       IF(TEVAL.GT.TATMS(J)) HDRY(J)=QDRY/(TEVAL-TATMS(J))
!       HDRY(J)=VIEWU/VIEWD     
!  7311 CONTINUE
!       RETURN
!       END
! C...................................................................... 
! C.....SUBROUTINE ELIMBM CALCULATES THE BASEMAT FORWARD ELIMINATION 
! C.....COEFFICIENTS NEEDED FOR SOLVING THE CONSERVATION OF MASS AND 
! C.....ENERGY EQS. IN THE SPREADING MELT.  THE SUBROUTINE ALSO CALCULATES
! C.....GAS VELOCITY DERIVATIVE FUNCTIONS NEEDED FOR OXIDATION REACTION
! C.....EVALUATIONS. MELT/SUBSTRATE BOUNDARY CONDITIONS TREATED HERE ARE:     
! C.....NBCINT=1:  NO CRUST, NO ABLATION; CONVECTION OR MIXING. 
! C.....NBCINT=2:  STABLE CRUST GROWTH.     
! C.....NBCINT=3:  STATIONARY (NON-GROWING) CRUST.    
! C.....NBCINT=4:  ABLATION WITH NO CRUST; SLAG CONTINUOUSLY MIXED OFF    
! C..... SURFACE.
! C.....NBCINT=5:  ABLATION WITH NO CRUST; SLAG REMAINS ON SURFACE AS FILM
! C.....NBCINT=6:  SIMULTANEOUS CRUST GROWTH OVER ABLATING SUBSTRATE; THE 
! C..... CRUST IS POROUS SUCH THAT SLAG CONTINOUSLY DRAINS      
! C..... THROUGH THE GROWING CRUST.
! C.....NBCINT=7:  STATIONARY POROUS CRUST OVER ABLATING SUBSTRATE.
! C.....NBCINT=8:  GROWING NON-POROUS CRUST OVER ABLATING SUBSTRATE.  THE 
! C..... SLAG REMAINS AS A MOLTEN FILM BENEATH CRUST. 
! C.....NBCINT=9:  STATIONARY NONPOROUS CRUST OVER ABLATING SUBSTRATE.    
! C...................................................................... 
!       SUBROUTINE ELIMBM
!       IMPLICIT DOUBLE PRECISION(A-H,O-Z)
!       COMMON /WATVARS/FCRUST(999),VLW(999),VLWOLD(999),DWAT(999),
!      1DWATOLD(999),EWAT(999),EWATOLD(999),TWAT(999),CORDDC(999),
!      2DSRDC(999),DHDC(999),TSRDC,TINTDC,HWATB(999),TSURFW(999),XMS(999),
!      3XMST,XINTS,ESRDTW(999),TSRDTW(999),DSRDTW(999),TSRDW,TINTDW,
!      4TWATI,ELDCO(999),ELDCX(999,99),CRDCX(999,99),TIMINJ(999,99),
!      5XDTINJ(999,99),TDTINJ(999,99),ELWATI,XMWAT,XMWATO,XBALW,
!      6HDRY(999),EINTW,XMCT(199),XMCDT(16,999),TMPCDT(999),CMPCDT(999),
!      7FDC(999),FCOV(999),FBED(999),FHEAT(999),XFACJ(999),
!      8XMBEDJ(16,999),XMBEDJT(999),PBED,QBED(999),QWATER(999),
!      9QSURFACE(999),QWATERT(999),HBED(999),POROSBED,XMCRDT(16,999),
!      1XMCRT(999),XMBDINT(999),XMT(999)
!       COMMON/CATCHR/A(999),B(999),C(999),D(999),P(999),Q(999),
!      1RECON(999),DELVEL(999),DSRDT(999),DELHTS(999),EMAX(999,999),
!      2DBLKEN(999),DELHIT(16,999),SOURCE(16,999),SRCTOT(999),
!      3HCROLD(16,999),DCDOT(999),HCRUST(16,999),DFILM(16,999),
!      4DFMOLD(16,999),DENOLD(999),SIGOX(999),SIGCON(999),BET(999),
!      5TFZX(999),TFZC(999),TKX(999),TKM(999),THETO(999,999),
!      6THET1(999,999),OMEG0(4,999),OMEG1(4,999),TAO0(999),TAO1(999),
!      7SIG0(999),SIG1(999),TARGB(999),DADOT(999),DADOTG(999),
!      8XLOLD(4,999),VISREX(999),TATMS(999),HTMP(999),DHTMP(999),
!      9HTMOLD(999)
!       COMMON/CATCHI/NUMS(4,999),NUMOLD(4,999),NTRACK(16),NSUMP(999),
!      1NPASSG(999),NCRSTM(999),NCRRT(999),NPASS(999),NBURN,NBURNO     
!       COMMON/PRINTB/ELEVAT(999),ELOLD(999),XDIST(999,999),XBTW(999,999),
!      1TEMP(999,999),ENTHP(999,999),EOLD(999,999),ENBLK(999),EBKOLD(999),
!      2TBULK(999),HITE(16,999),HITOLD(16,999),HTOT(999),HTOLD(999),
!      3HTCFT(999),HTCOEF(999),QFLUXT(999),QFLUXB(999),VEL(999),ELO(999),
!      4VELOLD(999),SRSCOR(16),AREA(999),RAD(999),ARC(999),VOLCN(16),
!      5VOID(999),VGJ(999),ZABLAT(999),ZABOLD(999),DCRUST(999),
!      6DCROLD(999),DABCON(999),DABOLD(999),DFILMT(999),DFOLT(999),
!      7SMFLX(4,999),XLSMF(4,999),TOTVOL,XFACMS(999),XMFLXA,XMCORT,
!      8VCORT,TOTOX,TOTMET,QFLXT,QFLXB,TIME,DTIME,XMCOR(16),VCOR(16),
!      9TCONI,RSAND,HDOWNC,TBOUND,EMISCN,PDRYWL,XDISTO(999),QOXT(999),
!      1XLENSH,XBTWO(999),RCOMP,WDOOR,RSUMP,RSHELL,RPED,TPED,ELSMP,
!      1TENDP(10,999),TFRZSH,TDEBRS,TKDEBR,PDEBR,CPDEBR,ENENDP(10,999),
!      2ENOLDP(10,999),DXVERT,DXSNK,XDSTE(10,999),XBTE(10,999),HXLA(999),
!      3HXLB(999),TSFEB(999),DCRS(999),DCRSLD(999),HCRS(16,999),
!      4HCRSLD(16,999),THETE0(10,999),THETE1(10,999),QSHELL,QSHELE,TSHELI,
!      5SIGOXE(999),FKOXE(999),RINJC,XLSEC,ANGSEC,ANINJC,XLCHAN,WCHNL,
!      6TEFZX(999),TIMSPC(999),DXNODE(999),TNORM(999),FRCSOL(999),
!      7ALPSPR(999),CRAMCON,HINTF,TSHLMX,XFRMX(999),XFROX(999),XFRTX(999),
!      8XMLMX(999),XMLOX(999),XMLTX(999),XTOTX(999),TIMEO,TMAX,EDOWN(999),
!      9HCP(999)
!       COMMON/PROPI/ NMATC,NMATFI,NMATFF,ICAOH2,ICACO3,IMCCO3,IFH2O,     
!      1IVH2O,ICK2O,IVK2O,INA2O,ITIO2,ISIO2,ICAO,IMGO,IAL2O3,IFEO,IFE2O3, 
!      2IFE3O4,IFE,ICR,INI,IZR,IU,IB4C,IB,ICR2O3,INIO,IUO2,IZRO2,IB2O3,   
!      3NBCINT(999),NODES(999),NUMNOD,IMOX(28),IBAS,ILCS,ILL,NACTIV(999),     
!      4NBFRZM,NBFRZO,NABLFM,NDRNFM,NTYPMT(999,999),NDOOR,NBMADJ,NUMSHV,   
!      5NBSHL(999),NCRSTS(999),NUMSHH,NSKIPE,NACSH,NWAT,NPEND,NBCBOT,
!      6NCRTOP,NBFZOE,NBFZME,NGEOM,NL(999,999),NFRSCT,NLOGSH,NADAB,NINVIS,
!      7NSIMST,NSTEEL,NOVHT,NOVTK,NOVUM,NOVEM,NOVSIG,NPLLOC(999),NBPL,
!      8IXP(999),IYP(999),NVTPE,NSOLTP,NSOLF,NINTF,IFLGA(999),ICTYPE,ICTC,
!      9NPOURS,NSMP,NPED,NDOR,NSHL,NANULS,NSMPCV,NBOIL,NSWALL,NMVER,
!      1NCRTEM,NTHINC,NVELP,NITMAX,NENMAX,NPRINT,NPFREQ,NTIMSPC,NPLFREQ,
!      2NPLTOT,NJET,NJETP,NJETD,NJETND,NODCAP,NVELPW,NITMAXW,NENMXW,
!      3IFLGJ(999),NBEDCQ,ISHELE
!       COMMON/PRINTR/ QFEH2O,QCRH2O,QZRH2O,QFECO2,QCRCO2,QZRCO2,
!      4XFH2OU,XFCAOH,XFMGCA,XFCACO,XZRMRE,XFEMRE,XCRMRE,XZRORE,XFEORE,   
!      5XCRORE,XMH2O,XMCO2,XMCACO,XMMGCA,XMCAOH,TFWL,TFWS,TBWL,TBWS,      
!      6TMCAL,TMCAS,TCAL,TCAS,TFOS,TFOL,TFMS,TFML,XVISC(28),SVISC(28),    
!      7XMOL(28),FMMOL(28),ROM(28),ROMLIQ(28),AEQM(28,2),BEQM(28,2),
!      8CEQM(28,2),ECL,ECS,ECAL,ECAS,EMCAL,EMCAS,EBWL,EBWS,EFWL,EFWS,    
!      9STEF,GRAV,PI,TCS,TCL,CCL,CCS,RMASSL,WPCC,WPM,WPA,WPCS,ROC,RMASSS,   
!      1ANGSHL,RSLAGL,RSLAGS,HNODT,VFAV,VGAV,QXAV,XWTSS(16),  
!      2TSCS(2),TSCL(2),ESCS(2),ESCL(2),CCSS(2),CCSL(2),ROSTLS,ROSTLL,
!      3XFRGAS,HMINC,TST(99),TSTOP(99),AINTP(99),BINTP(99),DRATIO(999),
!      4XBCN(999),XDCN(999),XBLT(15),ADEC(99),BDEC(99),APOUR(16,99),
!      5BPOUR(16,99),XWTC(14),BWIDTH,THCKCV,TMBOIL,TEBOIL,VFINT,ANGFAN,
!      6ALPMAX,THSHL,XFCABL,XNDMIN,DVMX,DAVMX,DEAVMX,DEMX,TDC,QDCU,QDCUO2,
!      7TSINJ,EINJ,DTINJ,TKINJ,ROEV,CPINJ,SURFT,VSINJ,EMINJ,TSINJO,EINJO,
!      8DTINJO,TKINJO,ROEVO,CPINJO,SURFTO,VSINJO,EMINJO,XLEADE,ARSUM,
!      9DBUBOX,UTRISE,TREMSH,DJET,DFALL,WEBER,FROUDE,XPSAITO,XPEPSTN,
!      1FRAG,XMBEDT,XMBED(16),XLPENT,XLPENA,UJET,UFALL,HFALL,ERPV,
!      2TJETT(99),DJETT(99),HWATP,XDOTJET,DVMXW,DAVMXW,DEMXW,DEAVMXW,
!      3QJETW,XSTMJF,TINTSJF,ESAT,DRDOOR,DRANL,EI,QDCBUO2,QDCBU,
!      4EBEDS,EBEDB
!       COMMON/BASPR/ HBMT(999,999,16),HBMOLD(999,999,16) 
!       COMMON/PROPB/CPBM(999),FKB(999,999),DENB(999,999),DTDEB(999,999),
!      1EMIBM(999),DENCRS(999),ENCRS(999),FKRF(999),DENRF(999),CPRF(999) 
!       COMMON/PROPM/DTDEM(999),CPMLT(999),FKMLT(999),DENMLT(999),
!      1SIGMLT(999),UMMLT(999),EMIMLT(999)      
!       DO 85 J=1,NUMNOD
!       IF(NACTIV(J).EQ.0.OR.NADAB.EQ.1) GO TO 85
!       BATEVL=BET(J)   
!       IF(NSMPCV.EQ.1.AND.NBURN.EQ.0.AND.J.LE.NSMP) BATEVL=0.D0
!       A(1)=0.D0
!       B(1)=1.D0
!       C(1)=0.D0
!       D(1)=0.D0
! C.....ASSIGN THE DERIVATIVE OF MELT TEMPERATURE WITH RESPECT TO
! C.....ENTHALPY AND ALSO EFFECTIVE HEAT TRANSFER COEFFICIENT TO BASEMAT
! C.....DEPENDING UPON WATER AVAILABILITY AND PRESENCE/ABSENCE OF MELT.
!       IF(HTMP(J).LE.0.D0) GO TO 432
!       ALPBLK=DTDEM(J) 
!       HTBMEF=HTCOEF(J)
!       GO TO 433
!   432 CONTINUE
!       ALPBLK=0.D0     
!       HTBMEF=FCRUST(J)*HTCOEF(J)
!       IF(NWAT.EQ.2) HTBMEF=DMAX1(HTBMEF,HDRY(J))
!   433 CONTINUE
! C.....ASSIGN PHYSICAL PROPERTIES AT INTERFACIAL NODES FOR CRUSTING/     
! C.....ABLATION CASES. 
!       IF(NBCINT(J).GT.3) GO TO 703
!       NDRIVE=2
!       IF(NTYPMT(1,J).GT.3) GO TO 5090     
!       SDECAY=0.D0     
!       GO TO 5091      
!  5090 CONTINUE
!       SDECAY=ROM(21)*QDCU*HBMT(1,J,6)+ROM(26)*QDCUO2*HBMT(1,J,15)
!  5091 CONTINUE
!       DEN1=DENB(1,J)  
!       TK1=FKB(1,J)    
!       TKJ=TK1
!       DTDE1=DTDEB(1,J)
!       ALPJ=DTDE1      
!       DEN2=DENB(2,J)  
!       TK2=FKB(2,J)    
!       IF(NSMPCV.EQ.1.AND.NBURN.EQ.0.AND.J.LE.NSMP) TK2=0.D0   
!       TKJP1=TK2
!       DTDE2=DTDEB(2,J)
!       ALPJP1=DTDE2    
!       GO TO(91,92,93),NBCINT(J) 
!   703 CONTINUE
!       NDRIVE=3
!       IF(NTYPMT(2,J).GT.3) GO TO 53
!       SDECAY=0.D0     
!       GO TO 54
!    53 CONTINUE
!       SDECAY=ROM(21)*QDCU*HBMT(2,J,6)+ROM(26)*QDCUO2*HBMT(2,J,15)
!    54 CONTINUE
!       DEN1=DENB(1,J)  
!       DEN2=DENB(2,J)  
!       TK1=FKB(1,J)    
!       TK2=FKB(2,J)    
!       IF(NSMPCV.EQ.1.AND.NBURN.EQ.0.AND.J.LE.NSMP) TK2=0.D0   
!       DTDE1=DTDEB(1,J)
!       DTDE2=DTDEB(2,J)
!       TKJ=TK2
!       ALPJ=DTDE2      
!       IRUT=NBCINT(J)-3
!       GO TO (94,95,96,97,98,99),IRUT      
!    91 CONTINUE
!       COND=(TK1*TK2)/(TK1*(XDIST(1,J)-XBTW(1,J))+TK2*XBTW(1,J))
!       A(1)=(XBTW(1,J)*DEN1*(ENTHP(1,J)-EOLD(1,J)))/DTIME-HTBMEF*     
!      1(TARGB(J)-TEMP(1,J))+COND*(TEMP(1,J)-TEMP(2,J))-SDECAY  
!       B(1)=(XBTW(1,J)*DEN1)/DTIME+(HTBMEF+COND)*DTDE1      
!       C(1)=-HTBMEF*ALPBLK    
!       D(1)=COND*DTDE2 
!       DADOTG(J)=0.D0  
!       DADOT(J)=0.D0   
!       DCDOT(J)=0.D0   
!       BS0=0.D0
!       AS1=0.D0
!       BS1=0.D0
!       BT0=0.D0
!       AT1=0.D0
!       BT1=0.D0
!       WJP1=0.D0
!       WBLK=0.D0
!       FBLK=0.D0
!       FBLKG=0.D0      
!       FJP1=0.D0
!       FJP1G=0.D0      
!       GO TO 100
!    92 CONTINUE
!       IF(NCRRT(J).EQ.2) GO TO 93
!       Z1=((HTBMEF*(TBULK(J)-TFZX(J)))/SIGOX(J))**2
!       Z2=DCROLD(J)*DCROLD(J)+(TKX(J)*(TFZX(J)-TEMP(1,J)))/SIGOX(J)      
!       GAM=SQRT(Z1+4.D0*Z2)      
!       WJP1=-TKX(J)/(SIGOX(J)*GAM)
!       WBLK=0.5D0*(((TBULK(J)-TFZX(J))*HTBMEF**2)/(GAM*SIGOX(J)**2)   
!      1-HTBMEF/SIGOX(J))      
!       A(1)=(XBTW(1,J)*DEN1*(ENTHP(1,J)-EOLD(1,J)))/DTIME-(TKX(J)*(TFZX(J
!      1)-TEMP(1,J)))/DCRUST(J)+COND*(TEMP(1,J)-TEMP(2,J))-SDECAY
!       B(1)=(XBTW(1,J)*DEN1)/DTIME+(COND+(TKX(J)*WJP1*(TFZX(J)-TEMP(1,J))
!      1)/DCRUST(J)**2+TKX(J)/DCRUST(J))*DTDE1
!       C(1)=(TKX(J)*(TFZX(J)-TEMP(1,J))*WBLK*ALPBLK)/DCRUST(J)**2
!       D(1)=COND*DTDE2 
!       DADOT(J)=0.D0   
!       DADOTG(J)=0.D0  
!       ZX1=TKX(J)/(2.D0*DTIME*SIGOX(J))    
!       ZX2=HTBMEF/(2.D0*DTIME*SIGOX(J)) 
!       DCDOT(J)=(ZX1*(TFZX(J)-TEMP(1,J)))/DCRUST(J)-ZX2*(TBULK(J)-TFZX(J)
!      1)     
!       FBLK=-(ZX1*(TFZX(J)-TEMP(1,J))*WBLK)/DCRUST(J)**2-ZX2   
!       FJP1=-(ZX1*(TFZX(J)-TEMP(1,J))*WJP1)/DCRUST(J)**2-ZX1/DCRUST(J)   
!       FBLKG=0.D0      
!       FJP1G=0.D0      
!       BS0=FJP1*DTDE1  
!       AS1=FBLK*ALPBLK 
!       BS1=FJP1*DTDE1  
!       BT0=0.D0
!       AT1=0.D0
!       BT1=0.D0
!       WJP1=0.D0
!       WBLK=0.D0
!       GO TO 100
!    93 CONTINUE
!       COND=(TK1*TK2)/(TK1*(XDIST(1,J)-XBTW(1,J))+TK2*XBTW(1,J))
!       A(1)=(XBTW(1,J)*DEN1*(ENTHP(1,J)-EOLD(1,J)))/DTIME-HTBMEF*(TARG
!      1B(J)-TFZX(J))+COND*(TEMP(1,J)-TEMP(2,J))-SDECAY
!       B(1)=(XBTW(1,J)*DEN1)/DTIME+COND*DTDE1
!       C(1)=-HTBMEF*ALPBLK    
!       D(1)=COND*DTDE2 
!       DADOT(J)=0.D0   
!       DCDOT(J)=0.D0   
!       DADOTG(J)=0.D0  
!       BS0=0.D0
!       AS1=0.D0
!       BS1=0.D0
!       BT0=0.D0
!       AT1=0.D0
!       BT1=0.D0
!       WJP1=0.D0
!       WBLK=0.D0
!       FBLK=0.D0
!       FBLKG=0.D0      
!       FJP1=0.D0
!       FJP1G=0.D0      
!       GO TO 100
!    94 CONTINUE
!       Z1=((HTBMEF*(TBULK(J)-TFZC(J)))/SIGCON(J))**2
!       Z2=ZABOLD(J)**2+(BATEVL*(TFZC(J)-TEMP(2,J)))/SIGCON(J)  
!       GAM=SQRT(Z1+4.D0*Z2)      
!       WJP1=-BATEVL/(SIGCON(J)*GAM)
!       WBLK=0.5D0*(((TBULK(J)-TFZC(J))*HTBMEF**2)/(GAM*SIGCON(J)**2)  
!      1-HTBMEF/SIGCON(J))     
!       DCDOT(J)=0.D0   
!       ZX1=BATEVL/(2.D0*DTIME*SIGCON(J))   
!       ZX2=HTBMEF/(2.D0*DTIME*SIGCON(J))
!       DADOT(J)=(ZX1*(TFZC(J)-TEMP(2,J)))/ZABLAT(J)-ZX2*(TBULK(J)-TFZC(J)
!      1)     
!       DADOTG(J)=DADOT(J)
!       DCDOT(J)=0.D0   
!       FBLK=-(ZX1*(TFZC(J)-TEMP(2,J))*WBLK)/ZABLAT(J)**2-ZX2   
!       FJP1=-(ZX1*(TFZC(J)-TEMP(2,J))*WJP1)/ZABLAT(J)**2-ZX1/ZABLAT(J)   
!       FBLKG=FBLK      
!       FJP1G=FJP1      
!       BS0=0.D0
!       AS1=0.D0
!       BS1=0.D0
!       BT0=FJP1*DTDE2  
!       AT1=FBLK*ALPBLK 
!       BT1=FJP1*DTDE2  
!       GO TO 101
!    95 CONTINUE
!       HEFF=(TKM(J)*HTBMEF)/(TKM(J)+DFILMT(J)*HTBMEF)    
!       Z1=((HEFF*(TBULK(J)-TFZC(J)))/SIGCON(J))**2   
!       Z2=ZABOLD(J)**2+(BATEVL*(TFZC(J)-TEMP(2,J)))/SIGCON(J)  
!       GAM=SQRT(Z1+4.D0*Z2)      
!       Z3=1.D0-(HEFF*(TBULK(J)-TFZC(J)))/(GAM*SIGCON(J))
!       WBLK=-(HEFF*Z3)/(2.D0*SIGCON(J))    
!       WJP1=-BATEVL/(GAM*SIGCON(J))
!       ZX1=BATEVL/(2.D0*DTIME*SIGCON(J))   
!       ZX2=HEFF/(2.D0*DTIME*SIGCON(J))     
!       DADOTG(J)=(ZX1*(TFZC(J)-TEMP(2,J)))/ZABLAT(J)-ZX2*(TBULK(J)-TFZC(J
!      1))    
!       DADOT(J)=0.D0   
!       DCDOT(J)=0.D0   
!       FBLKG=-(ZX1*(TFZC(J)-TEMP(2,J))*WBLK)/ZABLAT(J)**2-ZX2  
!       FBLK=0.D0
!       FJP1G=-(ZX1*(TFZC(J)-TEMP(2,J))*WJP1)/ZABLAT(J)**2-ZX1/ZABLAT(J)  
!       FJP1=0.D0
!       BS0=0.D0
!       AS1=0.D0
!       BS1=0.D0
!       BT0=0.D0
!       AT1=0.D0
!       BT1=0.D0
!       GO TO 101
!    96 CONTINUE
!       IF(NCRRT(J).EQ.2) GO TO 97
!       F3=((TKX(J)*(TFZX(J)-TFZC(J)))/(SIGCON(J)*DCRUST(J)))**2
!       F4=ZABOLD(J)**2+(BATEVL*(TFZC(J)-TEMP(2,J)))/SIGCON(J)  
!       GAMCON=SQRT(F3+4.D0*F4)   
!       WJP1=-BATEVL/(SIGCON(J)*GAMCON)     
!       F1=((HTBMEF*(TBULK(J)-TFZX(J)))/SIGOX(J))**2
!       F2=DCROLD(J)**2+(TKX(J)*(TFZX(J)-TFZC(J)))/SIGOX(J)     
!       GAMOX=SQRT(F1+4.D0*F2)    
!       F8=((TBULK(J)-TFZX(J))/GAMOX)*(HTBMEF/SIGOX(J))**2   
!       WBLKO=0.5D0*(F8-HTBMEF/SIGOX(J)) 
!       F9=(TKX(J)*(TFZX(J)-TFZC(J)))/(SIGCON(J)*DCRUST(J)**2)  
!       F10=(TKX(J)*(TFZX(J)-TFZC(J)))/(GAMCON*SIGCON(J)*DCRUST(J))
!       WBLK=0.5D0*F9*WBLKO*(1.D0-F10)      
!       ZX1O=TKX(J)/(2.D0*DTIME*SIGOX(J))   
!       ZX2O=HTBMEF/(2.D0*DTIME*SIGOX(J))
!       ZX1A=BATEVL/(2.D0*DTIME*SIGCON(J))  
!       ZX2A=TKX(J)/(2.D0*DTIME*SIGCON(J))  
!       DCDOT(J)=(ZX1O*(TFZX(J)-TFZC(J)))/DCRUST(J)-ZX2O*(TBULK(J)-TFZX(J)
!      1)     
!       DADOT(J)=(ZX1A*(TFZC(J)-TEMP(2,J)))/ZABLAT(J)-(ZX2A*(TFZX(J)-TFZC(
!      1J)))/DCRUST(J)  
!       DADOTG(J)=DADOT(J)
!       FBLKO=-(ZX1O*(TFZX(J)-TFZC(J))*WBLKO)/DCRUST(J)**2-ZX2O 
!       FBLK=-(ZX1A*(TFZC(J)-TEMP(2,J))*WBLK)/ZABLAT(J)**2+(ZX2A*(TFZX(J)-
!      1TFZC(J))*WBLKO)/DCRUST(J)**2
!       FBLKG=FBLK      
!       FJP1=-(ZX1A*(TFZC(J)-TEMP(2,J))*WJP1)/ZABLAT(J)**2-ZX1A/ZABLAT(J) 
!       FJP1G=FJP1      
!       BS0=0.D0
!       AS1=FBLKO*ALPBLK
!       BS1=0.D0
!       BT0=FJP1*DTDE2  
!       AT1=FBLK*ALPBLK 
!       BT1=FJP1*DTDE2  
!       GO TO 101
!    97 CONTINUE
!       Z1=((HTBMEF*(TBULK(J)-TFZC(J)))/SIGCON(J))**2
!       Z2=ZABOLD(J)**2+(BATEVL*(TFZC(J)-TEMP(2,J)))/SIGCON(J)  
!       GAMCON=SQRT(Z1+4.D0*Z2)   
!       WBLK=0.5D0*(((TBULK(J)-TFZC(J))*HTBMEF**2)/(GAMCON*SIGCON(J)**2
!      1)-HTBMEF/SIGCON(J))    
!       WJP1=-BATEVL/(SIGCON(J)*GAMCON)     
!       ZX1=BATEVL/(2.D0*DTIME*SIGCON(J))   
!       ZX2=HTBMEF/(2.D0*DTIME*SIGCON(J))
!       DADOT(J)=(ZX1*(TFZC(J)-TEMP(2,J)))/ZABLAT(J)-ZX2*(TBULK(J)-TFZX(J)
!      1)     
!       DADOTG(J)=DADOT(J)
!       DCDOT(J)=0.D0   
!       FJP1=-(ZX1*(TFZC(J)-TEMP(2,J))*WJP1)/ZABLAT(J)**2-ZX1/ZABLAT(J)   
!       FJP1G=FJP1      
!       FBLK=-(ZX1*(TFZC(J)-TEMP(2,J))*WBLK)/ZABLAT(J)**2
!       FBLKG=FBLK      
!       BS0=0.D0
!       AS1=0.D0
!       BS1=0.D0
!       BT0=FJP1*DTDE2  
!       AT1=FBLK*ALPBLK 
!       BT1=FJP1*DTDE2  
!       GO TO 101
!    98 CONTINUE
!       IF(NCRRT(J).EQ.2) GO TO 99
!       TKEFF=(TKX(J)*TKM(J)*DCRUST(J))/(TKX(J)*DFILMT(J)+TKM(J)*DCRUST(J)
!      1)     
!       Z1=((HTBMEF*(TBULK(J)-TFZX(J)))/SIGOX(J))**2
!       Z2=DCROLD(J)**2+(TKEFF*(TFZX(J)-TFZC(J)))/SIGOX(J)      
!       GAMOX=SQRT(Z1+4.D0*Z2)    
!       Z3=((TKEFF*(TFZX(J)-TFZC(J)))/(DCRUST(J)*SIGCON(J)))**2 
!       Z4=ZABOLD(J)**2+(BATEVL*(TFZC(J)-TEMP(2,J)))/SIGCON(J)  
!       GAM=SQRT(Z3+4.D0*Z4)      
!       WJP1=-BATEVL/(GAM*SIGCON(J))
!       Z5=(TKEFF*(TFZX(J)-TFZC(J)))/(SIGCON(J)*DCRUST(J))      
!       Z6=(Z5*(1.D0-Z5/GAM))/(2.D0*DCRUST(J))
!       Z7=(HTBMEF*(TBULK(J)-TFZX(J)))/(GAM*SIGOX(J))
!       WBLKCR=-(HTBMEF*(1.D0-Z7))/(2.D0*SIGOX(J)) 
!       WBLK=Z6*WBLKCR  
!       ZX1=TKEFF/(2.D0*DTIME*SIGOX(J))     
!       ZX2=HTBMEF/(2.D0*DTIME*SIGOX(J)) 
!       FBLKCR=-(ZX1*(TFZX(J)-TFZC(J))*WBLKCR)/DCRUST(J)**2-ZX2 
!       ZX1A=BATEVL/(2.D0*DTIME*SIGCON(J))  
!       ZX2A=TKEFF/(2.D0*DTIME*SIGCON(J))   
!       FBLKG=(ZX2A*(TFZX(J)-TFZC(J))*WBLKCR)/DCRUST(J)**2      
!       FBLK=0.D0
!       FJP1G=-(ZX1A*(TFZC(J)-TEMP(2,J))*WJP1)/ZABLAT(J)**2-ZX1A/ZABLAT(J)
!       FJP1=0.D0
!       DCDOT(J)=ZX1*(TFZX(J)-TFZC(J))/DCRUST(J)-ZX2*(TBULK(J)-TFZX(J))   
!       DADOTG(J)=(ZX1A*(TFZC(J)-TEMP(2,J)))/ZABLAT(J)-(ZX2A*(TFZX(J)-TFZC
!      1(J)))/DCRUST(J) 
!       DADOT(J)=0.D0   
!       BS0=0.D0
!       AS1=FBLKCR*ALPBLK
!       BS1=0.D0
!       BT0=0.D0
!       AT1=0.D0
!       BT1=0.D0
!       GO TO 101
!    99 CONTINUE
!       Z1=((HTBMEF*(TBULK(J)-TFZX(J)))/SIGCON(J))**2
!       Z2=ZABOLD(J)**2+(BATEVL*(TFZC(J)-TEMP(2,J)))/SIGCON(J)  
!       GAM=SQRT(Z1+4.D0*Z2)      
!       WJP1=-BATEVL/(SIGCON(J)*GAM)
!       WBLK=0.5D0*(((TBULK(J)-TFZX(J))*HTBMEF**2)/(GAM*SIGCON(J)**2)  
!      1-HTBMEF/SIGCON(J))     
!       ZX1=BATEVL/(2.D0*DTIME*SIGCON(J))   
!       ZX2=HTBMEF/(2.D0*DTIME*SIGCON(J))
!       DADOTG(J)=(ZX1*(TFZC(J)-TEMP(2,J)))/ZABLAT(J)-ZX2*(TBULK(J)-TFZX(J
!      1))    
!       DADOT(J)=0.D0   
!       DCDOT(J)=0.D0   
!       FBLKG=-(ZX1*(TFZC(J)-TEMP(2,J))*WBLK)/ZABLAT(J)**2-ZX2  
!       FBLK=0.D0
!       FJP1G=-(ZX1*(TFZC(J)-TEMP(2,J))*WJP1)/ZABLAT(J)**2-ZX1/ZABLAT(J)  
!       BS0=0.D0
!       AS1=0.D0
!       BS1=0.D0
!       BT0=0.D0
!       AT1=0.D0
!       BT1=0.D0
!   101 CONTINUE
! C.....CALCULATE MATRIX ELEMENTS FOR SECOND NODE WHEN SUBSTRATE IS
! C.....ABLATING.
!       CON12=BATEVL/ZABLAT(J)    
!       DTDE3=DTDEB(3,J)
!       TK3=FKB(3,J)    
!       TKJP1=TK3
!       ALPJP1=DTDE3    
!       CON23=(TK2*TK3)/(TK2*(XDIST(2,J)-XBTW(2,J))+TK3*XBTW(2,J))
!       TEM12=TFZC(J)-TEMP(2,J)   
!       TEM23=TEMP(2,J)-TEMP(3,J) 
!       DENP=ENTHP(2,J)-EOLD(2,J) 
!       VOLUME=XBTW(2,J)
!       A(2)=(VOLUME*DEN2*DENP)/DTIME-CON12*TEM12+CON23*TEM23-SDECAY      
!       B(2)=(VOLUME*DEN2)/DTIME+DTDE2*(CON12+CON23+(TEM12*BATEVL*WJP1)/ZA
!      1BLAT(J)**2)     
!       C(2)=(TEM12*BATEVL*WBLK*ALPBLK)/ZABLAT(J)**2  
!       D(2)=CON23*DTDE3
!   100 CONTINUE
! C.....CALCULATE MATRIX ELEMENTS, EXCEPT THOSE FOR THE ADIABATIC NODE,   
! C.....IN THE INTERIOR OF THE SUBSTRATE REGION.      
!       NUP=NODES(J)-1  
!       DO 147 IDR=NDRIVE,NUP     
!       DENSJ=DENB(IDR,J)
!       VOLJ=XDIST(IDR-1,J)-XBTW(IDR-1,J)+XBTW(IDR,J) 
!       ALPJM1=ALPJ     
!       TKJM1=TKJ
!       ALPJ=ALPJP1     
!       TKJ=TKJP1
!       IF(NTYPMT(IDR,J).GT.3) GO TO 201    
!       SDECAY=0.D0     
!       GO TO 2021      
!   201 CONTINUE
!       SDECAY=ROM(21)*QDCU*HBMT(IDR,J,6)+ROM(26)*QDCUO2*HBMT(IDR,J,15)   
!  2021 CONTINUE
!       IP=IDR+1
!       ALPJP1=DTDEB(IP,J)
!       TKJP1=FKB(IP,J) 
!       CJM1=(TKJ*TKJM1)/(TKJ*XBTW(IDR-1,J)+TKJM1*(XDIST(IDR-1,J)-XBTW(IDR
!      1-1,J)))
!       CJP1=(TKJ*TKJP1)/(TKJP1*XBTW(IDR,J)+TKJ*(XDIST(IDR,J)-XBTW(IDR,J))
!      1)     
!       A(IDR)=(VOLJ*DENSJ*(ENTHP(IDR,J)-EOLD(IDR,J)))/DTIME-CJM1*(TEMP(ID
!      1R-1,J)-TEMP(IDR,J))+CJP1*(TEMP(IDR,J)-TEMP(IDR+1,J))-SDECAY
!       B(IDR)=(VOLJ*DENSJ)/DTIME+(CJM1+CJP1)*ALPJ    
!       C(IDR)=-CJM1*ALPJM1
!       D(IDR)=CJP1*ALPJP1
!   147 CONTINUE
! C.....CALCULATE MATRIX ELEMENTS FOR ADIABATIC NODES.
!       NTOP=NODES(J)   
!       DENS=DENB(NTOP,J)
!       VOLB=XDIST(NUP,J)-XBTW(NUP,J)
!       IF(NTYPMT(NTOP,J).GT.3) GO TO 2081  
!       SDECAY=0.D0     
!       GO TO 209
!  2081 CONTINUE
!       SDECAY=ROM(21)*QDCU*HBMT(NTOP,J,6)+ROM(26)*QDCUO2*HBMT(NTOP,J,15) 
!   209 CONTINUE
!       DENT=ENTHP(NTOP,J)-EOLD(NTOP,J)     
!       DTEMP=TEMP(NTOP-1,J)-TEMP(NTOP,J)   
!       A(NTOP)=(VOLB*DENT*DENS)/DTIME-CJP1*DTEMP     
!       B(NTOP)=(VOLB*DENS)/DTIME+CJP1*ALPJP1
!       C(NTOP)=-CJP1*ALPJ
!       D(NTOP)=0.D0    
! C.....GIVEN THE TDMA ELEMENTS IN THE J-TH SUBSTRATE VECTOR, SOLVE
! C.....FOR THE FORWARD ELIMINATION COEFFICIENTS USING THE TDMA ALGORITHM.
!       DO 151 IDR=1,NDRIVE-1     
!       P(IDR)=D(IDR)/B(IDR)      
!       Q(IDR)=-A(IDR)/B(IDR)     
!   151 CONTINUE
!       DO 152 IDR=NDRIVE,NODES(J)
!       P(IDR)=D(IDR)/(B(IDR)+C(IDR)*P(IDR-1))
!       Q(IDR)=-(A(IDR)+C(IDR)*Q(IDR-1))/(B(IDR)+C(IDR)*P(IDR-1))
!   152 CONTINUE
! C.....DO BACKWARDS SUBSTITUTION TO FIND THETO COEFFICIENTS.   
!       THETO(NODES(J),J)=Q(NODES(J))
!       DO 153 IDR=1,NODES(J)-1   
!       IARG=NODES(J)-IDR
!       THETO(IARG,J)=P(IARG)*THETO(IARG+1,J)+Q(IARG) 
!   153 CONTINUE
! C.....FIND THE THET1 COEFFICIENTS, EXCEPT WHEN THERE IS NO MELT PRESENT 
! C.....AT THE MELT/BASEMAT INTERFACE.      
!       IF(HTMP(J).GT.0.D0) GO TO 9010      
!       DO 9011 IDR=1,NODES(J)    
!       THET1(IDR,J)=0.D0
!  9011 CONTINUE
!       GO TO 9012      
!  9010 CONTINUE
!       DO 156 IDR=1,NDRIVE-1     
!       Q(IDR)=-C(IDR)/B(IDR)     
!   156 CONTINUE
!       DO 157 IDR=NDRIVE,NODES(J)
!       Q(IDR)=-(C(IDR)*Q(IDR-1))/(B(IDR)+C(IDR)*P(IDR-1))      
!   157 CONTINUE
! C.....DO BACKWARDS SUBSTITUTION TO FIND THET1 COEFFICIENTS.   
!       THET1(NODES(J),J)=Q(NODES(J))
!       DO 158 IDR=1,NODES(J)-1   
!       IARG=NODES(J)-IDR
!       THET1(IARG,J)=P(IARG)*THET1(IARG+1,J)+Q(IARG) 
!   158 CONTINUE
!  9012 CONTINUE
! C.....WITH THET COEFFICIENTS DETERMINED, FIND CRUSTING & ABLATION
! C.....FUNCTIONS FOR SOLUTION OF CONSERVATION OF MASS & ENERGY EQUATIONS.
!       SIG0(J)=BS0*THETO(1,J)    
!       SIG1(J)=AS1+BS1*THET1(1,J)
!       TAO0(J)=BT0*THETO(2,J)    
!       TAO1(J)=AT1+BT1*THET1(2,J)
! C...................................................................... 
! C.....NOW EVALUATE THE UNBOUND/BOUND WATER & CO2 GAS VELOCITY DERIVATIVE
! C..... FUNCTIONS FOR SOLUTION OF CONERVATION OF MASS AND ENERGY EQS.
!       DO 252 IOUT=1,4 
!       IF(NPASSG(J).EQ.1) GO TO 299
!       IF(HTMP(J).LE.0.D0) GO TO 299
!       GO TO(253,254,255,256),IOUT
!   253 CONTINUE
!       TCOMP=TFWL      
!       BDCP=XFH2OU     
!       GO TO 257
!   254 CONTINUE
!       TCOMP=TBWL      
!       BDCP=(XFCAOH*XMH2O)/XMCAOH
!       GO TO 257
!   255 CONTINUE
!       TCOMP=TMCAL     
!       BDCP=(2.D0*XFMGCA*XMCO2)/XMMGCA     
!       GO TO 257
!   256 CONTINUE
!       TCOMP=TCAL      
!       BDCP=(XFCACO*XMCO2)/XMCACO
!   257 CONTINUE
!       IF(BDCP.LE.0.D0) GO TO 299
! C.....FIRST CHECK IF IOUT-TH ISOTHERM LIES BETWEEN THE IDR & IDR+1      
! C.....NODES.
!       DO 237 IDR=1,NODES(J)-1   
!       SIGN=(TEMP(IDR,J)-TCOMP)*(TEMP(IDR+1,J)-TCOMP)
!       IF(SIGN.GT.0.D0) GO TO 237
!       IF(TEMP(IDR+1,J).EQ.TEMP(IDR,J)) GO TO 237    
! C.....ALGORITHM REACHES HERE, THEN ISOTHERM HAS BEEN FOUND.   
!       IF(IDR.GT.1) GO TO 243    
!       IF(NBCINT(J).LE.3) GO TO 243
! C.....THE FOLLOWING FINDS THE GAS MASS FLUX WHEN ISOTHERM LIES ADJACENT 
! C.....TO AN ABLATING BOUNDARY NODE.
!       IF(NUMOLD(IOUT,J).GT.IDR) GO TO 237 
!       DXSAT=ZABLAT(J)*((TCOMP-TEMP(IDR,J))/(TEMP(IDR+1,J)-TEMP(IDR,J))) 
!       XLEN=XDISTO(J)-ZABLAT(J)+DXSAT      
!       IF(XLEN.GE.XBTWO(J)) GO TO 248      
!       IP=IDR
!       GO TO 273
!   248 CONTINUE
!       IP=IDR+1
!   273 CONTINUE
!       NPROP=NTYPMT(IP,J)
! C.....CHECK TO SEE IF ISOTHERM LIES IN GAS PRODUCING REGION.  
!       IF(NPROP.GT.3) GO TO 237  
!       IF(NL(IP,J).EQ.2) GO TO 237
!       I2=IDR+1
!       BDCK=ROC*BDCP   
!       XDOTG=SMFLX(IOUT,J)/BDCK  
!       VL2=XBTW(I2,J)  
!       IF(NTYPMT(I2,J).GT.3) GO TO 1232    
!       SDECAY=0.D0     
!       GO TO 1233      
!  1232 CONTINUE
!       SDECAY=ROM(21)*QDCU*HBMT(I2,J,6)+ROM(26)*QDCUO2*HBMT(I2,J,15)     
!  1233 CONTINUE
!       EDOTG=(BET(J)*TEM12/ZABLAT(J)-CON23*TEM23+SDECAY)/(DEN2*VL2)      
!       Z1=XDOTG*DTDE2/TEM12      
!       Z2=(DTDE2*(DADOTG(J)+(ZABLAT(J)*DTDE2*EDOTG*(TFZC(J)-TCOMP))/(TEM1
!      12*TEM12)))/TEM12
!       Z3=(TFZC(J)-TCOMP)/TEM12**2
!       Z4=((ZABLAT(J)*DTDE2*DTDE2*Z3)/(DEN2*VL2*TEM12))*(BET(J)/ZABLAT(J)
!      1+CON23)
!       Z5=EDOTG-(BET(J)*TEM12)/(ZABLAT(J)*DEN2*VL2)  
!       Z6=(DTDE2*DTDE2*WJP1*Z3*Z5)/TEM12   
!       Z7=((TCOMP-TEMP(2,J))*FJP1G*DTDE2)/TEM12      
!       ZET2=Z1+Z2-Z4+Z6-Z7
!       ZET3=(ZABLAT(J)*DTDE2*DTDE3*Z3*CON23)/(TEM12*DEN2*VL2)  
!       ZETBLK=(DTDE2*Z3*Z5*ALPBLK*WBLK)/TEM12-((TCOMP-TEMP(2,J))*ALPBLK*F
!      1BLKG)/TEM12     
!       OM0=ZET2*THETO(IDR+1,J)+ZET3*THETO(IDR+2,J)   
!       OM1=ZET2*THET1(IDR+1,J)+ZET3*THET1(IDR+2,J)+ZETBLK      
!       OMEG0(IOUT,J)=OM0*BDCK    
!       OMEG1(IOUT,J)=OM1*BDCK    
!       GO TO 252
!   243 CONTINUE
! C.....DETERMINE IF GAS IS GENERATED IN NON-BOUNDARY AND/OR NON ABLATING 
! C.....NODES.
!       DXSAT=XDIST(IDR,J)*((TCOMP-TEMP(IDR,J))/(TEMP(IDR+1,J)-TEMP(IDR,J)
!      1))    
!       IF(DXSAT.GE.XBTW(IDR,J)) GO TO 228  
!       IP=IDR
!       GO TO 229
!   228 CONTINUE
!       IP=IDR+1
!   229 CONTINUE
!       NPROP=NTYPMT(IP,J)
!       IF(NPROP.GT.3) GO TO 237  
!       IF(NL(IP,J).EQ.2) GO TO 237
!       IF(IDR.LT.NUMOLD(IOUT,J)) GO TO 237 
! C.....SET CONSTANTS REQUIRED FOR THE EVALUATION OF THE DEGASSING
! C.....FORWARD ELIMINATION COEFFICIENTS.   
!       LM1=IDR-1
!       L=IDR 
!       LP1=IDR+1
!       LP2=IDR+2
!       DENGJ=DENB(L,J) 
!       DENGK=DENB(LP1,J)
!       BDCK=ROC*BDCP   
!       XDOTG=SMFLX(IOUT,J)/BDCK  
! C.....SET INTERNODAL CONDUCTANCES, VOLUMES, AND LENGTHS.      
!       VLGJ=XBTWO(L)   
!       IF(L.GT.1) VLGJ=XDIST(LM1,J)-XBTW(LM1,J)+XBTW(L,J)      
!       VLGJP1=XDIST(L,J)-XBTW(L,J)+XBTW(LP1,J)
!       XLJJP1=XDIST(L,J)
!       XLFT=XBTW(L,J)/XLJJP1     
!       XRFT=1.D0-XLFT  
!       CJP12=(FKB(L,J)*FKB(LP1,J))/(FKB(LP1,J)*XBTW(L,J)+FKB(L,J)*(XDIST(
!      1L,J)-XBTW(L,J)))
!       DJM12=CJP12     
!       DENOM=FKB(LP2,J)*XBTW(LP1,J)+FKB(LP1,J)*(XDIST(LP1,J)-XBTW(LP1,J))
!       DJP12=0.D0      
!       IF(DENOM.GT.0.D0) DJP12=(FKB(LP1,J)*FKB(LP2,J))/DENOM   
!       IF(L.GT.1) GO TO 3031     
!       GAMCD=HTBMEF*(TARGB(J)-TEMP(1,J))
!       IF(NBCINT(J).EQ.2) GAMCD=(TKX(J)*(TFZX(J)-TEMP(1,J)))/DCRUST(J)  
!       IF(NBCINT(J).EQ.3) GAMCD=HTBMEF*(TBULK(J)-TFZX(J))   
!       GO TO 3032      
!  3031 CONTINUE
!       IF(L.GT.2.OR.NBCINT(J).LE.3) GO TO 3033
!       GAMCD=(BET(J)*(TFZC(J)-TEMP(2,J)))/ZABLAT(J)  
!       GO TO 3032      
!  3033 CONTINUE
!       CJM12=(FKB(LM1,J)*FKB(L,J))/(FKB(L,J)*XBTW(LM1,J)+FKB(LM1,J)*(XDIS
!      1T(LM1,J)-XBTW(LM1,J)))    
!       GAMCD=CJM12*(TEMP(LM1,J)-TEMP(L,J)) 
!  3032 CONTINUE
!       IF(NTYPMT(L,J).GT.3) GO TO 4032     
!       SDECAJ=0.D0     
!       GO TO 4033      
!  4032 CONTINUE
!       SDECAJ=ROM(21)*QDCU*HBMT(L,J,6)+ROM(21)*QDCUO2*HBMT(L,J,15)
!  4033 CONTINUE
!       IF(NTYPMT(LP1,J).GT.3) GO TO 4034   
!       SDECAK=0.D0     
!       GO TO 4035      
!  4034 CONTINUE
!       SDECAK=ROM(21)*QDCU*HBMT(LP1,J,6)+ROM(21)*QDCUO2*HBMT(LP1,J,15)   
!  4035 CONTINUE
!       EDOTJ=(GAMCD-CJP12*(TEMP(L,J)-TEMP(LP1,J))+SDECAJ)/(DENGJ*VLGJ)   
!       EDOTK=(DJM12*(TEMP(L,J)-TEMP(LP1,J))-DJP12*(TEMP(LP1,J)-TEMP(LP2,J
!      1))+SDECAK)/(DENGK*VLGJP1) 
!       IF(L.GT.1) GO TO 4045     
!       BETKK=HTBMEF 
!       IF(NBCINT(J).EQ.2) BETKK=TKX(J)/DCRUST(J)    
!       IF(NBCINT(J).EQ.3) BETKK=0.D0
!       GO TO 4046      
!  4045 CONTINUE
!       BETKK=CJM12     
!       IF(J.EQ.2.AND.NBCINT(J).GT.3) BETKK=BET(J)/ZABLAT(J)    
!  4046 CONTINUE
!       C1=2.D0*XDOTG+(XRFT*XLJJP1*DTDEB(LP1,J)*EDOTK)/(TEMP(LP1,J)-TEMP(L
!      1,J))  
!       C2=(DTDEB(L,J)*C1)/(TEMP(LP1,J)-TEMP(L,J))    
!       C3=(XLFT*XLJJP1*DTDEB(L,J)*DTDEB(L,J)*(TCOMP-TEMP(LP1,J))*(BETKK+C
!      1JP12))/(DENGJ*VLGJ*(TEMP(LP1,J)-TEMP(L,J))**2)
!       C4=(XRFT*XLJJP1*DTDEB(L,J)*DTDEB(LP1,J)*(TEMP(L,J)-TCOMP)*DJM12)/(
!      1DENGK*VLGJP1*(TEMP(LP1,J)-TEMP(L,J))**2)      
!       ZETJ=C2-C3+C4   
!       C1=2.D0*XDOTG+(XLFT*XLJJP1*DTDEB(L,J)*EDOTJ)/(TEMP(LP1,J)-TEMP(L,J
!      1))    
!       C2=(DTDEB(LP1,J)*C1)/(TEMP(LP1,J)-TEMP(L,J))  
!       C3=(XLFT*XLJJP1*DTDEB(L,J)*DTDEB(LP1,J)*(TCOMP-TEMP(LP1,J))*CJP12)
!      1/(DENGJ*VLGJ*(TEMP(LP1,J)-TEMP(L,J))**2)      
!       C4=(XRFT*XLJJP1*DTDEB(LP1,J)*DTDEB(LP1,J)*(TEMP(L,J)-TCOMP)*(DJM12
!      1+DJP12))/(DENGK*VLGJP1*(TEMP(LP1,J)-TEMP(L,J))**2)      
!       ZETJP1=-C2+C3-C4
!       ZETJP2=(XLJJP1*DTDEB(LP1,J)*DTDEB(LP2,J)*(TEMP(L,J)-TCOMP)*DJP12)/
!      1(VLGJP1*DENGK*(TEMP(LP1,J)-TEMP(L,J))**2)     
!       ZETJM1=0.D0     
!       IF(L.EQ.1) GO TO 1511     
!       C1=(XLJJP1*DTDEB(L,J)*DTDEB(LM1,J)*(TCOMP-TEMP(LP1,J))*CJM12)/(DEN
!      1GJ*VLGJ*(TEMP(LP1,J)-TEMP(L,J))**2) 
!       IF(L.GE.2.AND.NBCINT(J).LE.3) ZETJM1=C1
!       IF(L.GE.3) ZETJM1=C1      
!  1511 CONTINUE
!       C1=-(XLJJP1*DTDEB(L,J)*DTDEB(L,J)*(TCOMP-TEMP(LP1,J)))/(DENGJ*VLGJ
!      1*(TEMP(LP1,J)-TEMP(L,J))**2)
!       ZETG=0.D0
!       IF(NBCINT(J).EQ.2.AND.L.EQ.1) ZETG=(C1*TKX(J)*(TFZX(J)-TEMP(L,J))*
!      1WJP1)/DCRUST(J)**2
!       IF(NBCINT(J).GT.3.AND.L.EQ.2) ZETG=(C1*BET(J)*(TFZC(J)-TEMP(L,J))
!      1*WJP1)/ZABLAT(J)**2
!       ZETB=0.D0
!       C1=(XLJJP1*DTDEB(L,J)*(TCOMP-TEMP(LP1,J))*ALPBLK)/(DENGJ*VLGJ*(TEM
!      1P(LP1,J)-TEMP(L,J))**2)   
!       IF(L.GT.1) GO TO 1803     
!       ZETB=C1*HTBMEF
!       IF(NBCINT(J).EQ.2) ZETB=-(C1*TKX(J)*(TFZX(J)-TEMP(L,J))*WBLK)/DCR
!      1UST(J)**2
!       GO TO 1805      
!  1803 CONTINUE
!       IF(L.GT.2) GO TO 1805    
!       IF(NBCINT(J).GT.3) ZETB=-(C1*BET(J)*(TFZC(J)-TEMP(L,J))*WBLK)/ZABL
!      1AT(J)**2
!  1805 CONTINUE
!       OM0=(ZETJ+ZETG)*THETO(L,J)+ZETJP1*THETO(LP1,J)+ZETJP2*THETO(LP2,J)
!       IF(L.GE.2) OM0=OM0+ZETJM1*THETO(LM1,J)
!       OM1=(ZETJ+ZETG)*THET1(L,J)+ZETJP1*THET1(LP1,J)+ZETJP2*THET1(LP2,J)
!      1+ZETB 
!       IF(L.GE.2) OM1=OM1+ZETJM1*THET1(LM1,J)
!       OMEG0(IOUT,J)=OM0*BDCK    
!       OMEG1(IOUT,J)=OM1*BDCK    
!       GO TO 252
!   237 CONTINUE
!   299 CONTINUE
!       OMEG0(IOUT,J)=0.D0
!       OMEG1(IOUT,J)=0.D0
!   252 CONTINUE
!    85 CONTINUE
!       RETURN
!       END
! C.......................................................................
! C.....SUBROUTINE HITEELM CALCULATES BOTH THE HEIGHT INCREMENTS AND 
! C.....HEIGHTS FOR THE COM EQUATION DEPENDING UPON THE SETTING OF NWRAP
! C.....WHICH IS SET IN THE MAIN PROGRAM.
! C.......................................................................
!       SUBROUTINE HITEELM(NWRAP)
!       IMPLICIT DOUBLE PRECISION(A-H,O-Z)
!       COMMON/CATCHR/A(999),B(999),C(999),D(999),P(999),Q(999),
!      1RECON(999),DELVEL(999),DSRDT(999),DELHTS(999),EMAX(999,999),
!      2DBLKEN(999),DELHIT(16,999),SOURCE(16,999),SRCTOT(999),
!      3HCROLD(16,999),DCDOT(999),HCRUST(16,999),DFILM(16,999),
!      4DFMOLD(16,999),DENOLD(999),SIGOX(999),SIGCON(999),BET(999),
!      5TFZX(999),TFZC(999),TKX(999),TKM(999),THETO(999,999),
!      6THET1(999,999),OMEG0(4,999),OMEG1(4,999),TAO0(999),TAO1(999),
!      7SIG0(999),SIG1(999),TARGB(999),DADOT(999),DADOTG(999),
!      8XLOLD(4,999),VISREX(999),TATMS(999),HTMP(999),DHTMP(999),
!      9HTMOLD(999)
!       COMMON/CATCHI/NUMS(4,999),NUMOLD(4,999),NTRACK(16),NSUMP(999),
!      1NPASSG(999),NCRSTM(999),NCRRT(999),NPASS(999),NBURN,NBURNO     
!       COMMON/PRINTB/ELEVAT(999),ELOLD(999),XDIST(999,999),XBTW(999,999),
!      1TEMP(999,999),ENTHP(999,999),EOLD(999,999),ENBLK(999),EBKOLD(999),
!      2TBULK(999),HITE(16,999),HITOLD(16,999),HTOT(999),HTOLD(999),
!      3HTCFT(999),HTCOEF(999),QFLUXT(999),QFLUXB(999),VEL(999),ELO(999),
!      4VELOLD(999),SRSCOR(16),AREA(999),RAD(999),ARC(999),VOLCN(16),
!      5VOID(999),VGJ(999),ZABLAT(999),ZABOLD(999),DCRUST(999),
!      6DCROLD(999),DABCON(999),DABOLD(999),DFILMT(999),DFOLT(999),
!      7SMFLX(4,999),XLSMF(4,999),TOTVOL,XFACMS(999),XMFLXA,XMCORT,
!      8VCORT,TOTOX,TOTMET,QFLXT,QFLXB,TIME,DTIME,XMCOR(16),VCOR(16),
!      9TCONI,RSAND,HDOWNC,TBOUND,EMISCN,PDRYWL,XDISTO(999),QOXT(999),
!      1XLENSH,XBTWO(999),RCOMP,WDOOR,RSUMP,RSHELL,RPED,TPED,ELSMP,
!      1TENDP(10,999),TFRZSH,TDEBRS,TKDEBR,PDEBR,CPDEBR,ENENDP(10,999),
!      2ENOLDP(10,999),DXVERT,DXSNK,XDSTE(10,999),XBTE(10,999),HXLA(999),
!      3HXLB(999),TSFEB(999),DCRS(999),DCRSLD(999),HCRS(16,999),
!      4HCRSLD(16,999),THETE0(10,999),THETE1(10,999),QSHELL,QSHELE,TSHELI,
!      5SIGOXE(999),FKOXE(999),RINJC,XLSEC,ANGSEC,ANINJC,XLCHAN,WCHNL,
!      6TEFZX(999),TIMSPC(999),DXNODE(999),TNORM(999),FRCSOL(999),
!      7ALPSPR(999),CRAMCON,HINTF,TSHLMX,XFRMX(999),XFROX(999),XFRTX(999),
!      8XMLMX(999),XMLOX(999),XMLTX(999),XTOTX(999),TIMEO,TMAX,EDOWN(999),
!      9HCP(999)
!       COMMON/PROPI/ NMATC,NMATFI,NMATFF,ICAOH2,ICACO3,IMCCO3,IFH2O,     
!      1IVH2O,ICK2O,IVK2O,INA2O,ITIO2,ISIO2,ICAO,IMGO,IAL2O3,IFEO,IFE2O3, 
!      2IFE3O4,IFE,ICR,INI,IZR,IU,IB4C,IB,ICR2O3,INIO,IUO2,IZRO2,IB2O3,   
!      3NBCINT(999),NODES(999),NUMNOD,IMOX(28),IBAS,ILCS,ILL,NACTIV(999),     
!      4NBFRZM,NBFRZO,NABLFM,NDRNFM,NTYPMT(999,999),NDOOR,NBMADJ,NUMSHV,   
!      5NBSHL(999),NCRSTS(999),NUMSHH,NSKIPE,NACSH,NWAT,NPEND,NBCBOT,
!      6NCRTOP,NBFZOE,NBFZME,NGEOM,NL(999,999),NFRSCT,NLOGSH,NADAB,NINVIS,
!      7NSIMST,NSTEEL,NOVHT,NOVTK,NOVUM,NOVEM,NOVSIG,NPLLOC(999),NBPL,
!      8IXP(999),IYP(999),NVTPE,NSOLTP,NSOLF,NINTF,IFLGA(999),ICTYPE,ICTC,
!      9NPOURS,NSMP,NPED,NDOR,NSHL,NANULS,NSMPCV,NBOIL,NSWALL,NMVER,
!      1NCRTEM,NTHINC,NVELP,NITMAX,NENMAX,NPRINT,NPFREQ,NTIMSPC,NPLFREQ,
!      2NPLTOT,NJET,NJETP,NJETD,NJETND,NODCAP,NVELPW,NITMAXW,NENMXW,
!      3IFLGJ(999),NBEDCQ,ISHELE
!       COMMON/PRINTR/ QFEH2O,QCRH2O,QZRH2O,QFECO2,QCRCO2,QZRCO2,
!      4XFH2OU,XFCAOH,XFMGCA,XFCACO,XZRMRE,XFEMRE,XCRMRE,XZRORE,XFEORE,   
!      5XCRORE,XMH2O,XMCO2,XMCACO,XMMGCA,XMCAOH,TFWL,TFWS,TBWL,TBWS,      
!      6TMCAL,TMCAS,TCAL,TCAS,TFOS,TFOL,TFMS,TFML,XVISC(28),SVISC(28),    
!      7XMOL(28),FMMOL(28),ROM(28),ROMLIQ(28),AEQM(28,2),BEQM(28,2),
!      8CEQM(28,2),ECL,ECS,ECAL,ECAS,EMCAL,EMCAS,EBWL,EBWS,EFWL,EFWS,    
!      9STEF,GRAV,PI,TCS,TCL,CCL,CCS,RMASSL,WPCC,WPM,WPA,WPCS,ROC,RMASSS,   
!      1ANGSHL,RSLAGL,RSLAGS,HNODT,VFAV,VGAV,QXAV,XWTSS(16),  
!      2TSCS(2),TSCL(2),ESCS(2),ESCL(2),CCSS(2),CCSL(2),ROSTLS,ROSTLL,
!      3XFRGAS,HMINC,TST(99),TSTOP(99),AINTP(99),BINTP(99),DRATIO(999),
!      4XBCN(999),XDCN(999),XBLT(15),ADEC(99),BDEC(99),APOUR(16,99),
!      5BPOUR(16,99),XWTC(14),BWIDTH,THCKCV,TMBOIL,TEBOIL,VFINT,ANGFAN,
!      6ALPMAX,THSHL,XFCABL,XNDMIN,DVMX,DAVMX,DEAVMX,DEMX,TDC,QDCU,QDCUO2,
!      7TSINJ,EINJ,DTINJ,TKINJ,ROEV,CPINJ,SURFT,VSINJ,EMINJ,TSINJO,EINJO,
!      8DTINJO,TKINJO,ROEVO,CPINJO,SURFTO,VSINJO,EMINJO,XLEADE,ARSUM,
!      9DBUBOX,UTRISE,TREMSH,DJET,DFALL,WEBER,FROUDE,XPSAITO,XPEPSTN,
!      1FRAG,XMBEDT,XMBED(16),XLPENT,XLPENA,UJET,UFALL,HFALL,ERPV,
!      2TJETT(99),DJETT(99),HWATP,XDOTJET,DVMXW,DAVMXW,DEMXW,DEAVMXW,
!      3QJETW,XSTMJF,TINTSJF,ESAT,DRDOOR,DRANL,EI,QDCBUO2,QDCBU,
!      4EBEDS,EBEDB
!       COMMON/BASPR/ HBMT(999,999,16),HBMOLD(999,999,16) 
! C.....FIRST ZERO OUT HEIGHT INCEMENTS FROM PREVIOUS TIMESTEP.  
!       DO 4064 KN=1,NUMNOD
!       DO 4063 KTP=1,16
!       DELHIT(KTP,KN)=0.D0
!  4063 CONTINUE
!  4064 CONTINUE
! C.....NOW SOLVE THE TDMA FOR HEIGHT INCREMENTS OR HEIGHT, DEPENDING
! C.....UPON NWRAP.
!       DO 5063 KTP=1,16
! C.....CHECK IF KTP-TH MELT CONSTITUENT HAS BEEN EJECTED FROM THE RPV.   
!       IF(NTRACK(KTP).EQ.0) GO TO 5087     
!       CALL INDEX(KTP,KJIM)      
!       DO 5064 KND=1,NUMNOD      
! C.....SET UP THE TDMA PROBLEM FOR THE KTP-TH MELT CONSTITUENT.  FIRST   
! C.....DETERMINE THE OXIDATION CONTANTS FOR ZIRCONIUM, IRON, AND CHROMIUM
! C.....LAYERS.
!       ZCOMP=XDISTO(KND)-ZABLAT(KND)
!       IF(ZCOMP.GE.XBTWO(KND)) GO TO 5081  
!       NBM=1 
!       XLENGT=ZABLAT(KND)-(XDISTO(KND)-XBTWO(KND))   
!       GO TO 5082      
!  5081 CONTINUE
!       NBM=2 
!       XLENGT=ZABLAT(KND)+XBTW(2,KND)      
!  5082 CONTINUE
!       IF(HTMP(KND).LE.0.D0) GO TO 5069    
!       CALL INDEX(KTP,KJIM)      
!       IF(KTP.LE.3) GO TO 5065   
!       IF(KTP.EQ.8) GO TO 5066   
!       IF(KTP.EQ.9) GO TO 5067   
!       IF(KTP.EQ.12) GO TO 5068  
!  5069 CONTINUE
!       GH2ORE=0.D0     
!       GCO2RE=0.D0     
!       GO TO 5070      
!  5065 CONTINUE
!       IF(HITE(KTP,KND).LE.0.D0) GO TO 5069
!       GO TO(5071,5072,5073),KTP 
!  5071 CONTINUE
!       GCON=FMMOL(KJIM)/(ROMLIQ(KJIM)*XZRMRE)
!       GO TO 5074      
!  5072 CONTINUE
!       IF(HITE(1,KND).GT.0.D0) GO TO 5069  
!       IF(HITE(3,KND).GT.0.D0) GO TO 5069  
!       GCON=FMMOL(KJIM)/(3.D0*ROMLIQ(KJIM)*XFEMRE)   
!       GO TO 5074      
!  5073 CONTINUE
!       IF(HITE(1,KND).GT.0.D0) GO TO 5069  
!       GCON=FMMOL(KJIM)/(ROMLIQ(KJIM)*XCRMRE)
!       GO TO 5074      
!  5066 CONTINUE
!       IF(HITE(1,KND).LE.0.D0) GO TO 5069  
!       GCON=-FMMOL(KJIM)/(ROMLIQ(KJIM)*XZRORE)
!       GO TO 5074      
!  5067 CONTINUE
!       IF(HITE(1,KND).GT.0.D0) GO TO 5069  
!       IF(HITE(3,KND).GT.0.D0) GO TO 5069  
!       IF(HITE(2,KND).LE.0.D0) GO TO 5069  
!       GCON=-FMMOL(KJIM)/(ROMLIQ(KJIM)*XFEORE)
!       GO TO 5074      
!  5068 CONTINUE
!       IF(HITE(1,KND).GT.0.D0) GO TO 5069  
!       IF(HITE(3,KND).LE.0.D0) GO TO 5069  
!       GCON=-FMMOL(KJIM)/(ROMLIQ(KJIM)*XCRORE)
!  5074 CONTINUE
!       TSEND=TEMP(1,KND)
!       IF(TSEND.GT.TCS) TSEND=TCS
!       DBSEND=DMIN1(HTOT(KND),DBUBOX)      
!       DBSEND=DMAX1(HMINC,DBSEND)
!       CALL OXID(PDRYWL,TSEND,TBULK(KND),DBSEND,HTOT(KND),UTRISE,OXH2O,OX
!      1CO2)  
!       GH2ORE=(AREA(KND)*GCON*OXH2O)/XMH2O 
!       GCO2RE=(AREA(KND)*GCON*OXCO2)/XMCO2 
!       IF(KTP.EQ.2.OR.KTP.EQ.9) GCO2RE=0.D0
!  5070 CONTINUE
! C.....CALCULATE CRUSTING AND/OR ABLATION CONSTANTS FOR THE VARIOUS      
! C.....TYPES OF MELT/CONCRETE INTERFACIAL BOUNDARY CONDITIONS. 
!       IF(HTMP(KND).LE.0.D0) GO TO 8311    
!       IF(NBCINT(KND).EQ.2.AND.NCRRT(KND).EQ.1) GO TO 5075     
!       IF(NBCINT(KND).EQ.6.AND.NCRRT(KND).EQ.1) GO TO 5075     
!       IF(NBCINT(KND).EQ.8.AND.NCRRT(KND).EQ.1) GO TO 5075     
!  8311 CONTINUE
!       THETCR=0.D0     
!       GO TO 5076      
!  5075 CONTINUE
! C.....CRUSTING CONSTANTS ARE DETERMINED BELOW.      
!       IF(NCRSTM(KND).EQ.1.AND.KTP.LE.7) GO TO 8311  
!       IF(NCRSTM(KND).EQ.2.AND.KTP.GE.8) GO TO 8311  
!       IF(HITE(KTP,KND).LE.0.D0) GO TO 8311
!       RDRAT=ROMLIQ(KJIM)/ROM(KJIM)
!       IF(KTP.EQ.16) RDRAT=RSLAGL/RSLAGS   
!       THETCR=(RDRAT*AREA(KND)*HITE(KTP,KND))/HTOT(KND)
!  5076 CONTINUE
!       IF(HTMP(KND).LE.0.D0) GO TO 5079    
!       IF(NBCINT(KND).EQ.4) GO TO 5077     
!       IF(NBCINT(KND).EQ.6) GO TO 5077     
!       IF(NBCINT(KND).EQ.7) GO TO 5077     
!  5079 CONTINUE
!       THETAB=0.D0     
!       GO TO 5078      
!  5077 CONTINUE
! C.....ABLATION CONSTANTS ARE DETERMINED BELOW.  NOTE THAT THE PROPER    
! C.....BASEMAT PROPERTY INDICES HAVE TO BE SET DEPENDING ON PENETRATION  
! C.....DEPTH OF THE ABLATION FRONT.
!       IF(NTYPMT(NBM,KND).GT.3) GO TO 6078 
!       IF(NL(NBM,KND).EQ.2) GO TO 6080    
!       IF(KTP.LT.16) GO TO 5079  
! C.....CONCRETE ABLATION CONSTANT ASSIGNED BELOW.    
!       THETAB=(RMASSS*AREA(KND))/RSLAGL    
!       GO TO 5078      
! C.....FOR BASEMATS WHICH ARE COMPOSED NOT OF CONCRETE, THE FOLLOWING    
! C.....DETERMINES THE ABLATION CONTANTS.   
!  6080 CONTINUE
!       THETAB=(ROM(KJIM)*AREA(KND)*XWTSS(KTP))/ROMLIQ(KJIM)    
!       GO TO 5078      
!  6078 CONTINUE
!       IF(HBMT(NBM,KND,KTP).LE.0.D0) GO TO 5079      
!       RDRAT=ROM(KJIM)/ROMLIQ(KJIM)
!       IF(KTP.EQ.16) RDRAT=RSLAGS/RSLAGL   
!       THETAB=(RDRAT*AREA(KND)*HBMT(NBM,KND,KTP))/XLENGT
!  5078 CONTINUE
! C.....ASSIGN VALUES FOR THE EVALUATION OF THE TDMA ELEMENTS.  
!       VJM12=VEL(KND)  
!       VJP12=VEL(KND+1)
!       IF(KND.EQ.1) GO TO 5083   
!       IF(KND.EQ.NUMNOD) GO TO 5084
!       HJM1=HITE(KTP,KND-1)      
!       HJ=HITE(KTP,KND)
!       HJP1=HITE(KTP,KND+1)      
!       GO TO 5085      
!  5083 CONTINUE
!       HJM1=0.D0
!       HJ=HITE(KTP,KND)
!       HJP1=HITE(KTP,KND+1)      
!       GO TO 5085      
!  5084 CONTINUE
!       HJM1=HITE(KTP,KND-1)      
!       HJ=HITE(KTP,KND)
!       HJP1=0.D0
!  5085 CONTINUE
! C.....EVALUATE THE TDMA COEFFICIENTS.     
!       IF(NWRAP.EQ.1) GO TO 5034 
!       A1=0.D0
!       GO TO 5035      
!  5034 CONTINUE
!       ABLK1=GH2ORE*(OMEG1(1,KND)+OMEG1(2,KND))+GCO2RE*(OMEG1(3,KND)+    
!      1OMEG1(4,KND))+THETAB*TAO1(KND)+THETCR*SIG1(KND)
!       A1=ABLK1*DBLKEN(KND)      
!  5035 CONTINUE
!       A2=(AREA(KND)*(HJ-HITOLD(KTP,KND)))/DTIME     
!       A3=ARC(KND)*(HJ*DMAX1(-VJM12,0.D0)-HJM1*DMAX1(VJM12,0.D0))
!       A4=ARC(KND+1)*(HJ*DMAX1(VJP12,0.D0)-HJP1*DMAX1(-VJP12,0.D0))      
!       A5=GCO2RE*(SMFLX(3,KND)+SMFLX(4,KND))+GH2ORE*(SMFLX(1,KND)+SMFLX(2
!      1,KND))+GH2ORE*(OMEG1(1,KND)+OMEG1(2,KND))+GCO2RE*(OMEG1(4,KND)    
!      1+OMEG1(3,KND))  
!       A6=THETAB*(DADOT(KND)+TAO0(KND))+THETCR*(DCDOT(KND)+SIG0(KND))    
!       CALL INDEX(KTP,KJIM)      
!       RODEN=ROMLIQ(KJIM)
!       IF(KTP.EQ.16) RODEN=RSLAGL*ROC      
!       A7=(AREA(KND)*SOURCE(KTP,KND))/RODEN
!       D(KND)=-(A1+A2+A3+A4+A5+A6-A7)      
!       C(KND)=ARC(KND)*DMAX1(VJM12,0.D0)   
!       B(KND)=ARC(KND+1)*DMAX1(-VJP12,0.D0)
!       A(KND)=AREA(KND)/DTIME+ARC(KND)*DMAX1(-VJM12,0.D0)+ARC(KND+1)*    
!      1DMAX1(VJP12,0.D0)
!  5064 CONTINUE
! C.....EXECUTE TDMA ALGORITHM TO FIND THE INCREMENTAL HEIGHT INCREMENTS  
! C.....FOR THE KTP-TH MELT CONSTITUENT.    
!       P(1)=B(1)/A(1)  
!       Q(1)=D(1)/A(1)  
!       DO 5086 KTOP=2,NUMNOD     
!       P(KTOP)=B(KTOP)/(A(KTOP)-C(KTOP)*P(KTOP-1))   
!       Q(KTOP)=(D(KTOP)+C(KTOP)*Q(KTOP-1))/(A(KTOP)-C(KTOP)*P(KTOP-1))   
!  5086 CONTINUE
! C.....PERFORM BACKWARDS SUBSTITUTION TO FIND MELT CONSTITUENT HEIGHT    
! C.....INCREMENTS.     
!       DELHIT(KTP,NUMNOD)=Q(NUMNOD)
!       DO 6159 KLP=1,NUMNOD-1    
!       IARG=NUMNOD-KLP 
!       DELHIT(KTP,IARG)=P(IARG)*DELHIT(KTP,IARG+1)+Q(IARG)     
!  6159 CONTINUE
!       GO TO 5063      
!  5087 CONTINUE
!       DO 5088 KNDP=1,NUMNOD     
!       DELHIT(KTP,KNDP)=0.D0     
!       HITE(KTP,KNDP)=0.D0
!  5088 CONTINUE
!  5063 CONTINUE
! C.....GIVEN THE CONSTITUENT HEIGHT INCREMENTS, FIND THE TOTAL MELT      
! C.....HEIGHT INCREMENT.
!       DO 5022 KNDDR=1,NUMNOD    
!       HTOT(KNDDR)=0.D0
!       DELHTS(KNDDR)=0.D0
!       DO 5023 KMT=1,16
!       DELADD=DELHIT(KMT,KNDDR)
!       IF(HITE(KMT,KNDDR)+DELADD.GE.0.D0) GO TO 7981
!       DELADD=-HITE(KMT,KNDDR)
!  7981 CONTINUE
!       HCOMPI=HITE(KMT,KNDDR)+DELADD
!       HITE(KMT,KNDDR)=DMAX1(HCOMPI,0.D0)  
!       HTOT(KNDDR)=HTOT(KNDDR)+HITE(KMT,KNDDR)
!       DELHTS(KNDDR)=DELHTS(KNDDR)+DELADD
!  5023 CONTINUE
!  5022 CONTINUE
!       RETURN
!       END
! C...................................................................... 
! C.....GIVEN THE VELOCITIES, HEIGHT INCREMENTS, AND CONCRETE FORWARD     
! C.....ELIMINATION COEFFICIENTS, SUBROUTINE ENERELM SOLVES FOR THE BULK 
! C.....MELT SPECIFIC ENTHALPY INCRMENTS.     
! C...................................................................... 
!       SUBROUTINE ENERELM
!       IMPLICIT DOUBLE PRECISION(A-H,O-Z)
!       COMMON/CATCHR/A(999),B(999),C(999),D(999),P(999),Q(999),
!      1RECON(999),DELVEL(999),DSRDT(999),DELHTS(999),EMAX(999,999),
!      2DBLKEN(999),DELHIT(16,999),SOURCE(16,999),SRCTOT(999),
!      3HCROLD(16,999),DCDOT(999),HCRUST(16,999),DFILM(16,999),
!      4DFMOLD(16,999),DENOLD(999),SIGOX(999),SIGCON(999),BET(999),
!      5TFZX(999),TFZC(999),TKX(999),TKM(999),THETO(999,999),
!      6THET1(999,999),OMEG0(4,999),OMEG1(4,999),TAO0(999),TAO1(999),
!      7SIG0(999),SIG1(999),TARGB(999),DADOT(999),DADOTG(999),
!      8XLOLD(4,999),VISREX(999),TATMS(999),HTMP(999),DHTMP(999),
!      9HTMOLD(999)
!       COMMON/CATCHI/NUMS(4,999),NUMOLD(4,999),NTRACK(16),NSUMP(999),
!      1NPASSG(999),NCRSTM(999),NCRRT(999),NPASS(999),NBURN,NBURNO     
!       COMMON/PRINTB/ELEVAT(999),ELOLD(999),XDIST(999,999),XBTW(999,999),
!      1TEMP(999,999),ENTHP(999,999),EOLD(999,999),ENBLK(999),EBKOLD(999),
!      2TBULK(999),HITE(16,999),HITOLD(16,999),HTOT(999),HTOLD(999),
!      3HTCFT(999),HTCOEF(999),QFLUXT(999),QFLUXB(999),VEL(999),ELO(999),
!      4VELOLD(999),SRSCOR(16),AREA(999),RAD(999),ARC(999),VOLCN(16),
!      5VOID(999),VGJ(999),ZABLAT(999),ZABOLD(999),DCRUST(999),
!      6DCROLD(999),DABCON(999),DABOLD(999),DFILMT(999),DFOLT(999),
!      7SMFLX(4,999),XLSMF(4,999),TOTVOL,XFACMS(999),XMFLXA,XMCORT,
!      8VCORT,TOTOX,TOTMET,QFLXT,QFLXB,TIME,DTIME,XMCOR(16),VCOR(16),
!      9TCONI,RSAND,HDOWNC,TBOUND,EMISCN,PDRYWL,XDISTO(999),QOXT(999),
!      1XLENSH,XBTWO(999),RCOMP,WDOOR,RSUMP,RSHELL,RPED,TPED,ELSMP,
!      1TENDP(10,999),TFRZSH,TDEBRS,TKDEBR,PDEBR,CPDEBR,ENENDP(10,999),
!      2ENOLDP(10,999),DXVERT,DXSNK,XDSTE(10,999),XBTE(10,999),HXLA(999),
!      3HXLB(999),TSFEB(999),DCRS(999),DCRSLD(999),HCRS(16,999),
!      4HCRSLD(16,999),THETE0(10,999),THETE1(10,999),QSHELL,QSHELE,TSHELI,
!      5SIGOXE(999),FKOXE(999),RINJC,XLSEC,ANGSEC,ANINJC,XLCHAN,WCHNL,
!      6TEFZX(999),TIMSPC(999),DXNODE(999),TNORM(999),FRCSOL(999),
!      7ALPSPR(999),CRAMCON,HINTF,TSHLMX,XFRMX(999),XFROX(999),XFRTX(999),
!      8XMLMX(999),XMLOX(999),XMLTX(999),XTOTX(999),TIMEO,TMAX,EDOWN(999),
!      9HCP(999)
!       COMMON/HCONS/HMETAL(999),HOXIDE(999)  
!       COMMON/PROPI/ NMATC,NMATFI,NMATFF,ICAOH2,ICACO3,IMCCO3,IFH2O,     
!      1IVH2O,ICK2O,IVK2O,INA2O,ITIO2,ISIO2,ICAO,IMGO,IAL2O3,IFEO,IFE2O3, 
!      2IFE3O4,IFE,ICR,INI,IZR,IU,IB4C,IB,ICR2O3,INIO,IUO2,IZRO2,IB2O3,   
!      3NBCINT(999),NODES(999),NUMNOD,IMOX(28),IBAS,ILCS,ILL,NACTIV(999),     
!      4NBFRZM,NBFRZO,NABLFM,NDRNFM,NTYPMT(999,999),NDOOR,NBMADJ,NUMSHV,   
!      5NBSHL(999),NCRSTS(999),NUMSHH,NSKIPE,NACSH,NWAT,NPEND,NBCBOT,
!      6NCRTOP,NBFZOE,NBFZME,NGEOM,NL(999,999),NFRSCT,NLOGSH,NADAB,NINVIS,
!      7NSIMST,NSTEEL,NOVHT,NOVTK,NOVUM,NOVEM,NOVSIG,NPLLOC(999),NBPL,
!      8IXP(999),IYP(999),NVTPE,NSOLTP,NSOLF,NINTF,IFLGA(999),ICTYPE,ICTC,
!      9NPOURS,NSMP,NPED,NDOR,NSHL,NANULS,NSMPCV,NBOIL,NSWALL,NMVER,
!      1NCRTEM,NTHINC,NVELP,NITMAX,NENMAX,NPRINT,NPFREQ,NTIMSPC,NPLFREQ,
!      2NPLTOT,NJET,NJETP,NJETD,NJETND,NODCAP,NVELPW,NITMAXW,NENMXW,
!      3IFLGJ(999),NBEDCQ,ISHELE
!       COMMON/DATOVER/COVS,COVL,DHSOV,XMOLOV,ROVS,ROVL,TKOVS,TKOVL,VISOV,
!      1EMOV,SIGOV
!       COMMON/PRINTR/ QFEH2O,QCRH2O,QZRH2O,QFECO2,QCRCO2,QZRCO2,
!      4XFH2OU,XFCAOH,XFMGCA,XFCACO,XZRMRE,XFEMRE,XCRMRE,XZRORE,XFEORE,   
!      5XCRORE,XMH2O,XMCO2,XMCACO,XMMGCA,XMCAOH,TFWL,TFWS,TBWL,TBWS,      
!      6TMCAL,TMCAS,TCAL,TCAS,TFOS,TFOL,TFMS,TFML,XVISC(28),SVISC(28),    
!      7XMOL(28),FMMOL(28),ROM(28),ROMLIQ(28),AEQM(28,2),BEQM(28,2),
!      8CEQM(28,2),ECL,ECS,ECAL,ECAS,EMCAL,EMCAS,EBWL,EBWS,EFWL,EFWS,    
!      9STEF,GRAV,PI,TCS,TCL,CCL,CCS,RMASSL,WPCC,WPM,WPA,WPCS,ROC,RMASSS,   
!      1ANGSHL,RSLAGL,RSLAGS,HNODT,VFAV,VGAV,QXAV,XWTSS(16),  
!      2TSCS(2),TSCL(2),ESCS(2),ESCL(2),CCSS(2),CCSL(2),ROSTLS,ROSTLL,
!      3XFRGAS,HMINC,TST(99),TSTOP(99),AINTP(99),BINTP(99),DRATIO(999),
!      4XBCN(999),XDCN(999),XBLT(15),ADEC(99),BDEC(99),APOUR(16,99),
!      5BPOUR(16,99),XWTC(14),BWIDTH,THCKCV,TMBOIL,TEBOIL,VFINT,ANGFAN,
!      6ALPMAX,THSHL,XFCABL,XNDMIN,DVMX,DAVMX,DEAVMX,DEMX,TDC,QDCU,QDCUO2,
!      7TSINJ,EINJ,DTINJ,TKINJ,ROEV,CPINJ,SURFT,VSINJ,EMINJ,TSINJO,EINJO,
!      8DTINJO,TKINJO,ROEVO,CPINJO,SURFTO,VSINJO,EMINJO,XLEADE,ARSUM,
!      9DBUBOX,UTRISE,TREMSH,DJET,DFALL,WEBER,FROUDE,XPSAITO,XPEPSTN,
!      1FRAG,XMBEDT,XMBED(16),XLPENT,XLPENA,UJET,UFALL,HFALL,ERPV,
!      2TJETT(99),DJETT(99),HWATP,XDOTJET,DVMXW,DAVMXW,DEMXW,DEAVMXW,
!      3QJETW,XSTMJF,TINTSJF,ESAT,DRDOOR,DRANL,EI,QDCBUO2,QDCBU,
!      4EBEDS,EBEDB
!       COMMON /WATVARS/FCRUST(999),VLW(999),VLWOLD(999),DWAT(999),
!      1DWATOLD(999),EWAT(999),EWATOLD(999),TWAT(999),CORDDC(999),
!      2DSRDC(999),DHDC(999),TSRDC,TINTDC,HWATB(999),TSURFW(999),XMS(999),
!      3XMST,XINTS,ESRDTW(999),TSRDTW(999),DSRDTW(999),TSRDW,TINTDW,
!      4TWATI,ELDCO(999),ELDCX(999,99),CRDCX(999,99),TIMINJ(999,99),
!      5XDTINJ(999,99),TDTINJ(999,99),ELWATI,XMWAT,XMWATO,XBALW,
!      6HDRY(999),EINTW,XMCT(199),XMCDT(16,999),TMPCDT(999),CMPCDT(999),
!      7FDC(999),FCOV(999),FBED(999),FHEAT(999),XFACJ(999),
!      8XMBEDJ(16,999),XMBEDJT(999),PBED,QBED(999),QWATER(999),
!      9QSURFACE(999),QWATERT(999),HBED(999),POROSBED,XMCRDT(16,999),
!      1XMCRT(999),XMBDINT(999),XMT(999)
!       COMMON/BLKHT/TKMLT,PM,CM,UM,EMISM,SIGMAM,TKNC,PNC,CNC,UNC    
!       COMMON/BASPR/ HBMT(999,999,16),HBMOLD(999,999,16) 
!       COMMON/DATSH/TSTLS,TSTLL,ESTLS,ESTLL,DFUSST,CSTLL
!       COMMON/DATSIMS/TSIS,TSIL,CSIS,CSIL,DHSIL,RSIS,RSIL,TKSIS,TKSIL,
!      1ESIL,XCSI(16)
!       COMMON/DEFUNC/CPLIQP,CPSOLP,EFOSP,EFOLP,EFMSP,EFMLP     
!       COMMON/PROPB/CPBM(999),FKB(999,999),DENB(999,999),DTDEB(999,999),
!      1EMIBM(999),DENCRS(999),ENCRS(999),FKRF(999),DENRF(999),CPRF(999) 
!       COMMON/PROPM/DTDEM(999),CPMLT(999),FKMLT(999),DENMLT(999),
!      1SIGMLT(999),UMMLT(999),EMIMLT(999)      
! C.....FIRST UPDATE MELT DENSITIES FOR USE IN SOLVING THE CONSERVATION 
! C.....OF ENERGY EQUATION, AND ZERO OUT BULK ENTHALY INCREMENT FROM 
! c.....PREVIOUS TIMESTEP.
!       DO 5735 J=1,NUMNOD
!       IF(NACTIV(J).EQ.0) GO TO 5735
!       DBLKEN(J)=0.D0
!       IF(HTOT(J).LE.0.D0) GO TO 5735
!       CALL MASFRA(HITE,ROMLIQ,J,RSLAGL,ROC,DENMLT(J),0)
!  5735 CONTINUE
!       JSEND=1
!       PHJ=0.D0
!       PHEJ=0.D0
!       IF(NACTIV(JSEND).EQ.0) GO TO 5049
!       IF(HTOT(JSEND).LE.0.D0) GO TO 5049
!       ROCJP1=DENMLT(JSEND)      
!       PHJP1=ROCJP1*HTOT(JSEND)  
!       PHEJP1=ROCJP1*HTOT(JSEND)*ENBLK(JSEND)
!       GO TO 5050      
!  5049 CONTINUE
!       PHJP1=0.D0      
!       PHEJP1=0.D0     
!  5050 CONTINUE
!       DO 5036 KDR=1,NUMNOD      
!       IF(NADAB.EQ.1) GO TO 6062
!       KSEND=KDR+1     
!       IF(KDR.EQ.NUMNOD) GO TO 5051
!       IF(NACTIV(KSEND).EQ.0) GO TO 5051
!       IF(HTOT(KSEND).LE.0.D0) GO TO 5051
!       PHJM1=PHJ
!       PHEJM1=PHEJ     
!       PHJ=PHJP1
!       PHEJ=PHEJP1     
!       ROCJP1=DENMLT(KSEND)      
!       PHJP1=ROCJP1*HTOT(KSEND)  
!       PHEJP1=ROCJP1*HTOT(KSEND)*ENBLK(KSEND)
!       GO TO 5052      
!  5051 CONTINUE
!       PHJM1=PHJ
!       PHEJM1=PHEJ     
!       PHJ=PHJP1
!       PHEJ=PHEJP1     
!       PHJP1=0.D0      
!       PHEJP1=0.D0     
!  5052 CONTINUE
!       IF(NACTIV(KDR).EQ.0) GO TO 6062
!       IF(HTOT(KDR).GT.0.D0) GO TO 5037   
!  6062 CONTINUE
!       A(KDR)=1.D0
!       B(KDR)=0.D0     
!       C(KDR)=0.D0     
!       D(KDR)=0.D0     
!       GO TO 5036      
!  5037 CONTINUE
!       HFRZL=HMINC
!       PHJM=DENMLT(KDR)*DMAX1(HFRZL,HTOT(KDR))
! C.....CALCULATE OXIDATION COEFFICIENTS FOR ZIRCONIUM, IRON, & CHROMIUM  
! C.....LAYERS.
!       IF(HITE(1,KDR).LE.0.D0) GO TO 5038  
!       CALL INDEX(1,IPRS)
!       GZH2O=(FMMOL(IPRS)*QZRH2O)/XZRMRE   
!       GZCO2=(FMMOL(IPRS)*QZRCO2)/XZRMRE   
!       GO TO 5039      
!  5038 CONTINUE
!       GZH2O=0.D0      
!       GZCO2=0.D0      
!  5039 CONTINUE
!       IF(HITE(2,KDR).LE.0.D0) GO TO 5040  
!       IF(HITE(1,KDR).GT.0.D0) GO TO 5040  
!       IF(HITE(3,KDR).GT.0.D0) GO TO 5040  
!       CALL INDEX(2,IPRS)
!       GFH2O=(FMMOL(IPRS)*QFEH2O)/XFEMRE   
!       GFCO2=0.D0      
!       GO TO 5041      
!  5040 CONTINUE
!       GFH2O=0.D0      
!       GFCO2=0.D0      
!  5041 CONTINUE
!       IF(HITE(3,KDR).LE.0.D0) GO TO 5042  
!       IF(HITE(1,KDR).GT.0.D0) GO TO 5042  
!       CALL INDEX(3,IPRS)
!       GCH2O=(FMMOL(IPRS)*QCRH2O)/XCRMRE   
!       GCCO2=(FMMOL(IPRS)*QCRCO2)/XCRMRE   
!       GO TO 5043      
!  5042 CONTINUE
!       GCH2O=0.D0      
!       GCCO2=0.D0      
!  5043 CONTINUE
!       TSEND=TEMP(1,KDR)
!       IF(TSEND.GT.TCS) TSEND=TCS
!       DBSEND=DMIN1(HTOT(KDR),DBUBOX)      
!       DBSEND=DMAX1(HMINC,DBSEND)
!       CALL OXID(PDRYWL,TSEND,TBULK(KDR),DBSEND,HTOT(KDR),UTRISE,OXH2O,OX
!      1CO2)  
!       TILH2O=(AREA(KDR)*OXH2O*(GZH2O+GFH2O+GCH2O))/XMH2O      
!       TILCO2=(AREA(KDR)*OXCO2*(GZCO2+GFCO2+GCCO2))/XMCO2      
! C.....CALCULATE ABLATION & CRUSTING COEFFICIENTS FOR THE PRESENT NODE.  
! C.....FIRST CALCULATE THE CRUSTING COEFFICIENT.     
!       IF(NBCINT(KDR).EQ.2.AND.NCRRT(KDR).EQ.1) GO TO 5044     
!       IF(NBCINT(KDR).EQ.6.AND.NCRRT(KDR).EQ.1) GO TO 5044     
!       IF(NBCINT(KDR).EQ.8.AND.NCRRT(KDR).EQ.1) GO TO 5044     
!       ZLAMCR=0.D0     
!       GO TO 5045      
!  5044 CONTINUE
!       ZLAMCR=DENCRS(KDR)*ENCRS(KDR)
!  5045 CONTINUE
! C.....CALCULATE ABLATION COEFFICIENT.     
!       IF(NBCINT(KDR).GT.3) GO TO 3019     
!       IP=1  
!       ZLAMAB=0.D0     
!       GO TO 5047      
!  3019 CONTINUE
!       ZCOMP=XDISTO(KDR)-ZABLAT(KDR)
!       IP=2  
!       IF(ZCOMP.LT.XBTWO(KDR)) IP=1
!       IF(NBCINT(KDR).EQ.4) GO TO 5046     
!       IF(NBCINT(KDR).EQ.6) GO TO 5046     
!       IF(NBCINT(KDR).EQ.7) GO TO 5046     
!       ZLAMAB=0.D0     
!       GO TO 5047      
!  5046 CONTINUE
!       ZLAMAB=DENB(IP,KDR)*ENTHP(IP,KDR)   
!  5047 CONTINUE
! C.....EVALUATE DECAY HEAT TERMS.
!       PQDECJ=ROMLIQ(21)*QDCU*HITE(6,KDR)+ROMLIQ(26)*QDCUO2*HITE(15,KDR) 
! C.....EVALUATE ENERGY SOURCE DUE TO INJECTION FROM RPV AT THIS NODE.    
!       QSRC=SRCTOT(KDR)*EINJ     
! C.....EVALUATE OLD TIMESTEP DENSITY & SPECIFIC HEAT.
!       IF(HTOLD(KDR).LE.0.D0) GO TO 5057   
!       PHEOLD=EBKOLD(KDR)*DENOLD(KDR)*HTOLD(KDR)
!       GO TO 5058      
!  5057 CONTINUE
!       PHEOLD=0.D0     
!  5058 CONTINUE
! C.....ASSIGN VALUES FOR TDMA COEFFICIENT EVALUATION.
!       VJM12=VEL(KDR)  
!       VJP12=VEL(KDR+1)
!       IF(KDR.EQ.1) GO TO 5053   
!       IF(KDR.EQ.NUMNOD) GO TO 5054
!       HJM1=HTOT(KDR-1)
!       HJP1=HTOT(KDR+1)
!       GO TO 5055      
!  5053 CONTINUE
!       HJM1=0.D0
!       HJP1=HTOT(KDR+1)
!       GO TO 5055      
!  5054 CONTINUE
!       HJM1=HTOT(KDR-1)
!       HJP1=0.D0
!  5055 CONTINUE
!       HJ=HTOT(KDR)    
! C.....EVALUATE DERIVATIVE OF BULK TEMPERATURE WITH RESPECT TO ENTHALPY, 
! C.....AND CACULATE ITERATIVE BULK ENTHALPY CAP.     
!       ALPBLK=DTDEM(KDR)
! C.....EVALUATE TDMA COEFFICIENTS.
!       HC1=(AREA(KDR)*(PHEJ-PHEOLD))/DTIME 
!       HC2=ARC(KDR)*DMAX1(VJM12,0.D0)*PHEJM1
!       HC3=PHEJ*(ARC(KDR)*DMAX1(-VJM12,0.D0)+ARC(KDR+1)*DMAX1(VJP12,0.D0)
!      1)     
!       HC4=ARC(KDR+1)*DMAX1(-VJP12,0.D0)*PHEJP1      
!       ALP1J=DTDEB(1,KDR)
!       IF(NBCINT(KDR).GT.1) GO TO 361      
!       TEVAL=TEMP(1,KDR)
!       GO TO 362
!   361 CONTINUE
!       IF(NBCINT(KDR).EQ.4) GO TO 363      
!       IF(NBCINT(KDR).EQ.5) GO TO 364      
!       TEVAL=TFZX(KDR) 
!       GO TO 362
!   363 CONTINUE
!       TEVAL=TFZC(KDR) 
!       GO TO 362
!   364 CONTINUE
!       TEVAL=(HTCOEF(KDR)*TBULK(KDR)+TKM(KDR)*TEMP(1,KDR)/DFILMT(KDR))/  
!      1(HTCOEF(KDR)+TKM(KDR)/DFILMT(KDR))  
!   362 CONTINUE
!       QC=0.D0
!       QCE=0.D0
!       IF(NACSH.EQ.0) GO TO 6894 
!       IF(KDR.NE.NBMADJ) GO TO 6894
!       QC=QSHELL
!       QCE=QSHELE      
!  6894 CONTINUE
!       ZX=1.D0
!       IF(NSWALL.EQ.0) GO TO 3816
!       GO TO(3817,3816),NGEOM    
!  3817 CONTINUE
!       IF(KDR.GT.NSMP+NPED.AND.KDR.LE.NSMP+NPED+NDOR) ZX=1.D0+(2.D0*DRDOO
!      1R*HTOT(KDR))/AREA(KDR)    
!       IF(KDR.GT.NSMP+NPED+NDOR+NSHL) ZX=1.D0+(4.D0*DRANL*HTOT(KDR))/AREA
!      1(KDR) 
!  3816 CONTINUE
!       HTWEF=FCRUST(KDR)*HTCFT(KDR)
!       IF(NWAT.EQ.2) HTWEF=DMAX1(HTWEF,HDRY(KDR))
!       HC5=AREA(KDR)*ZX*HTCOEF(KDR)*(TBULK(KDR)-TEVAL-ALP1J*THETO(1,KDR))
!      1+HTWEF*(TBULK(KDR)-TATMS(KDR))*AREA(KDR)+ARC(KDR+1)*QC
!       HC6=ZLAMAB*(DADOT(KDR)+TAO0(KDR))*AREA(KDR)   
!       HC7=ZLAMCR*(DCDOT(KDR)+SIG0(KDR))*AREA(KDR)   
!       HC8=TILCO2*(SMFLX(3,KDR)+SMFLX(4,KDR)+OMEG0(3,KDR)+OMEG0(4,KDR))+ 
!      1TILH2O*(SMFLX(1,KDR)+SMFLX(2,KDR)+OMEG0(1,KDR)+OMEG0(2,KDR))      
!       HC9=AREA(KDR)*(PQDECJ+QSRC)
!       HCJ=HC1-HC2+HC3-HC4+HC5+HC6+HC7-HC8-HC9
!       EC1=PHJM*AREA(KDR)/DTIME+PHJ*(ARC(KDR)*DMAX1(-VJM12,0.D0)+ARC(KD
!      1R+1)*DMAX1(VJP12,0.D0))     
!       EC2=AREA(KDR)*(ZX*HTCOEF(KDR)*(ALPBLK-ALP1J*THET1(1,KDR))+HTWEF*
!      1ALPBLK)+ARC(KDR+1)*QCE 
!       EC3=(ZLAMAB*TAO1(KDR)+ZLAMCR*SIG1(KDR))*AREA(KDR)
!       EC4=TILCO2*(OMEG1(3,KDR)+OMEG1(4,KDR))+TILH2O*(OMEG1(1,KDR)+      
!      1OMEG1(2,KDR))   
!       ECJ=EC1+EC2+EC3-EC4
!       FCJ=ARC(KDR)*DMAX1(VJM12,0.D0)*PHJM1
!       GCJ=ARC(KDR+1)*DMAX1(-VJP12,0.D0)*PHJP1
!       A(KDR)=ECJ      
!       B(KDR)=GCJ      
!       C(KDR)=FCJ      
!       D(KDR)=-HCJ     
!  5036 CONTINUE
! C.....GIVEN MATRIX ELEMENTS, SOLVE FOR THE ENTHALPY INCREMENTS USING THE
! C.....TDMA ALGORITHM. 
!       P(1)=B(1)/A(1)  
!       Q(1)=D(1)/A(1)  
!       DO 5061 KPN=2,NUMNOD      
!       P(KPN)=B(KPN)/(A(KPN)-C(KPN)*P(KPN-1))
!       Q(KPN)=(D(KPN)+C(KPN)*Q(KPN-1))/(A(KPN)-C(KPN)*P(KPN-1))
!  5061 CONTINUE
!       DBLKEN(NUMNOD)=Q(NUMNOD)  
!       DO 5062 KPN=1,NUMNOD-1    
!       IARG=NUMNOD-KPN 
!       DBLKEN(IARG)=P(IARG)*DBLKEN(IARG+1)+Q(IARG)   
!  5062 CONTINUE
! C.....CHECK TO MAKE SURE ENTHALPY CHANGE STAYS WITHIN BOUNDS.
!       DO 6991 KN=1,NUMNOD
!       IF(NACTIV(KN).EQ.0) GO TO 6991      
!       IF(HTOT(KN).LE.0.D0) GO TO 6991      
!       IF(ENBLK(KN)+DBLKEN(KN).GE.EDOWN(KN)) GO TO 6991 
!       DBLKEN(KN)=EDOWN(KN)-ENBLK(KN)
!  6991 CONTINUE
!       RETURN
!       END
! C...................................................................... 
! C.....GIVEN MELT ENTHALPY INCREMENTS AND NEW MELT CONSTITUENT HEIGHTS,
! C.....SUBROUTINE UPDATE CALCULATES DEPENDENT DATA AT THE END OF THE 
! C.....CURRENT ITERATION.
! C...................................................................... 
!       SUBROUTINE UPDATE
!       IMPLICIT DOUBLE PRECISION(A-H,O-Z)
!       DIMENSION HSEND(28)
!       COMMON /WATVARS/FCRUST(999),VLW(999),VLWOLD(999),DWAT(999),
!      1DWATOLD(999),EWAT(999),EWATOLD(999),TWAT(999),CORDDC(999),
!      2DSRDC(999),DHDC(999),TSRDC,TINTDC,HWATB(999),TSURFW(999),XMS(999),
!      3XMST,XINTS,ESRDTW(999),TSRDTW(999),DSRDTW(999),TSRDW,TINTDW,
!      4TWATI,ELDCO(999),ELDCX(999,99),CRDCX(999,99),TIMINJ(999,99),
!      5XDTINJ(999,99),TDTINJ(999,99),ELWATI,XMWAT,XMWATO,XBALW,
!      6HDRY(999),EINTW,XMCT(199),XMCDT(16,999),TMPCDT(999),CMPCDT(999),
!      7FDC(999),FCOV(999),FBED(999),FHEAT(999),XFACJ(999),
!      8XMBEDJ(16,999),XMBEDJT(999),PBED,QBED(999),QWATER(999),
!      9QSURFACE(999),QWATERT(999),HBED(999),POROSBED,XMCRDT(16,999),
!      1XMCRT(999),XMBDINT(999),XMT(999)
!       COMMON/CATCHR/A(999),B(999),C(999),D(999),P(999),Q(999),
!      1RECON(999),DELVEL(999),DSRDT(999),DELHTS(999),EMAX(999,999),
!      2DBLKEN(999),DELHIT(16,999),SOURCE(16,999),SRCTOT(999),
!      3HCROLD(16,999),DCDOT(999),HCRUST(16,999),DFILM(16,999),
!      4DFMOLD(16,999),DENOLD(999),SIGOX(999),SIGCON(999),BET(999),
!      5TFZX(999),TFZC(999),TKX(999),TKM(999),THETO(999,999),
!      6THET1(999,999),OMEG0(4,999),OMEG1(4,999),TAO0(999),TAO1(999),
!      7SIG0(999),SIG1(999),TARGB(999),DADOT(999),DADOTG(999),
!      8XLOLD(4,999),VISREX(999),TATMS(999),HTMP(999),DHTMP(999),
!      9HTMOLD(999)
!       COMMON/CATCHI/NUMS(4,999),NUMOLD(4,999),NTRACK(16),NSUMP(999),
!      1NPASSG(999),NCRSTM(999),NCRRT(999),NPASS(999),NBURN,NBURNO     
!       COMMON/PRINTB/ELEVAT(999),ELOLD(999),XDIST(999,999),XBTW(999,999),
!      1TEMP(999,999),ENTHP(999,999),EOLD(999,999),ENBLK(999),EBKOLD(999),
!      2TBULK(999),HITE(16,999),HITOLD(16,999),HTOT(999),HTOLD(999),
!      3HTCFT(999),HTCOEF(999),QFLUXT(999),QFLUXB(999),VEL(999),ELO(999),
!      4VELOLD(999),SRSCOR(16),AREA(999),RAD(999),ARC(999),VOLCN(16),
!      5VOID(999),VGJ(999),ZABLAT(999),ZABOLD(999),DCRUST(999),
!      6DCROLD(999),DABCON(999),DABOLD(999),DFILMT(999),DFOLT(999),
!      7SMFLX(4,999),XLSMF(4,999),TOTVOL,XFACMS(999),XMFLXA,XMCORT,
!      8VCORT,TOTOX,TOTMET,QFLXT,QFLXB,TIME,DTIME,XMCOR(16),VCOR(16),
!      9TCONI,RSAND,HDOWNC,TBOUND,EMISCN,PDRYWL,XDISTO(999),QOXT(999),
!      1XLENSH,XBTWO(999),RCOMP,WDOOR,RSUMP,RSHELL,RPED,TPED,ELSMP,
!      1TENDP(10,999),TFRZSH,TDEBRS,TKDEBR,PDEBR,CPDEBR,ENENDP(10,999),
!      2ENOLDP(10,999),DXVERT,DXSNK,XDSTE(10,999),XBTE(10,999),HXLA(999),
!      3HXLB(999),TSFEB(999),DCRS(999),DCRSLD(999),HCRS(16,999),
!      4HCRSLD(16,999),THETE0(10,999),THETE1(10,999),QSHELL,QSHELE,TSHELI,
!      5SIGOXE(999),FKOXE(999),RINJC,XLSEC,ANGSEC,ANINJC,XLCHAN,WCHNL,
!      6TEFZX(999),TIMSPC(999),DXNODE(999),TNORM(999),FRCSOL(999),
!      7ALPSPR(999),CRAMCON,HINTF,TSHLMX,XFRMX(999),XFROX(999),XFRTX(999),
!      8XMLMX(999),XMLOX(999),XMLTX(999),XTOTX(999),TIMEO,TMAX,EDOWN(999),
!      9HCP(999)
!       COMMON/PRINTR/ QFEH2O,QCRH2O,QZRH2O,QFECO2,QCRCO2,QZRCO2,
!      4XFH2OU,XFCAOH,XFMGCA,XFCACO,XZRMRE,XFEMRE,XCRMRE,XZRORE,XFEORE,   
!      5XCRORE,XMH2O,XMCO2,XMCACO,XMMGCA,XMCAOH,TFWL,TFWS,TBWL,TBWS,      
!      6TMCAL,TMCAS,TCAL,TCAS,TFOS,TFOL,TFMS,TFML,XVISC(28),SVISC(28),    
!      7XMOL(28),FMMOL(28),ROM(28),ROMLIQ(28),AEQM(28,2),BEQM(28,2),
!      8CEQM(28,2),ECL,ECS,ECAL,ECAS,EMCAL,EMCAS,EBWL,EBWS,EFWL,EFWS,    
!      9STEF,GRAV,PI,TCS,TCL,CCL,CCS,RMASSL,WPCC,WPM,WPA,WPCS,ROC,RMASSS,   
!      1ANGSHL,RSLAGL,RSLAGS,HNODT,VFAV,VGAV,QXAV,XWTSS(16),  
!      2TSCS(2),TSCL(2),ESCS(2),ESCL(2),CCSS(2),CCSL(2),ROSTLS,ROSTLL,
!      3XFRGAS,HMINC,TST(99),TSTOP(99),AINTP(99),BINTP(99),DRATIO(999),
!      4XBCN(999),XDCN(999),XBLT(15),ADEC(99),BDEC(99),APOUR(16,99),
!      5BPOUR(16,99),XWTC(14),BWIDTH,THCKCV,TMBOIL,TEBOIL,VFINT,ANGFAN,
!      6ALPMAX,THSHL,XFCABL,XNDMIN,DVMX,DAVMX,DEAVMX,DEMX,TDC,QDCU,QDCUO2,
!      7TSINJ,EINJ,DTINJ,TKINJ,ROEV,CPINJ,SURFT,VSINJ,EMINJ,TSINJO,EINJO,
!      8DTINJO,TKINJO,ROEVO,CPINJO,SURFTO,VSINJO,EMINJO,XLEADE,ARSUM,
!      9DBUBOX,UTRISE,TREMSH,DJET,DFALL,WEBER,FROUDE,XPSAITO,XPEPSTN,
!      1FRAG,XMBEDT,XMBED(16),XLPENT,XLPENA,UJET,UFALL,HFALL,ERPV,
!      2TJETT(99),DJETT(99),HWATP,XDOTJET,DVMXW,DAVMXW,DEMXW,DEAVMXW,
!      3QJETW,XSTMJF,TINTSJF,ESAT,DRDOOR,DRANL,EI,QDCBUO2,QDCBU,
!      4EBEDS,EBEDB
!       COMMON/HCONS/HMETAL(999),HOXIDE(999)  
!       COMMON/PROPI/ NMATC,NMATFI,NMATFF,ICAOH2,ICACO3,IMCCO3,IFH2O,     
!      1IVH2O,ICK2O,IVK2O,INA2O,ITIO2,ISIO2,ICAO,IMGO,IAL2O3,IFEO,IFE2O3, 
!      2IFE3O4,IFE,ICR,INI,IZR,IU,IB4C,IB,ICR2O3,INIO,IUO2,IZRO2,IB2O3,   
!      3NBCINT(999),NODES(999),NUMNOD,IMOX(28),IBAS,ILCS,ILL,NACTIV(999),     
!      4NBFRZM,NBFRZO,NABLFM,NDRNFM,NTYPMT(999,999),NDOOR,NBMADJ,NUMSHV,   
!      5NBSHL(999),NCRSTS(999),NUMSHH,NSKIPE,NACSH,NWAT,NPEND,NBCBOT,
!      6NCRTOP,NBFZOE,NBFZME,NGEOM,NL(999,999),NFRSCT,NLOGSH,NADAB,NINVIS,
!      7NSIMST,NSTEEL,NOVHT,NOVTK,NOVUM,NOVEM,NOVSIG,NPLLOC(999),NBPL,
!      8IXP(999),IYP(999),NVTPE,NSOLTP,NSOLF,NINTF,IFLGA(999),ICTYPE,ICTC,
!      9NPOURS,NSMP,NPED,NDOR,NSHL,NANULS,NSMPCV,NBOIL,NSWALL,NMVER,
!      1NCRTEM,NTHINC,NVELP,NITMAX,NENMAX,NPRINT,NPFREQ,NTIMSPC,NPLFREQ,
!      2NPLTOT,NJET,NJETP,NJETD,NJETND,NODCAP,NVELPW,NITMAXW,NENMXW,
!      3IFLGJ(999),NBEDCQ,ISHELE
!       COMMON/BASPR/ HBMT(999,999,16),HBMOLD(999,999,16) 
!       COMMON/PROPB/CPBM(999),FKB(999,999),DENB(999,999),DTDEB(999,999),
!      1EMIBM(999),DENCRS(999),ENCRS(999),FKRF(999),DENRF(999),CPRF(999) 
!       COMMON/PROPM/DTDEM(999),CPMLT(999),FKMLT(999),DENMLT(999),
!      1SIGMLT(999),UMMLT(999),EMIMLT(999)      
!       DATA TREF /298.15D0/      
!       DATA TWO /2.0D0/
!       DATA HALF /0.5D0/
! C...................................................................... 
! C.....FIRST CALCULATE NEW TOTAL MELT HEIGHT AND THE HEIGHT OF THE MELT      
! C.....CONSTITUENTS.
!       DO 7130 KN=1,NUMNOD
!       HMETAL(KN)=0.D0 
!       HOXIDE(KN)=0.D0 
!       DO 7132 KT=1,16 
!       IF(KT.LE.7) HMETAL(KN)=HMETAL(KN)+HITE(KT,KN) 
!       IF(KT.GE.8) HOXIDE(KN)=HOXIDE(KN)+HITE(KT,KN) 
!  7132 CONTINUE
!  7130 CONTINUE
! C...................................................................... 
! C.....NOW CALCULATE NEW BULK MELT ENTHALPIES AND TEMPERATURES.    
!       IF(NADAB.EQ.1) GO TO 9145
!       DO 7144 KN=1,NUMNOD
!       IF(HTOT(KN).LE.0.D0.OR.NACTIV(KN).EQ.0) GO TO 4539      
!       ENBLK(KN)=ENBLK(KN)+DBLKEN(KN)      
!       CALL ASINEA(HITE,KN,HSEND,ROMLIQ,WPCC,WPM,WPA,WPCS,ROC,RSLAGL,0)  
!       CALL TEF(ENBLK(KN),HSEND,TBULK(KN),DTDEM(KN)) 
!       GO TO 7144      
!  4539 CONTINUE
!       TBULK(KN)=TREF  
!       ENBLK(KN)=0.D0  
!       DTDEM(KN)=0.D0  
!  7144 CONTINUE
! C...................................................................... 
! C.....CALCULATE BASEMAT ENTHALPIES AND TEMPERATURES VIA BACKWARDS
! C.....SUBSTITUTION GIVEN BULK MELT ENTHALPY INCREMENTS.
!       DO 7150 KH=1,NUMNOD
!       IF(NACTIV(KH).EQ.0) GO TO 7150      
!       DO 7152 KV=1,NODES(KH)    
!       IF(NBCINT(KH).GT.3.AND.KV.EQ.1) GO TO 7152    
!       ENTHP(KV,KH)=ENTHP(KV,KH)+THETO(KV,KH)+THET1(KV,KH)*DBLKEN(KH)    
!       IF(NTYPMT(KV,KH).GT.3) GO TO 7153   
!       CALL TEC(ENTHP(KV,KH),EMAX(KV,KH),TEMP(KV,KH),DTDE,RMASS,YCACO3,YM
!      1CCO3,YCAOH2,YFH2O,NL(KV,KH))
!       DTDEB(KV,KH)=DTDE
!       GO TO 7152      
!  7153 CONTINUE
!       CALL ASINED(KV,KH,HSEND,ROM,WPCC,WPM,WPA,WPCS,ROC,RSLAGS,0)
!       CALL TEF(ENTHP(KV,KH),HSEND,TEMP(KV,KH),DTDE) 
!       DTDEB(KV,KH)=DTDE
!  7152 CONTINUE
!  7150 CONTINUE
! C...................................................................... 
! C.....IF SHELL HEATUP ROUTINES HAVE BEEN ACTIVATED, UPDATE SHELL
! C.....ENTHALPIES, TEMPERATURES, AND CRUST THICKNESSES.
!       IF(NSKIPE.EQ.0) GO TO 8319
!       IF(ISHELE.EQ.1) GO TO 8319
!       IF(NACSH.EQ.0) GO TO 8319 
!       DO 8320 KV=1,NUMSHV
!       DO 8320 KH=1,NUMSHH
!       ENENDP(KH,KV)=ENENDP(KH,KV)+THETE0(KH,KV)+THETE1(KH,KV)*DBLKEN(NBM
!      1ADJ)  
!       CALL TESS(ENENDP(KH,KV),TENDP(KH,KV),DTDE)    
!  8320 CONTINUE
! C.....GIVEN THE UPDATED RESULTS, FIND MAXIMUM SHELL SURFACE TEMPERATURE
!       TSHLMX=TENDP(1,1)
!       DO 6320 KV=2,NUMSHV
!       TSHLMX=DMAX1(TSHLMX,TENDP(1,KV))
!  6320 CONTINUE
! C.....UPDATE SHELL CRUST DEPTHS IF CRUST GROWTH IS OCCURING.  FIRST     
! C.....UPDATE MELT/SHELL INTERFACIAL HEAT TRANSFER COEFFICIENT.
!       IF(HTOT(NBMADJ).LE.0.D0) GO TO 9310 
!       NS=NBMADJ
!       CMS=CPMLT(NS)   
!       PMS=DENMLT(NS)  
!       TKMS=FKMLT(NS)  
!       UMS=UMMLT(NS)   
!       CALL SHELLM(TBULK(NS),VGJ(NS),VEL(NS),VOID(NS),CMS,PMS,TKMS,UMS,HT
!      1OT(NS),HSHELL,XLENSH)     
!       GO TO 9313      
!  9310 CONTINUE
!       HSHELL=0.D0     
!       GO TO 8319      
!  9313 CONTINUE
!       DO 8412 KV=2,NUMSHV
!       IF(NBSHL(KV).EQ.1) GO TO 8412
!       IF(NBSHL(KV).EQ.3) GO TO 8412
!       KLOW=8
!       KHIGH=16
!       TFS=TEFZX(KV)   
!       IF(NCRSTS(KV).EQ.1) GO TO 8414      
!       KLOW=1
!       KHIGH=7
!       TFS=TEFZX(KV)   
!  8414 CONTINUE
!       GC1=(HSHELL*(TBULK(NBMADJ)-TFS))/SIGOXE(KV)   
!       DTEV=TFS-TENDP(1,KV)      
!       DTEV=DMAX1(DTEV,0.D0)     
!       GC2=DCRSLD(KV)**2+(FKOXE(KV)*DTEV)/SIGOXE(KV) 
!       GAMTAN=GC1**2+4.D0*GC2    
!       GAM=SQRT(GAMTAN)
!       DCRS(KV)=0.5D0*(-GC1+GAM) 
!       DCR=DCRS(KV)-DCRSLD(KV)   
!       DO 8415 KD=KLOW,KHIGH     
!       HCRS(KD,KV)=HCRSLD(KD,KV)+(HITE(KD,NBMADJ)*DCR)/HTOT(NBMADJ)      
!  8415 CONTINUE
!  8412 CONTINUE
!  8319 CONTINUE
! C...................................................................... 
! C.....GIVEN NEW BULK MELT ENTHALPIES AND TEMPERATURES, CALCULATE NEW    
! C.....CRUST AND ABLATION DEPTHS.  ALSO CORRECT MELT INVENTORIES WHEN    
! C.....THE INTERFACE BETWEEN TWO DISIMILIAR MATERIALS HAS BEEN ABLATED   
! C.....THROUGH OVER THIS TIMESTEP.
!       DO 9390 J=1,NUMNOD
!       IF(NACTIV(J).EQ.0) GO TO 9390
!       BATEVL=BET(J)   
!       IF(NSMPCV.EQ.1.AND.NBURN.EQ.0.AND.J.LE.NSMP) BATEVL=0.D0
!       IF(NBCINT(J).GT.3) GO TO 8411
!  8411 CONTINUE
!       XLSTRT=XDISTO(J)-XBTWO(J) 
!       ZLMIN=(XFCABL*XLSTRT)/(TWO*TWO)     
!       IF(NBCINT(J).EQ.1) GO TO 9390
!       IF(NCRRT(J).EQ.1) GO TO 9391
!       IF(NBCINT(J).EQ.2) NPS=3 
!       IF(NBCINT(J).EQ.6) NPS=7  
!       IF(NBCINT(J).EQ.8) NPS=9  
!       GO TO 9392      
!  9391 CONTINUE
!       NPS=NBCINT(J)   
!  9392 CONTINUE
!       IF(NPS.GT.3) GO TO 9393   
!       GO TO(9390,192,9390),NPS  
!  9393 CONTINUE
!       ZCOMP=XDISTO(J)-ZABLAT(J) 
!       IF(ZCOMP.LT.XBTWO(J)) GO TO 9492    
!       NLOLD=2
!       GO TO 9493      
!  9492 CONTINUE
!       NLOLD=1
!       ZLINT=XBTWO(J)-ZCOMP      
!  9493 CONTINUE
!       NROUTE=NPS-3    
!       GO TO(194,195,196,197,198,199),NROUTE
!   192 CONTINUE
!       Z1=((HTCOEF(J)*(TBULK(J)-TFZX(J)))/SIGOX(J))**2
!       Z2=DCROLD(J)**2+(TKX(J)*(TFZX(J)-TEMP(1,J)))/SIGOX(J)   
!       GAM=SQRT(Z1+4.D0*Z2)      
!       DCRUST(J)=0.5D0*GAM-(0.5D0*HTCOEF(J)*(TBULK(J)-TFZX(J)))/SIGOX(J) 
!       ZX1=TKX(J)/(2.D0*DTIME*SIGOX(J))    
!       ZX2=HTCOEF(J)/(2.D0*DTIME*SIGOX(J)) 
!       DCDOT(J)=(ZX1*(TFZX(J)-TEMP(1,J)))/DCRUST(J)-ZX2*(TBULK(J)-TFZX(J)
!      1)
!       DADOT(J)=0.D0   
!       DADOTG(J)=0.D0  
!       GO TO 9395      
!   194 CONTINUE
!       Z1=((HTCOEF(J)*(TBULK(J)-TFZC(J)))/SIGCON(J))**2
!       Z2=ZABOLD(J)**2+(BATEVL*(TFZC(J)-TEMP(2,J)))/SIGCON(J)  
!       GAM=SQRT(Z1+4.D0*Z2)      
!       ZABLAT(J)=0.5D0*GAM-(0.5D0*HTCOEF(J)*(TBULK(J)-TFZC(J)))/SIGCON(J)
!       IF(ZABLAT(J).LT.ZLMIN) ZABLAT(J)=ZLMIN
!       ZX1=BATEVL/(2.D0*DTIME*SIGCON(J))   
!       ZX2=HTCOEF(J)/(2.D0*DTIME*SIGCON(J))
!       DADOT(J)=(ZX1*(TFZC(J)-TEMP(2,J)))/ZABLAT(J)-ZX2*(TBULK(J)-TFZC(J)
!      1)     
!       DADOTG(J)=DADOT(J)
!       DCDOT(J)=0.D0   
!       GO TO 9395      
!   195 CONTINUE
!       HEFF=(TKM(J)*HTCOEF(J))/(TKM(J)+DFILMT(J)*HTCOEF(J))    
!       Z1=((HEFF*(TBULK(J)-TFZC(J)))/SIGCON(J))**2   
!       Z2=ZABOLD(J)**2+(BATEVL*(TFZC(J)-TEMP(2,J)))/SIGCON(J)  
!       GAM=SQRT(Z1+4.D0*Z2)      
!       ZABLAT(J)=0.5D0*GAM-(0.5D0*HEFF*(TBULK(J)-TFZC(J)))/SIGCON(J)     
!       IF(ZABLAT(J).LT.ZLMIN) ZABLAT(J)=ZLMIN
!       DADOT(J)=0.D0   
!       DCDOT(J)=0.D0   
!       ZX1=BATEVL/(2.D0*DTIME*SIGCON(J))   
!       ZX2=HEFF/(2.D0*DTIME*SIGCON(J))     
!       DADOTG(J)=ZX1*(TFZC(J)-TEMP(2,J))/ZABLAT(J)-ZX2*(TBULK(J)-TFZC(J))
!       GO TO 9395      
!   196 CONTINUE
!       F1=((HTCOEF(J)*(TBULK(J)-TFZX(J)))/SIGOX(J))**2
!       F2=DCROLD(J)**2+(TKX(J)*(TFZX(J)-TFZC(J)))/SIGOX(J)     
!       GAMOX=SQRT(F1+4.D0*F2)    
!       DCRUST(J)=0.5D0*GAMOX-(HTCOEF(J)*(TBULK(J)-TFZX(J)))/(2.D0*SIGOX(J
!      1))    
!       F3=((TKX(J)*(TFZX(J)-TFZC(J)))/(SIGCON(J)*DCRUST(J)))**2
!       F4=ZABOLD(J)**2+(BATEVL*(TFZC(J)-TEMP(2,J)))/SIGCON(J)  
!       GAMCON=SQRT(F3+4.D0*F4)   
!       ZABLAT(J)=0.5D0*GAMCON-(TKX(J)*(TFZX(J)-TFZC(J)))/(2.D0*SIGCON(J)*
!      1DCRUST(J))      
!       IF(ZABLAT(J).LT.ZLMIN) ZABLAT(J)=ZLMIN
!       ZX1O=TKX(J)/(2.D0*DTIME*SIGOX(J))   
!       ZX2O=HTCOEF(J)/(2.D0*DTIME*SIGOX(J))
!       ZX1A=BATEVL/(2.D0*DTIME*SIGCON(J))  
!       ZX2A=TKX(J)/(2.D0*DTIME*SIGCON(J))  
!       DCDOT(J)=(ZX1O*(TFZX(J)-TFZC(J)))/DCRUST(J)-ZX2O*(TBULK(J)-TFZX(J)
!      1)     
!       DADOT(J)=(ZX1A*(TFZC(J)-TEMP(2,J)))/ZABLAT(J)-(ZX2A*(TFZX(J)-TFZC(
!      1J)))/DCRUST(J)  
!       DADOTG(J)=DADOT(J)
!       GO TO 9395      
!   197 CONTINUE
!       Z1=((HTCOEF(J)*(TBULK(J)-TFZX(J)))/SIGCON(J))**2
!       Z2=ZABOLD(J)**2+(BATEVL*(TFZC(J)-TEMP(2,J)))/SIGCON(J)  
!       GAM=SQRT(Z1+4.D0*Z2)      
!       ZABLAT(J)=0.5D0*GAM-(0.5D0*HTCOEF(J)*(TBULK(J)-TFZX(J)))/SIGCON(J)
!       IF(ZABLAT(J).LT.ZLMIN) ZABLAT(J)=ZLMIN
!       ZX1A=BATEVL/(2.D0*DTIME*SIGCON(J))  
!       ZX2A=HTCOEF(J)/(2.D0*DTIME*SIGCON(J))
!       DADOT(J)=(ZX1A*(TFZC(J)-TEMP(2,J)))/ZABLAT(J)-ZX2A*(TBULK(J)-TFZX(
!      1J))   
!       DADOTG(J)=DADOT(J)
!       DCDOT(J)=0.D0   
!       GO TO 9395      
!   198 CONTINUE
!       TKEFF=(TKX(J)*TKM(J)*DCRUST(J))/(TKX(J)*DFILMT(J)+TKM(J)*DCRUST(J)
!      1)     
!       Z1=(HTCOEF(J)*(TBULK(J)-TFZX(J))/SIGOX(J))**2 
!       Z2=DCROLD(J)**2+(TKEFF*(TFZX(J)-TFZC(J)))/SIGOX(J)      
!       GAMOX=SQRT(Z1+4.D0*Z2)    
!       DCRUST(J)=0.5D0*GAMOX-(0.5D0*HTCOEF(J)*(TBULK(J)-TFZX(J)))/SIGOX(J
!      1)     
!       Z3=((TKEFF*(TFZX(J)-TFZC(J)))/(DCRUST(J)*SIGCON(J)))**2 
!       Z4=ZABOLD(J)**2+(BATEVL*(TFZC(J)-TEMP(2,J)))/SIGCON(J)  
!       GAM=SQRT(Z3+4.D0*Z4)      
!       ZABLAT(J)=0.5D0*GAM-(0.5D0*TKEFF*(TFZX(J)-TFZC(J)))/(DCRUST(J)*SIG
!      1CON(J))
!       IF(ZABLAT(J).LT.ZLMIN) ZABLAT(J)=ZLMIN
!       ZX1=TKEFF/(2.D0*DTIME*SIGOX(J))     
!       ZX2=HTCOEF(J)/(2.D0*DTIME*SIGOX(J)) 
!       DCDOT(J)=(ZX1*(TFZX(J)-TFZX(J)))/DCRUST(J)-ZX2*(TBULK(J)-TFZX(J)) 
!       ZX1A=BATEVL/(2.D0*DTIME*SIGCON(J))  
!       ZX2A=TKEFF/(2.D0*DTIME*SIGCON(J))   
!       DADOTG(J)=(ZX1A*(TFZC(J)-TEMP(2,J)))/ZABLAT(J)-(ZX2A*(TFZX(J)-TFZC
!      1(J)))/DCRUST(J) 
!       DADOT(J)=0.D0   
!       GO TO 9395      
!   199 CONTINUE
!       Z1=((HTCOEF(J)*(TBULK(J)-TFZX(J)))/SIGCON(J))**2
!       Z2=ZABOLD(J)**2+(BATEVL*(TFZC(J)-TEMP(2,J)))/SIGCON(J)  
!       GAM=SQRT(Z1+4.D0*Z2)      
!       ZABLAT(J)=0.5D0*GAM-(0.5D0*HTCOEF(J)*(TBULK(J)-TFZX(J)))/SIGCON(J)
!       IF(ZABLAT(J).LT.ZLMIN) ZABLAT(J)=ZLMIN
!       DCDOT(J)=0.D0   
!       DADOT(J)=0.D0   
!       ZX1=BATEVL/(2.D0*DTIME*SIGCON(J))   
!       ZX2=HTCOEF(J)/(2.D0*DTIME*SIGCON(J))
!       DADOTG(J)=(ZX1*(TFZC(J)-TEMP(2,J)))/ZABLAT(J)-ZX2*(TBULK(J)-TFZX(J
!      1))    
!  9395 CONTINUE
!       IF(NPS.EQ.4) GO TO 9400   
!       IF(NPS.EQ.5) GO TO 9400   
!       IF(NPS.EQ.7) GO TO 9400   
!       IF(NPS.EQ.9) GO TO 9400   
! C.....UPDATE CRUST CONSTITUENT INVENTORY. 
!       GO TO(1921,1922),NCRSTM(J)
!  1921 CONTINUE
!       HCOMP=HOXIDE(J) 
!       KLOW=8
!       KHIGH=16
!       GO TO 1923      
!  1922 CONTINUE
!       HCOMP=HMETAL(J) 
!       KLOW=1
!       KHIGH=7
!  1923 CONTINUE
! C.....DETERMINE WHETHER THE AMOUNT OF MATERIAL CRUSTED OVER THIS
! C.....TIMESTEP EXCEEDS THAT IN THE BULK MELT.  IF SO, MAKE APPROPRIATE  
! C.....CORRECTIONS TO CRUST DEPTH AND VOLUME INVENTORIES.      
!       HOLDS=0.D0      
!       HOLDL=0.D0      
!       DO 614 KT=KLOW,KHIGH      
!       CALL INDEX(KT,KJ)
!       HOLDL=HOLDL+HITOLD(KT,J)  
!       RRAT=ROMLIQ(KJ)/ROM(KJ)   
!       IF(KT.EQ.16) RRAT=RSLAGL/RSLAGS     
!       HOLDS=HOLDS+RRAT*HITOLD(KT,J)
!   614 CONTINUE
!       DCR=DCRUST(J)-DCROLD(J)   
!       IF(HCOMP.GT.0.D0) GO TO 615
!       IF(DCR.LE.HOLDS) GO TO 615
!       DCR=HOLDS
!       DCRUST(J)=DCROLD(J)+DCR   
!       NRND=2
!       GO TO 616
!   615 CONTINUE
!       NRND=1
!   616 CONTINUE
!       DO 1924 KT=KLOW,KHIGH     
!       GO TO(604,605),NRND
!   604 CONTINUE
!       FRACD=HITE(KT,J)/HCOMP    
!       GO TO 606
!   605 CONTINUE
!       FRACD=HITOLD(KT,J)/HOLDL  
!   606 CONTINUE
!       HCRUST(KT,J)=HCROLD(KT,J)+FRACD*DCR 
!  1924 CONTINUE
! C.....FOR ABLATION CASES, SET RELEVANT LENGTH SCALES.
!  9400 CONTINUE
!       IF(NPS.EQ.2) GO TO 9390  
!       ZCOMP=XDISTO(J)-ZABLAT(J) 
!       IF(ZCOMP.LT.XBTWO(J)) GO TO 9501    
!       NLNEW=2
!       ZRINT=ZCOMP-XBTWO(J)      
!       GO TO 9502      
!  9501 CONTINUE
!       NLNEW=1
!  9502 CONTINUE
!       IF(NPS.EQ.5) GO TO 9405   
!       IF(NPS.EQ.8) GO TO 9405   
!       IF(NPS.EQ.9) GO TO 9405   
! C.....UPDATE BASEMAT INVENTORIES AND CORRECT MELT INVENTORIES FOR THE   
! C.....CASE OF ABLATION THROUGH THE INTERFACE OF DISIMILIAR MATERIALS.   
!       IF(NLOLD.EQ.NLNEW.AND.NTYPMT(NLOLD,J).LE.3) GO TO 9390  
!       IF(NLOLD.EQ.NLNEW) GO TO 9396
!       IF(NTYPMT(NLOLD,J).GT.3.OR.NTYPMT(NLNEW,J).GT.3) GO TO 8381
!       IF(NL(NLOLD,J).EQ.NL(NLNEW,J)) GO TO 9390     
!  8381 CONTINUE
!       IF(NTYPMT(1,J).GT.3) GO TO 9397     
!       IF(NL(1,J).EQ.2) GO TO 9397
!       HPCOR=HITE(16,J)-DRATIO(J)*ZRINT    
!       HITE(16,J)=DMAX1(HPCOR,0.D0)
!       GO TO 9399      
!  9397 CONTINUE
!       DO 9398 KT=1,16 
!       CALL INDEX(KT,KJ)
!       IF(NTYPMT(1,J).GT.3) GO TO 9995     
!       HOFF=(XWTSS(KT)*ROSTLS*ZRINT)/ROMLIQ(KJ)      
!       GO TO 9996      
!  9995 CONTINUE
!       RRAT=ROM(KJ)/ROMLIQ(KJ)   
!       IF(KT.EQ.16) RRAT=RSLAGS/RSLAGL     
!       HOFF=(HBMT(1,J,KT)*ZRINT*RRAT)/ZLINT
!  9996 CONTINUE
!       HPCOR=HITE(KT,J)-HOFF     
!       HITE(KT,J)=DMAX1(HPCOR,0.D0)
!  9398 CONTINUE
!  9399 CONTINUE
! C.....CORRECT MELT INVENTORY FOR TRUE NODE 2 MATERIAL WHICH WAS ABLATED.
!       IF(NTYPMT(2,J).GT.3) GO TO 9700     
!       IF(NL(2,J).EQ.2) GO TO 9700
!       DRAT=RMASSS/RSLAGL
!       HITE(16,J)=HITE(16,J)+DRAT*ZRINT    
!       GO TO 9991      
!  9700 CONTINUE
!       XLT=XDISTO(J)-XBTWO(J)+XBTW(2,J)    
!       ZFAC=(XLT-ZRINT)/XLT      
!       DO 9007 KT=1,16 
!       CALL INDEX(KT,KJ)
!       IF(NTYPMT(2,J).GT.3) GO TO 9997     
!       HADD=(XWTSS(KT)*ROSTLS*ZRINT)/ROMLIQ(KJ)      
!       GO TO 9998      
!  9997 CONTINUE
!       RRAT=ROM(KJ)/ROMLIQ(KJ)   
!       IF(KT.EQ.16) RRAT=RSLAGS/RSLAGL     
!       HADD=(ZRINT*HBMT(2,J,KT)*RRAT)/XLT  
!  9998 CONTINUE
!       HITE(KT,J)=HITE(KT,J)+HADD
!       IF(NTYPMT(2,J).GT.3) HBMT(2,J,KT)=HBMOLD(2,J,KT)*ZFAC   
!  9007 CONTINUE
!  9991 CONTINUE
! C.....RE-COMPUTE MELT INVENTORY GIVEN CORRECTED CONSTITUENT HEIGHTS.    
!       HMETAL(J)=0.D0  
!       HOXIDE(J)=0.D0  
!       HTOT(J)=0.D0    
!       DO 9992 KT=1,16 
!       HTOT(J)=HTOT(J)+HITE(KT,J)
!       IF(KT.LE.7) HMETAL(J)=HMETAL(J)+HITE(KT,J)    
!       IF(KT.GE.8) HOXIDE(J)=HOXIDE(J)+HITE(KT,J)    
!  9992 CONTINUE
!       GO TO 9390      
! C.....UPDATE BASEMAT NODAL INVENTORIES WHEN ABLATION OCCURS THROUGH     
! C.....INTERFACE OF IDENTICAL MATERIALS.   
!  9396 CONTINUE
!       IF(NLNEW.EQ.1) ZFAC=(ZABLAT(J)-XDISTO(J)+XBTWO(J))/(ZABOLD(J)-XDIS
!      1TO(J)+XBTWO(J)) 
!       IF(NLNEW.EQ.2) ZFAC=(ZABLAT(J)+XBTW(2,J))/(ZABOLD(J)+XBTW(2,J))  
!       DO 9403 KT=1,16 
!       HBMT(NLNEW,J,KT)=ZFAC*HBMOLD(NLNEW,J,KT)      
!  9403 CONTINUE
!       GO TO 9390      
!  9405 CONTINUE
! C.....UPDATE BASEMAT INVENTORIES AND MOLTEN FILM INVENTORIES. 
!       IF(NLOLD.EQ.NLNEW) GO TO 9407
!       DO 3131 KUP=1,28
!       HSEND(KUP)=0.D0 
!  3131 CONTINUE
!       DO 3132 KIN=1,2 
!       ZLEN=ZLINT      
!       IF(KIN.EQ.2) ZLEN=ZRINT  
!       IF(NTYPMT(KIN,J).GT.3) GO TO 9408   
!       IF(NL(KIN,J).EQ.2) GO TO 9408      
!       DRAT=RMASSS/RSLAGL
!       HSEND(16)=HSEND(16)+DRAT*ZLEN
!       GO TO 3132      
!  9408 CONTINUE
!       DO 9410 KT=1,16 
!       CALL INDEX(KT,KJ)
!       IF(NTYPMT(KIN,J).GT.3) GO TO 8997   
!       HSEND(KT)=HSEND(KT)+(XWTSS(KT)*ROSTLS*ZLEN)/ROMLIQ(KJ)  
!       GO TO 9410      
!  8997 CONTINUE
!       RRAT=ROM(KJ)/ROMLIQ(KJ)   
!       IF(KT.EQ.16) RRAT=RSLAGS/RSLAGL     
!       IF(KIN.EQ.1) HSEND(KT)=HSEND(KT)+HBMT(KIN,J,KT)*RRAT    
!       IF(KIN.EQ.2) HSEND(KT)=HSEND(KT)+(HBMT(KIN,J,KT)*RRAT*ZRINT)/(XDI
!      1STO(J)-XBTWO(J)+XBTW(2,J))
!  9410 CONTINUE
!  3132 CONTINUE
! C.....SET NEW FILM CONSTITUENT INVENTORIES & FIND NEW TOTAL FILM DEPTH. 
!       DFILMT(J)=0.D0  
!       DO 9409 KT=1,16 
!       DFILM(KT,J)=DFMOLD(KT,J)+HSEND(KT)  
!       DFILMT(KT)=DFILMT(KT)+DFILM(KT,J)   
!  9409 CONTINUE
! C.....UPDATE BASEMAT INVENTORY. 
!       IF(NTYPMT(2,J).LE.3) GO TO 9390     
!       ZFAC=(XDISTO(J)-XBTWO(J)+XBTW(2,J)-ZRINT)/(XDISTO(J)-XBTWO(J)+XBTW
!      1(2,J))
!       DO 7979 KT=1,16 
!       HBMT(2,J,KT)=ZFAC*HBMOLD(2,J,KT)    
!  7979 CONTINUE
!       GO TO 9390      
! C.....UPDATE BASEMAT & MOLTEN FILM INVENTORIES WHEN ABLATION DOES NOT   
! C.....OCCUR ACROSS THE INTERFACE OF DISIMILIAR MATERIALS.     
!  9407 CONTINUE
!       IF(NTYPMT(NLNEW,J).GT.3) GO TO 9705 
!       IF(NL(NLNEW,J).EQ.2) GO TO 9705    
!       DRAT=RMASSS/RSLAGL
!       DFILM(16,J)=DFMOLD(16,J)+DRAT*(ZABOLD(J)-ZABLAT(J))     
!       DFILMT(J)=DFOLT(J)+DRAT*(ZABOLD(J)-ZABLAT(J)) 
!       GO TO 9390      
!  9705 CONTINUE
!       IF(NLNEW.EQ.2) GO TO 9024
!       ZFAC=(ZABLAT(J)-XDISTO(J)+XBTWO(J))/(ZABOLD(J)-XDISTO(J)+XBTWO(J))
!       XLT=ZABLAT(J)-XDISTO(J)+XBTWO(J)    
!       GO TO 9025      
!  9024 CONTINUE
!       ZFAC=(ZABLAT(J)+XBTW(2,J))/(ZABOLD(J)+XBTW(2,J))
!       XLT=ZABLAT(J)+XBTW(2,J)   
!  9025 CONTINUE
!       DZAB=ZABOLD(J)-ZABLAT(J)  
!       DFILMT(J)=0.D0  
!       DO 9414 KT=1,16 
!       CALL INDEX(KT,KJ)
!       IF(NTYPMT(NLNEW,J).GT.3) GO TO 8995 
!       HADD=(XWTSS(KT)*ROSTLS*DZAB)/ROMLIQ(KJ)
!       GO TO 8996      
!  8995 CONTINUE
!       RRAT=ROM(KJ)/ROMLIQ(KJ)   
!       IF(KT.EQ.16) RRAT=RSLAGS/RSLAGL     
!       HADD=(HBMT(NLNEW,J,KT)*DZAB*RRAT)/XLT
!  8996 CONTINUE
!       DFILM(KT,J)=DFMOLD(KT,J)+HADD
!       DFILMT(J)=DFOLT(J)+HADD   
!       IF(NTYPMT(NLNEW,J).GT.3) HBMT(NLNEW,J,KT)=ZFAC*HBMOLD(NLNEW,J,KT) 
!  9414 CONTINUE
!  9390 CONTINUE
!  9145 CONTINUE
! C...................................................................... 
! C.....CALCULATE TOTAL MELT VOLUME INVENTORIES.      
!       TOTMET=0.D0     
!       TOTOX=0.D0      
!       TOTVOL=0.D0     
!       DO 7140 KT=1,16 
!       VOLCN(KT)=0.D0  
!       DO 7142 KN=1,NUMNOD
!       VOLCN(KT)=VOLCN(KT)+HITE(KT,KN)*AREA(KN)*FLOAT(NDOOR)   
!  7142 CONTINUE
!       TOTVOL=TOTVOL+VOLCN(KT)   
!       IF(KT.LE.7) TOTMET=TOTMET+VOLCN(KT) 
!       IF(KT.GE.8) TOTOX=TOTOX+VOLCN(KT)   
!  7140 CONTINUE
! C...................................................................... 
! C.....UPDATE GAS MASS FLUXES DUE TO CONCRETE DECOMPOSITION   
!       DO 488 J=1,NUMNOD
!       IF(NACTIV(J).EQ.0.OR.NADAB.EQ.1) GO TO 488
!       DO 652 IOUT=1,4 
!       GO TO(653,654,655,656),IOUT
!   653 CONTINUE
!       TCOMP=TFWL      
!       BDCP=XFH2OU     
!       GO TO 657
!   654 CONTINUE
!       TCOMP=TBWL      
!       BDCP=(XFCAOH*XMH2O)/XMCAOH
!       GO TO 657
!   655 CONTINUE
!       TCOMP=TMCAL     
!       BDCP=(2.D0*XFMGCA*XMCO2)/XMMGCA     
!       GO TO 657
!   656 CONTINUE
!       TCOMP=TCAL      
!       BDCP=(XFCACO*XMCO2)/XMCACO
!   657 CONTINUE
!       IF(BDCP.LE.0.D0) GO TO 638
! C.....CHECK TO SEE IOUT-TH ISOTHERM LIES BETWEEN THE IDR & IDR+1 NODES. 
!       DO 637 IDR=1,NODES(J)-1   
!       SIGN=(TEMP(IDR,J)-TCOMP)*(TEMP(IDR+1,J)-TCOMP)
!       IF(SIGN.GT.0.D0) GO TO 637
!       IF(TEMP(IDR+1,J).EQ.TEMP(IDR,J)) GO TO 637    
! C.....ALGORITHM REACHES HERE, THEN ISOTHERM HAS BEEN FOUND.   
!       IF(IDR.GT.1) GO TO 643    
!       IF(NBCINT(J).LE.3) GO TO 643
! C.....THE FOLLOWING FINDS THE GAS FLUX WHEN THE ISOTHERM LIES ADJACENT  
! C.....TO AN ABLATING NODE.      
!       DXSAT=ZABLAT(J)*((TCOMP-TEMP(IDR,J))/(TEMP(IDR+1,J)-TEMP(IDR,J))) 
!       XLEN=XDISTO(J)-ZABLAT(J)+DXSAT      
!       IF(XLEN.GE.XBTWO(J)) GO TO 648      
!       IP=IDR
!       GO TO 673
!   648 CONTINUE
!       IP=IDR+1
!   673 CONTINUE
!       NPROP=NTYPMT(IP,J)
! C.....CHECK TO SEE IF ISOTHERM LIES IN GAS PRODUCING REGION.  
!       IF(NUMOLD(IOUT,J).GT.1) GO TO 637   
!       XLSMF(IOUT,J)=XLEN
!       NUMS(IOUT,J)=1  
!       IF(NPASSG(J).EQ.1) GO TO 637
!       IF(NPROP.GT.3) GO TO 637  
!       IF(NL(IP,J).EQ.2) GO TO 637
!       I2=IDR+1
!       I3=IDR+2
!       VL2=XBTW(I2,J)  
!       BDCK=ROC*BDCP   
!       IF(NTYPMT(I2,J).GT.3) GO TO 1332    
!       SDECAY=0.D0     
!       GO TO 1333      
!  1332 CONTINUE
!       SDECAY=ROM(21)*QDCU*HBMT(I2,J,6)+ROM(26)*QDCUO2*HBMT(I2,J,15)     
!  1333 CONTINUE
!       CON23=(FKB(I2,J)*FKB(I3,J))/(FKB(I3,J)*XBTW(I2,J)+FKB(I2,J)*(XDIST
!      1(I2,J)-XBTW(I2,J)))
!       TEM12=TFZC(J)-TEMP(I2,J)  
!       TEM23=TEMP(I2,J)-TEMP(I3,J)
!       EDOTG=((BET(J)*TEM12)/ZABLAT(J)-CON23*TEM23+SDECAY)/(VL2*DENB(I2,J
!      1))    
!       C1=(DADOTG(J)*(TCOMP-TEMP(I2,J)))/(TEMP(I2,J)-TFZC(J))  
!       C2=(TFZC(J)-TCOMP)/(TFZC(J)-TEMP(I2,J))**2    
!       C3=ZABLAT(J)*DTDEB(I2,J)*EDOTG*C2   
!       XDOTG=C1+C3     
!       XDOTG=DMAX1(XDOTG,0.D0)   
!       SMFLX(IOUT,J)=BDCK*XDOTG  
!       GO TO 652
!   643 CONTINUE
! C.....DETERMINE IF GAS IS GENERATED IN NON-BOUNDARY OR NON-ABLATING     
! C.....NODES.
!       DXSAT=XDIST(IDR,J)*((TCOMP-TEMP(IDR,J))/(TEMP(IDR+1,J)-TEMP(IDR,J)
!      1))    
!       IF(DXSAT.GE.XBTW(IDR,J)) GO TO 628  
!       IP=IDR
!       GO TO 629
!   628 CONTINUE
!       IP=IDR+1
!   629 CONTINUE
!       NPROP=NTYPMT(IP,J)
!       IF(IDR.LT.NUMOLD(IOUT,J)) GO TO 637 
!       XLSMF(IOUT,J)=DXSAT
!       NUMS(IOUT,J)=IDR
!       IF(NPASSG(J).EQ.1) GO TO 637
!       IF(NPROP.GT.3) GO TO 637  
!       IF(NL(IP,J).EQ.2) GO TO 637
!       LM1=IDR-1
!       L=IDR 
!       LP1=IDR+1
!       LP2=IDR+2
!       DENGJ=DENB(L,J) 
!       DENGK=DENB(LP1,J)
!       BDCK=ROC*BDCP   
! C.....SET INTERNODAL CONDUCTANCES, VOLUMES, AND LENGTHS.      
!       VLGJ=XBTWO(L)   
!       IF(L.GT.1) VLGJ=XDIST(LM1,J)-XBTW(LM1,J)+XBTW(L,J)      
!       VLGJP1=XDIST(L,J)-XBTW(L,J)+XBTW(LP1,J)
!       XLJJP1=XDIST(L,J)
!       XLFT=XBTW(L,J)/XLJJP1     
!       XRFT=1.D0-XLFT  
!       CJP12=(FKB(L,J)*FKB(LP1,J))/(FKB(LP1,J)*XBTW(L,J)+FKB(L,J)*(XDIST(
!      1L,J)-XBTW(L,J)))
!       DJM12=CJP12     
!       DENOM=FKB(LP2,J)*XBTW(LP1,J)+FKB(LP1,J)*(XDIST(LP1,J)-XBTW(LP1,J))
!       DJP12=0.D0      
!       IF(DENOM.GT.0.D0) DJP12=(FKB(LP1,J)*FKB(LP2,J))/DENOM   
!       IF(L.GT.1) GO TO 5031     
!       GAMCD=HTCOEF(J)*(TARGB(J)-TEMP(1,J))
!       IF(NBCINT(J).EQ.2) GAMCD=(TKX(J)*(TFZX(J)-TEMP(1,J)))/DCRUST(J)  
!       IF(NBCINT(J).EQ.3) GAMCD=HTCOEF(J)*(TBULK(J)-TFZX(J))   
!       GO TO 5032      
!  5031 CONTINUE
!       IF(L.GT.2.OR.NBCINT(J).LE.3) GO TO 5033
!       GAMCD=(BET(J)*(TFZC(J)-TEMP(2,J)))/ZABLAT(J)  
!       GO TO 5032      
!  5033 CONTINUE
!       CJM12=(FKB(LM1,J)*FKB(L,J))/(FKB(L,J)*XBTW(LM1,J)+FKB(LM1,J)*(XDIS
!      1T(LM1,J)-XBTW(LM1,J)))    
!       GAMCD=CJM12*(TEMP(LM1,J)-TEMP(L,J)) 
!  5032 CONTINUE
!       IF(NTYPMT(L,J).GT.3) GO TO 6032     
!       SDECAJ=0.D0     
!       GO TO 6033      
!  6032 CONTINUE
!       SDECAJ=ROM(21)*QDCU*HBMT(L,J,6)+ROM(21)*QDCUO2*HBMT(L,J,15)
!  6033 CONTINUE
!       IF(NTYPMT(LP1,J).GT.3) GO TO 6034   
!       SDECAK=0.D0     
!       GO TO 6035      
!  6034 CONTINUE
!       SDECAK=ROM(21)*QDCU*HBMT(LP1,J,6)+ROM(21)*QDCUO2*HBMT(LP1,J,15)   
!  6035 CONTINUE
!       EDOTJ=(GAMCD-CJP12*(TEMP(L,J)-TEMP(LP1,J))+SDECAJ)/(DENGJ*VLGJ)   
!       EDOTK=(DJM12*(TEMP(L,J)-TEMP(LP1,J))-DJP12*(TEMP(LP1,J)-TEMP(LP2,J
!      1))+SDECAK)/(DENGK*VLGJP1) 
!       C1=DTDEB(L,J)*XLFT*EDOTJ*(TCOMP-TEMP(LP1,J))+DTDEB(LP1,J)*EDOTK*(T
!      1EMP(L,J)-TCOMP)*XRFT      
!       XDOTG=(XLJJP1*C1)/(TEMP(LP1,J)-TEMP(L,J))**2  
!       XDOTG=DMAX1(XDOTG,0.D0)   
!       SMFLX(IOUT,J)=BDCK*XDOTG  
!       GO TO 652
!   637 CONTINUE
!   638 CONTINUE
!       SMFLX(IOUT,J)=0.D0
!   652 CONTINUE
!   488 CONTINUE
! C...................................................................... 
! C.....GIVEN NEW GAS MASS FLUXES, UPDATE MELT VOID FRACTION AND CALCULATE
! C.....TOTAL GAS SUPERFICIAL GAS VELOCITY.  
!       DO 8736 J=1,NUMNOD
!       IF(NACTIV(J).EQ.0.OR.NADAB.EQ.1) GO TO 8736
!       CALL CONCO2(TCS,PDRYWL,CP,VIS,FK,DENC)
!       CALL CONH2O(TCS,PDRYWL,CP,VIS,FK,DENH)
!       DENJ=DENC+DENH  
!       VGJ(J)=(SMFLX(1,J)+SMFLX(2,J))/DENH+(SMFLX(3,J)+SMFLX(4,J))/DENC  
!       IF(HTOT(J).GT.0.D0) GO TO 8737      
!       VOID(J)=0.D0    
!       GO TO 8736      
!  8737 CONTINUE
!       CALL VOIDFR(SIGMLT(J),DENMLT(J),UMMLT(J),DENJ,VGJ(J),VOID(J))     
!  8736 CONTINUE
! C...................................................................... 
! C.....GIVEN THE NEW CRUST & ABLATION DEPTHS, UPDATE THE BASEMAT
! C.....ELEVATIONS.     
!       DO 4119 KH=1,NUMNOD
!       GO TO(4119,202,4119,204,205,206,204,208,205),NBCINT(KH) 
!   202 CONTINUE
!       ELEVAT(KH)=ELOLD(KH)+DCRUST(KH)-DCROLD(KH)    
!       GO TO 4119      
!   204 CONTINUE
!       ELEVAT(KH)=ELOLD(KH)+ZABLAT(KH)-ZABOLD(KH)    
!       IF(NTYPMT(1,KH).LE.3) DABCON(KH)=DABOLD(KH)+ZABOLD(KH)-ZABLAT(KH)
!       GO TO 4119      
!   205 CONTINUE
!       ELEVAT(KH)=ELOLD(KH)+ZABLAT(KH)-ZABOLD(KH)+DFILMT(KH)-DFOLT(KH)   
!       IF(NTYPMT(1,KH).LE.3) DABCON(KH)=DABOLD(KH)+ZABOLD(KH)-ZABLAT(KH)
!       GO TO 4119      
!   206 CONTINUE
!       ELEVAT(KH)=ELOLD(KH)+ZABLAT(KH)-ZABOLD(KH)+DCRUST(KH)-DCROLD(KH)  
!       IF(NTYPMT(1,KH).LE.3) DABCON(KH)=DABOLD(KH)+ZABOLD(KH)-ZABLAT(KH)
!       GO TO 4119      
!   208 CONTINUE
!       ELEVAT(KH)=ELOLD(KH)+DCRUST(KH)-DCROLD(KH)+ZABLAT(KH)-ZABOLD(KH)
!      1+DFILMT(KH)-DFOLT(KH)
!       IF(NTYPMT(1,KH).LE.3) DABCON(KH)=DABOLD(KH)+ZABOLD(KH)-ZABLAT(KH)
!  4119 CONTINUE
! C...................................................................... 
! C.....GIVEN THE BASEMAT ELEVATION AND MELT DEPTHS, UPDATE THE WATER 
! C.....DEPTHS.     
!       IF(NWAT.EQ.0.OR.NWAT.EQ.2) GO TO 4121
!       DO 4120 KH=1,NUMNOD
!       DWAT(KH)=HDOWNC-(HTOT(KH)+ELEVAT(KH))
!       DWAT(KH)=DMAX1(DWAT(KH),0.D0)
!  4120 CONTINUE
!  4121 CONTINUE
!       RETURN
!       END
! C...................................................................... 
! C.....SUBROUTINE WRAPUP CALCULATES A FEW PIECES OF INFORMATION FOR I/O 
! C.....AFTER THE SOLUTION HAS CONVERGED.  THIS INCLUDES THE LOCAL 
! C.....OXIDATION ENERGY FLUX WITHIN THE MELT, MELT/ATMOSPHERE HEAT 
! C.....FLUXES, AND MASS DISTRIBUTION FUNCTIONS.     
! C...................................................................... 
!       SUBROUTINE WRAPUP(IFINISH)
!       IMPLICIT DOUBLE PRECISION(A-H,O-Z)
!       REAL(8) KL
!       DIMENSION HSEND(88)
!       COMMON/CATCHR/A(999),B(999),C(999),D(999),P(999),Q(999),
!      1RECON(999),DELVEL(999),DSRDT(999),DELHTS(999),EMAX(999,999),
!      2DBLKEN(999),DELHIT(16,999),SOURCE(16,999),SRCTOT(999),
!      3HCROLD(16,999),DCDOT(999),HCRUST(16,999),DFILM(16,999),
!      4DFMOLD(16,999),DENOLD(999),SIGOX(999),SIGCON(999),BET(999),
!      5TFZX(999),TFZC(999),TKX(999),TKM(999),THETO(999,999),
!      6THET1(999,999),OMEG0(4,999),OMEG1(4,999),TAO0(999),TAO1(999),
!      7SIG0(999),SIG1(999),TARGB(999),DADOT(999),DADOTG(999),
!      8XLOLD(4,999),VISREX(999),TATMS(999),HTMP(999),DHTMP(999),
!      9HTMOLD(999)
!       COMMON/PRINTB/ELEVAT(999),ELOLD(999),XDIST(999,999),XBTW(999,999),
!      1TEMP(999,999),ENTHP(999,999),EOLD(999,999),ENBLK(999),EBKOLD(999),
!      2TBULK(999),HITE(16,999),HITOLD(16,999),HTOT(999),HTOLD(999),
!      3HTCFT(999),HTCOEF(999),QFLUXT(999),QFLUXB(999),VEL(999),ELO(999),
!      4VELOLD(999),SRSCOR(16),AREA(999),RAD(999),ARC(999),VOLCN(16),
!      5VOID(999),VGJ(999),ZABLAT(999),ZABOLD(999),DCRUST(999),
!      6DCROLD(999),DABCON(999),DABOLD(999),DFILMT(999),DFOLT(999),
!      7SMFLX(4,999),XLSMF(4,999),TOTVOL,XFACMS(999),XMFLXA,XMCORT,
!      8VCORT,TOTOX,TOTMET,QFLXT,QFLXB,TIME,DTIME,XMCOR(16),VCOR(16),
!      9TCONI,RSAND,HDOWNC,TBOUND,EMISCN,PDRYWL,XDISTO(999),QOXT(999),
!      1XLENSH,XBTWO(999),RCOMP,WDOOR,RSUMP,RSHELL,RPED,TPED,ELSMP,
!      1TENDP(10,999),TFRZSH,TDEBRS,TKDEBR,PDEBR,CPDEBR,ENENDP(10,999),
!      2ENOLDP(10,999),DXVERT,DXSNK,XDSTE(10,999),XBTE(10,999),HXLA(999),
!      3HXLB(999),TSFEB(999),DCRS(999),DCRSLD(999),HCRS(16,999),
!      4HCRSLD(16,999),THETE0(10,999),THETE1(10,999),QSHELL,QSHELE,TSHELI,
!      5SIGOXE(999),FKOXE(999),RINJC,XLSEC,ANGSEC,ANINJC,XLCHAN,WCHNL,
!      6TEFZX(999),TIMSPC(999),DXNODE(999),TNORM(999),FRCSOL(999),
!      7ALPSPR(999),CRAMCON,HINTF,TSHLMX,XFRMX(999),XFROX(999),XFRTX(999),
!      8XMLMX(999),XMLOX(999),XMLTX(999),XTOTX(999),TIMEO,TMAX,EDOWN(999),
!      9HCP(999)
!       COMMON/PROPI/ NMATC,NMATFI,NMATFF,ICAOH2,ICACO3,IMCCO3,IFH2O,     
!      1IVH2O,ICK2O,IVK2O,INA2O,ITIO2,ISIO2,ICAO,IMGO,IAL2O3,IFEO,IFE2O3, 
!      2IFE3O4,IFE,ICR,INI,IZR,IU,IB4C,IB,ICR2O3,INIO,IUO2,IZRO2,IB2O3,   
!      3NBCINT(999),NODES(999),NUMNOD,IMOX(28),IBAS,ILCS,ILL,NACTIV(999),     
!      4NBFRZM,NBFRZO,NABLFM,NDRNFM,NTYPMT(999,999),NDOOR,NBMADJ,NUMSHV,   
!      5NBSHL(999),NCRSTS(999),NUMSHH,NSKIPE,NACSH,NWAT,NPEND,NBCBOT,
!      6NCRTOP,NBFZOE,NBFZME,NGEOM,NL(999,999),NFRSCT,NLOGSH,NADAB,NINVIS,
!      7NSIMST,NSTEEL,NOVHT,NOVTK,NOVUM,NOVEM,NOVSIG,NPLLOC(999),NBPL,
!      8IXP(999),IYP(999),NVTPE,NSOLTP,NSOLF,NINTF,IFLGA(999),ICTYPE,ICTC,
!      9NPOURS,NSMP,NPED,NDOR,NSHL,NANULS,NSMPCV,NBOIL,NSWALL,NMVER,
!      1NCRTEM,NTHINC,NVELP,NITMAX,NENMAX,NPRINT,NPFREQ,NTIMSPC,NPLFREQ,
!      2NPLTOT,NJET,NJETP,NJETD,NJETND,NODCAP,NVELPW,NITMAXW,NENMXW,
!      3IFLGJ(999),NBEDCQ,ISHELE
!       COMMON/PRINTR/ QFEH2O,QCRH2O,QZRH2O,QFECO2,QCRCO2,QZRCO2,
!      4XFH2OU,XFCAOH,XFMGCA,XFCACO,XZRMRE,XFEMRE,XCRMRE,XZRORE,XFEORE,   
!      5XCRORE,XMH2O,XMCO2,XMCACO,XMMGCA,XMCAOH,TFWL,TFWS,TBWL,TBWS,      
!      6TMCAL,TMCAS,TCAL,TCAS,TFOS,TFOL,TFMS,TFML,XVISC(28),SVISC(28),    
!      7XMOL(28),FMMOL(28),ROM(28),ROMLIQ(28),AEQM(28,2),BEQM(28,2),
!      8CEQM(28,2),ECL,ECS,ECAL,ECAS,EMCAL,EMCAS,EBWL,EBWS,EFWL,EFWS,    
!      9STEF,GRAV,PI,TCS,TCL,CCL,CCS,RMASSL,WPCC,WPM,WPA,WPCS,ROC,RMASSS,   
!      1ANGSHL,RSLAGL,RSLAGS,HNODT,VFAV,VGAV,QXAV,XWTSS(16),  
!      2TSCS(2),TSCL(2),ESCS(2),ESCL(2),CCSS(2),CCSL(2),ROSTLS,ROSTLL,
!      3XFRGAS,HMINC,TST(99),TSTOP(99),AINTP(99),BINTP(99),DRATIO(999),
!      4XBCN(999),XDCN(999),XBLT(15),ADEC(99),BDEC(99),APOUR(16,99),
!      5BPOUR(16,99),XWTC(14),BWIDTH,THCKCV,TMBOIL,TEBOIL,VFINT,ANGFAN,
!      6ALPMAX,THSHL,XFCABL,XNDMIN,DVMX,DAVMX,DEAVMX,DEMX,TDC,QDCU,QDCUO2,
!      7TSINJ,EINJ,DTINJ,TKINJ,ROEV,CPINJ,SURFT,VSINJ,EMINJ,TSINJO,EINJO,
!      8DTINJO,TKINJO,ROEVO,CPINJO,SURFTO,VSINJO,EMINJO,XLEADE,ARSUM,
!      9DBUBOX,UTRISE,TREMSH,DJET,DFALL,WEBER,FROUDE,XPSAITO,XPEPSTN,
!      1FRAG,XMBEDT,XMBED(16),XLPENT,XLPENA,UJET,UFALL,HFALL,ERPV,
!      2TJETT(99),DJETT(99),HWATP,XDOTJET,DVMXW,DAVMXW,DEMXW,DEAVMXW,
!      3QJETW,XSTMJF,TINTSJF,ESAT,DRDOOR,DRANL,EI,QDCBUO2,QDCBU,
!      4EBEDS,EBEDB
!       COMMON /WATVARS/FCRUST(999),VLW(999),VLWOLD(999),DWAT(999),
!      1DWATOLD(999),EWAT(999),EWATOLD(999),TWAT(999),CORDDC(999),
!      2DSRDC(999),DHDC(999),TSRDC,TINTDC,HWATB(999),TSURFW(999),XMS(999),
!      3XMST,XINTS,ESRDTW(999),TSRDTW(999),DSRDTW(999),TSRDW,TINTDW,
!      4TWATI,ELDCO(999),ELDCX(999,99),CRDCX(999,99),TIMINJ(999,99),
!      5XDTINJ(999,99),TDTINJ(999,99),ELWATI,XMWAT,XMWATO,XBALW,
!      6HDRY(999),EINTW,XMCT(199),XMCDT(16,999),TMPCDT(999),CMPCDT(999),
!      7FDC(999),FCOV(999),FBED(999),FHEAT(999),XFACJ(999),
!      8XMBEDJ(16,999),XMBEDJT(999),PBED,QBED(999),QWATER(999),
!      9QSURFACE(999),QWATERT(999),HBED(999),POROSBED,XMCRDT(16,999),
!      1XMCRT(999),XMBDINT(999),XMT(999)
!       COMMON/PROPB/CPBM(999),FKB(999,999),DENB(999,999),DTDEB(999,999),
!      1EMIBM(999),DENCRS(999),ENCRS(999),FKRF(999),DENRF(999),CPRF(999) 
!       COMMON/PROPM/DTDEM(999),CPMLT(999),FKMLT(999),DENMLT(999),
!      1SIGMLT(999),UMMLT(999),EMIMLT(999)      
!       COMMON/BASPR/ HBMT(999,999,16),HBMOLD(999,999,16)
!       DATA TREF /298.15/
!       DATA HMINCQ/0.005/
! C...................................................................... 
! C.....FIRST CALCULATE OXIDATION ENERGY FLUX IN MELT. 
!       DO 6044 KDR=1,NUMNOD      
!       IF(NADAB.EQ.1.OR.NACTIV(KDR).EQ.0) GO TO 6045
!       IF(HTOT(KDR).LE.0.D0) GO TO 6045
!       IF(HITE(1,KDR).LE.0.D0) GO TO 6038  
!       CALL INDEX(1,IPRS)
!       GZH2O=(FMMOL(IPRS)*QZRH2O)/XZRMRE   
!       GZCO2=(FMMOL(IPRS)*QZRCO2)/XZRMRE   
!       GO TO 6039      
!  6038 CONTINUE
!       GZH2O=0.D0      
!       GZCO2=0.D0      
!  6039 CONTINUE
!       IF(HITE(2,KDR).LE.0.D0) GO TO 6040  
!       IF(HITE(1,KDR).GT.0.D0) GO TO 6040  
!       IF(HITE(3,KDR).GT.0.D0) GO TO 6040  
!       CALL INDEX(2,IPRS)
!       GFH2O=(FMMOL(IPRS)*QFEH2O)/XFEMRE   
!       GFCO2=0.D0      
!       GO TO 6041      
!  6040 CONTINUE
!       GFH2O=0.D0      
!       GFCO2=0.D0      
!  6041 CONTINUE
!       IF(HITE(3,KDR).LE.0.D0) GO TO 6042  
!       IF(HITE(1,KDR).GT.0.D0) GO TO 6042  
!       CALL INDEX(3,IPRS)
!       GCH2O=(FMMOL(IPRS)*QCRH2O)/XCRMRE   
!       GCCO2=(FMMOL(IPRS)*QCRCO2)/XCRMRE   
!       GO TO 6043      
!  6042 CONTINUE
!       GCH2O=0.D0      
!       GCCO2=0.D0      
!  6043 CONTINUE
!       TSEND=TEMP(1,KDR)
!       IF(TSEND.GT.TCS) TSEND=TCS
!       DBSEND=DMIN1(HTOT(KDR),DBUBOX)      
!       DBSEND=DMAX1(HMINC,DBSEND)
!       CALL OXID(PDRYWL,TSEND,TBULK(KDR),DBSEND,HTOT(KDR),UTRISE,OXH2O,OX
!      1CO2)  
!       TILH2O=(OXH2O*(GZH2O+GFH2O+GCH2O))/XMH2O      
!       TILCO2=(OXCO2*(GZCO2+GFCO2+GCCO2))/XMCO2      
!       QOXT(KDR)=TILH2O*(SMFLX(1,KDR)+SMFLX(2,KDR))+TILCO2*(SMFLX(3,KDR)+
!      1SMFLX(4,KDR))   
!       GO TO 6044      
!  6045 CONTINUE
!       QOXT(KDR)=0.D0  
!  6044 CONTINUE
! C...................................................................... 
! C.....CALCULATE MELT-TO-BASEMAT AND MELT-TO-WATER OR ATMOSPHERE HEAT    
! C.....FLUXES.
!       SUMT=0.D0
!       SUMA=0.D0
!       SUMB=0.D0
!       SUMF=0.D0
!       SUMJG=0.D0      
!       SUMVF=0.D0      
!       SUMOX=0.D0      
!       DO 4960 KN=1,NUMNOD
!       IF(NACTIV(KN).EQ.0.OR.NADAB.EQ.1) GO TO 4960      
!       IF(HTOT(KN).GT.0.D0) GO TO 4961     
!       QFLUXT(KN)=0.D0 
!       QFLUXB(KN)=0.D0 
!       GO TO 4960      
!  4961 CONTINUE
! C.....ASSIGN BASEMAT SURFACE TEMPERATURE. 
!       GO TO(61,62,62,63,63,62,62,62,62),NBCINT(KN)  
!    61 CONTINUE
!       TEVAL=TEMP(1,KN)
!       GO TO 65
!    62 CONTINUE
!       TEVAL=TFZX(KN)  
!       GO TO 65
!    63 CONTINUE
!       TEVAL=TFZC(KN)  
!    65 CONTINUE
!       SUMA=SUMA+AREA(KN)
!       HEFFW=FCRUST(KN)*HTCFT(KN)
!       IF(NWAT.EQ.2) HEFFW=DMAX1(HEFFW,HDRY(KN))
!       QFLUXT(KN)=HEFFW*(TBULK(KN)-TATMS(KN))    
!       QFLUXB(KN)=HTCOEF(KN)*(TBULK(KN)-TEVAL)
!       SUMB=SUMB+QFLUXB(KN)*AREA(KN)
!       SUMT=SUMT+QFLUXT(KN)*AREA(KN)
!       SUMF=SUMF+(SMFLX(1,KN)+SMFLX(2,KN)+SMFLX(3,KN)+SMFLX(4,KN))*AREA(K
!      1N)    
!       SUMJG=SUMJG+VGJ(KN)*AREA(KN)
!       SUMVF=SUMVF+VOID(KN)*AREA(KN)
!       SUMOX=SUMOX+QOXT(KN)*AREA(KN)
!  4960 CONTINUE
!       IF(SUMA.GT.0.D0) GO TO 4962
!       QFLXT=0.D0      
!       QFLXB=0.D0      
!       XMFLXA=0.D0     
!       VFAV=0.D0
!       VGAV=0.D0
!       QXAV=0.D0
!       GO TO 4963      
!  4962 CONTINUE
!       QFLXT=SUMT/SUMA 
!       QFLXB=SUMB/SUMA 
!       XMFLXA=SUMF/SUMA
!       VFAV=SUMVF/SUMA 
!       VGAV=SUMJG/SUMA 
!       QXAV=SUMOX/SUMA 
!  4963 CONTINUE 
! C......................................................................
! C.....NOW CALCULATE MELT AND SOLIDFIED DEBRIS MASS DISRIBUTION 
! C.....FUNCTIONS.  THIS INCLUDES UPDATING OF FUNCTIONS THAT ARE USED 
! C.....TO DEFINE INPUT TO CORQUENCH.
!       DO 7201 KH=1,NUMNOD
!       XFRMX(KH)=0.D0
!       XFROX(KH)=0.D0
!       XFRTX(KH)=0.D0
!       XMLMX(KH)=0.D0
!       XMLOX(KH)=0.D0
!       XMLTX(KH)=0.D0
!       XTOTX(KH)=0.D0
!       XMCT(KH)=0.D0
!       XMT(KH)=0.E0
!       XMCRT(KH)=0.D0
!       DO 7199 KT=1,16
!       XMCDT(KT,KH)=0.D0
!       XMCRDT(KT,KH)=0.D0
!  7199 CONTINUE
!  7201 CONTINUE
!       DO 7202 KH=1,NUMNOD
! C.....NOW DETERMINE THE MASS DISTRIBUTION FUNCTIONS...
!       SUMMM=0.D0
!       SUMOM=0.D0
!       SUMMF=0.D0
!       SUMOF=0.D0
!       IF(NACTIV(KH).EQ.0.OR.NADAB.EQ.1) GO TO 7206
!       DO 7203 KTP=1,16
!       CALL INDEX(KTP,KJ)
!       RFAC=ROMLIQ(KJ)   
!       IF(KTP.EQ.16) RFAC=ROC*RSLAGL    
!       RFACS=ROM(KJ)
!       IF(KTP.EQ.16) RFACS=ROC*RSLAGS
!       XINCM=RFAC*HITE(KTP,KH)*AREA(KH)*FLOAT(NDOOR)   
!       XINCF=0.D0
!       DO 7204 KV=1,NODES(KH)
!       IF(NTYPMT(KV,KH).LE.3) GO TO 7204
!       XINCF=XINCF+RFACS*HBMT(KV,KH,KTP)*AREA(KH)*FLOAT(NDOOR)   
!  7204 CONTINUE   
! C.....ADD MELT, FROZEN DEBRIS, AND BED MASSES AS APPROPRIATE
! C.....TO GET TOTAL MASS AT NODE SITE
!       XMCDT(KTP,KH)=XINCF+XINCM
!       XMCT(KH)=XMCT(KH)+XMCDT(KTP,KH)
!       XMT(KH)=XMCT(KH)
!       IF(KTP.GE.8) GO TO 7205
!       SUMMM=SUMMM+XINCM
!       SUMMF=SUMMF+XINCF
!       GO TO 7203
!  7205 CONTINUE
!       SUMOM=SUMOM+XINCM
!       SUMOF=SUMOF+XINCF
!  7203 CONTINUE
!       IF(KH.GT.1) GO TO 7206 
!       XMLMX(KH)=SUMMM
!       XFRMX(KH)=SUMMF
!       XMLOX(KH)=SUMOM
!       XFROX(KH)=SUMOF
!       GO TO 7207
!  7206 CONTINUE
!       XMLMX(KH)=XMLMX(KH-1)+SUMMM
!       XFRMX(KH)=XFRMX(KH-1)+SUMMF
!       XMLOX(KH)=XMLOX(KH-1)+SUMOM
!       XFROX(KH)=XFROX(KH-1)+SUMOF
!  7207 CONTINUE
!       XMLTX(KH)=XMLMX(KH)+XMLOX(KH)
!       XFRTX(KH)=XFRMX(KH)+XFROX(KH)+XMBDINT(KH)
!       XTOTX(KH)=XMLTX(KH)+XFRTX(KH)
!       IF(NACTIV(KH).EQ.0.OR.NADAB.EQ.1) GO TO 7202
!       IF(IFINISH.EQ.0) GO TO 7202
! C.....AT THE END OF THE RUN, CALCULATE DATA NEEDED TO PREPARE AN INPUT
! C.....FILE FOR A FOLLOW-ON CORQUENCH CALCULATION.  FIRST CALCULATE THE
! C.....THERMAL EQUILIBRIUM TEMPERATURE OF CORE DEBRIS AT THE NODE SITES
! C.....DEPENDING UPON MODELING ASSUMPTIONS.
!       ENMLT=0.D0
!       IF(HTOT(KH).GT.0.D0) ENMLT=DENMLT(KH)*HTOT(KH)*AREA(KH)*ENBLK(KH)
!       ENTHEV=0.D0
!       IF(XMBEDT.LE.0.D0) GO TO 4762
!       IF(NBEDCQ.EQ.0) GO TO 4762
!       ENTHEV=EBEDS
!       IF(DWAT(KH).LE.0.D0) ENTHEV=EBEDB
!       IF(NJET.EQ.2.AND.NBEDCQ.EQ.1) ENBED=XMBEDJT(KH)*ENTHEV
!  4762 CONTINUE
!       ENFRZ=0.D0
!       DO 7198 KV=1,NODES(KH)
!       IF(NTYPMT(KV,KH).LE.3) GO TO 7198
!       XLNGTH=XDIST(KV,KH)
!       IF(KV.EQ.1.AND.NBCINT(KH).GT.3) XLNGTH=ZABLAT(KH) 
!       ENFRZ=ENFRZ+DENB(KV,KH)*XLNGTH*AREA(KH)*FLOAT(NDOOR)*ENTHP(KV,KH)
!  7198 CONTINUE
!       ENHOMOG=0.D0
!       XMHOMOG=XMCT(KH)
!       IF(NBEDCQ.EQ.0.OR.NJET.LT.2) GO TO 9781
!       XMHOMOG=XMHOMOG+XMBEDJT(KH)
!  9781 CONTINUE
!       IF(XMHOMOG.GT.0.D0) ENHOMOG=(ENMLT+ENBED+ENFRZ)/XMHOMOG
! C.....NOW SEE IF THERE IS A PARTICLE BED AND IF IT IS TO BE RETAINED AS 
! C.....A SEPARATE ELEMENT.  IF NOT, RECOMBINE THE PARTICLE BED WITH 
! C.....THE UNDERLYING DEBRIS BEFORE CALCULATING THE RESULTANT DEBRIS
! C.....EQUILIBRIUM TEMPERATURE.
!       IF(NBEDCQ.EQ.0.OR.NJET.LT.2) GO TO 8178
!       DO 9199 KT=1,16
!       XMCDT(KT,KH)=XMCDT(KT,KH)+XMBEDJ(KT,KH)
!       XMCT(KH)=XMCT(KH)+XMBEDJ(KTP,KH)
!       XMT(KH)=XMCT(KH)
!       XMBEDJ(KT,KH)=0.D0
!  9199 CONTINUE
!  8178 CONTINUE
! C.....NOW GET CORE DEBRIS THERMAL EQUILIBRIUM TEMPERATURE DEPENDING
! C.....UPON FINAL MELT CONSTITUENCY. 
!       DO 4536 KTP=1,28
!       HSEND(KTP)=0.D0 
!  4536 CONTINUE
!       VTOT=0.D0
!       VMET=0.D0
!       DO 4538 KTP=1,15
!       CALL INDEX(KTP,KJ)
!       HSEND(KJ)=XMCDT(KTP,KH)/ROMLIQ(KJ)
!       VTOT=VTOT+HSEND(KJ)
!       IF(KTP.LE.7) VMET=VMET+HSEND(KJ)
!  4538 CONTINUE
!       HSEND(10)=(WPCS*XMCDT(16,KH))/ROMLIQ(ISIO2)
!       HSEND(11)=(WPCC*XMCDT(16,KH))/ROMLIQ(ICAO)    
!       HSEND(12)=(WPM*XMCDT(16,KH))/ROMLIQ(IMGO)     
!       HSEND(13)=(WPA*XMCDT(16,KH))/ROMLIQ(IAL2O3)   
!       VTOT=VTOT+HSEND(10)+HSEND(11)+HSEND(12)+HSEND(13)
!       CALL TEF(ENHOMOG,HSEND,TMPCDT(KH),DTDE)    
!       CMPCDT(KH)=1.D0/DTDE
! C.....NOW, IF PARTICLE BED IS TO BE RETAINED AS PART OF CORQUENCH INPUT, 
! C.....SPLIT THE CORE DEBRIS LAYER INTO 'MELT' AND 'CRUST' ZONES WHERE BED
! C.....EXISTS.  OTHERWISE, CORQUENCH WILL PUT THE BED BACK INTO THE MELT IF 
! C.....THERE IS NO CRUST...
!       IF(NJET.LE.1.OR.NBEDCQ.EQ.1) GO TO 7202
!       IF(XMBEDJT(KH).LE.0.D0) GO TO 7202
!       DENMCT=XMCT(KH)/VTOT
!       CALL CONDF(TMPCDT(KH),HSEND,FKO,FKM,FKMCT)   
!       TFRZ=TFOS
!       IF(VMET/VTOT.GT.0.5) TFRZ=TFMS
!       CALL CONWAT(TSAT,KL,PL,CL,UL,HLV,EWL,EWV,CWV,SIGMA,PDRYWL)
!       TOUTER=TSAT
!       IF(DWAT(KH).LE.0.D0) TOUTER=TBOUND
!       QHFLUXEV=HTCFT(KH)*(TBULK(KH)-TATMS(KH))
!       IF(HTOT(KH).GT.0.D0) GO TO 4788
!       TOUTER=TBOUND
!       QHFLUXEV=HTCOEF(KH)*(TSURFW(KH)-TARGB(KH))
!  4788 CONTINUE   
!       DCRST=0.D0
!       IF(QHFLUXEV.GT.0.D0) DCRST=(FKMCT*(TFRZ-TOUTER))/QHFLUXEV
!       XMCRUST=DENMCT*AREA(KH)*DCRST
!       XMMELT=XMCT(KH)-XMCRUST
!       XMELTMN=DENMCT*HMINCQ*AREA(KH)
!       IF(XMMELT.GE.XMELTMN) GO TO 8203
!       XMMELT=XMELTMN
!       XMCRUST=XMCT(KH)-XMMELT
!  8203 CONTINUE
!       DO 8199 KT=1,16
!       FACTOR=XMCDT(KT,KH)/XMCT(KH)
!       XMCRDT(KT,KH)=FACTOR*XMCRUST
!       XMCDT(KT,KH)=FACTOR*XMMELT
!  8199 CONTINUE
!       XMCRT(KH)=XMCRUST
!       XMCT(KH)=XMMELT
!  7202 CONTINUE
!       RETURN
!       END
! C...................................................................... 
! C.....SUBROUTINE WATERCLC SOLVES THE 1-D CONSERVATION OF MASS, MOMENTUM,
! C.....AND ENERGY EQUATIONS FOR THE WATER LAYER ON THE PEDSTAL FLOOR 
! C.....OVER TEH CORE DEBRIS, INCLUDING THE POSSIBILITY OF WATER FLOW 
! C.....INTO DOWNCOMERS.
! C...................................................................... 
!       SUBROUTINE WATERCLC
!       IMPLICIT DOUBLE PRECISION(A-H,O-Z)
!       REAL(8) KL
!       DIMENSION A(999),B(999),C(999),D(999),P(999),Q(999),DELVLW(999)
!       DIMENSION DWATSV(999),DSRDTN(999),DDWAT(999),DEWAT(999)
!       DIMENSION XSEND(999),YSEND(999),ZSEND(999)
!       COMMON /WATVARS/FCRUST(999),VLW(999),VLWOLD(999),DWAT(999),
!      1DWATOLD(999),EWAT(999),EWATOLD(999),TWAT(999),CORDDC(999),
!      2DSRDC(999),DHDC(999),TSRDC,TINTDC,HWATB(999),TSURFW(999),XMS(999),
!      3XMST,XINTS,ESRDTW(999),TSRDTW(999),DSRDTW(999),TSRDW,TINTDW,
!      4TWATI,ELDCO(999),ELDCX(999,99),CRDCX(999,99),TIMINJ(999,99),
!      5XDTINJ(999,99),TDTINJ(999,99),ELWATI,XMWAT,XMWATO,XBALW,
!      6HDRY(999),EINTW,XMCT(199),XMCDT(16,999),TMPCDT(999),CMPCDT(999),
!      7FDC(999),FCOV(999),FBED(999),FHEAT(999),XFACJ(999),
!      8XMBEDJ(16,999),XMBEDJT(999),PBED,QBED(999),QWATER(999),
!      9QSURFACE(999),QWATERT(999),HBED(999),POROSBED,XMCRDT(16,999),
!      1XMCRT(999),XMBDINT(999),XMT(999)
!       COMMON /WATINT/NDOWNC,NDC(999),NPTDC(999),NINJ,NINJP(999),
!      1NPTINJ(999)
!       COMMON/CATCHI/NUMS(4,999),NUMOLD(4,999),NTRACK(16),NSUMP(999),
!      1NPASSG(999),NCRSTM(999),NCRRT(999),NPASS(999),NBURN,NBURNO     
!       COMMON/PRINTB/ELEVAT(999),ELOLD(999),XDIST(999,999),XBTW(999,999),
!      1TEMP(999,999),ENTHP(999,999),EOLD(999,999),ENBLK(999),EBKOLD(999),
!      2TBULK(999),HITE(16,999),HITOLD(16,999),HTOT(999),HTOLD(999),
!      3HTCFT(999),HTCOEF(999),QFLUXT(999),QFLUXB(999),VEL(999),ELO(999),
!      4VELOLD(999),SRSCOR(16),AREA(999),RAD(999),ARC(999),VOLCN(16),
!      5VOID(999),VGJ(999),ZABLAT(999),ZABOLD(999),DCRUST(999),
!      6DCROLD(999),DABCON(999),DABOLD(999),DFILMT(999),DFOLT(999),
!      7SMFLX(4,999),XLSMF(4,999),TOTVOL,XFACMS(999),XMFLXA,XMCORT,
!      8VCORT,TOTOX,TOTMET,QFLXT,QFLXB,TIME,DTIME,XMCOR(16),VCOR(16),
!      9TCONI,RSAND,HDOWNC,TBOUND,EMISCN,PDRYWL,XDISTO(999),QOXT(999),
!      1XLENSH,XBTWO(999),RCOMP,WDOOR,RSUMP,RSHELL,RPED,TPED,ELSMP,
!      1TENDP(10,999),TFRZSH,TDEBRS,TKDEBR,PDEBR,CPDEBR,ENENDP(10,999),
!      2ENOLDP(10,999),DXVERT,DXSNK,XDSTE(10,999),XBTE(10,999),HXLA(999),
!      3HXLB(999),TSFEB(999),DCRS(999),DCRSLD(999),HCRS(16,999),
!      4HCRSLD(16,999),THETE0(10,999),THETE1(10,999),QSHELL,QSHELE,TSHELI,
!      5SIGOXE(999),FKOXE(999),RINJC,XLSEC,ANGSEC,ANINJC,XLCHAN,WCHNL,
!      6TEFZX(999),TIMSPC(999),DXNODE(999),TNORM(999),FRCSOL(999),
!      7ALPSPR(999),CRAMCON,HINTF,TSHLMX,XFRMX(999),XFROX(999),XFRTX(999),
!      8XMLMX(999),XMLOX(999),XMLTX(999),XTOTX(999),TIMEO,TMAX,EDOWN(999),
!      9HCP(999)
!       COMMON/PRINTR/ QFEH2O,QCRH2O,QZRH2O,QFECO2,QCRCO2,QZRCO2,
!      4XFH2OU,XFCAOH,XFMGCA,XFCACO,XZRMRE,XFEMRE,XCRMRE,XZRORE,XFEORE,   
!      5XCRORE,XMH2O,XMCO2,XMCACO,XMMGCA,XMCAOH,TFWL,TFWS,TBWL,TBWS,      
!      6TMCAL,TMCAS,TCAL,TCAS,TFOS,TFOL,TFMS,TFML,XVISC(28),SVISC(28),    
!      7XMOL(28),FMMOL(28),ROM(28),ROMLIQ(28),AEQM(28,2),BEQM(28,2),
!      8CEQM(28,2),ECL,ECS,ECAL,ECAS,EMCAL,EMCAS,EBWL,EBWS,EFWL,EFWS,    
!      9STEF,GRAV,PI,TCS,TCL,CCL,CCS,RMASSL,WPCC,WPM,WPA,WPCS,ROC,RMASSS,   
!      1ANGSHL,RSLAGL,RSLAGS,HNODT,VFAV,VGAV,QXAV,XWTSS(16),  
!      2TSCS(2),TSCL(2),ESCS(2),ESCL(2),CCSS(2),CCSL(2),ROSTLS,ROSTLL,
!      3XFRGAS,HMINC,TST(99),TSTOP(99),AINTP(99),BINTP(99),DRATIO(999),
!      4XBCN(999),XDCN(999),XBLT(15),ADEC(99),BDEC(99),APOUR(16,99),
!      5BPOUR(16,99),XWTC(14),BWIDTH,THCKCV,TMBOIL,TEBOIL,VFINT,ANGFAN,
!      6ALPMAX,THSHL,XFCABL,XNDMIN,DVMX,DAVMX,DEAVMX,DEMX,TDC,QDCU,QDCUO2,
!      7TSINJ,EINJ,DTINJ,TKINJ,ROEV,CPINJ,SURFT,VSINJ,EMINJ,TSINJO,EINJO,
!      8DTINJO,TKINJO,ROEVO,CPINJO,SURFTO,VSINJO,EMINJO,XLEADE,ARSUM,
!      9DBUBOX,UTRISE,TREMSH,DJET,DFALL,WEBER,FROUDE,XPSAITO,XPEPSTN,
!      1FRAG,XMBEDT,XMBED(16),XLPENT,XLPENA,UJET,UFALL,HFALL,ERPV,
!      2TJETT(99),DJETT(99),HWATP,XDOTJET,DVMXW,DAVMXW,DEMXW,DEAVMXW,
!      3QJETW,XSTMJF,TINTSJF,ESAT,DRDOOR,DRANL,EI,QDCBUO2,QDCBU,
!      4EBEDS,EBEDB
!       COMMON/PROPI/ NMATC,NMATFI,NMATFF,ICAOH2,ICACO3,IMCCO3,IFH2O,     
!      1IVH2O,ICK2O,IVK2O,INA2O,ITIO2,ISIO2,ICAO,IMGO,IAL2O3,IFEO,IFE2O3, 
!      2IFE3O4,IFE,ICR,INI,IZR,IU,IB4C,IB,ICR2O3,INIO,IUO2,IZRO2,IB2O3,   
!      3NBCINT(999),NODES(999),NUMNOD,IMOX(28),IBAS,ILCS,ILL,NACTIV(999),     
!      4NBFRZM,NBFRZO,NABLFM,NDRNFM,NTYPMT(999,999),NDOOR,NBMADJ,NUMSHV,   
!      5NBSHL(999),NCRSTS(999),NUMSHH,NSKIPE,NACSH,NWAT,NPEND,NBCBOT,
!      6NCRTOP,NBFZOE,NBFZME,NGEOM,NL(999,999),NFRSCT,NLOGSH,NADAB,NINVIS,
!      7NSIMST,NSTEEL,NOVHT,NOVTK,NOVUM,NOVEM,NOVSIG,NPLLOC(999),NBPL,
!      8IXP(999),IYP(999),NVTPE,NSOLTP,NSOLF,NINTF,IFLGA(999),ICTYPE,ICTC,
!      9NPOURS,NSMP,NPED,NDOR,NSHL,NANULS,NSMPCV,NBOIL,NSWALL,NMVER,
!      1NCRTEM,NTHINC,NVELP,NITMAX,NENMAX,NPRINT,NPFREQ,NTIMSPC,NPLFREQ,
!      2NPLTOT,NJET,NJETP,NJETD,NJETND,NODCAP,NVELPW,NITMAXW,NENMXW,
!      3IFLGJ(999),NBEDCQ,ISHELE
!       DATA TREF /273.15D0/
!       DATA RCOR /0.01D0/
!       DATA DFILM /1.D-08/
!       DATA ZERO /0.0D0/
! C.....BYPASS THIS ROUTINE IF DETAILED WATER INVENTORY MODEL IS NOT USED.
!       IF(NWAT.LT.2) GO TO 1000
! C.....FIRST INITIALIZE AND CALCULATE DATA THAT IS ASSUMED TO BE 
! C.....CONSTANT OVER THE OVERALL INTEGRATION TIMESTEP, INCLUDING THE 
! C.....LOCAL WATER INJECTION FLOWRATE INTO THE MESH.
!       CALL CONWAT(TSAT,KL,PL,CL,UL,HLV,EWL,EWV,CWV,SIGMA,PDRYWL)
!       RECON=PL/UL
!       HMINW=DSQRT((2.D0*SIGMA)/(GRAV*PL))
!       TSRDW=0.D0
!       IF(NINJ.EQ.0) GO TO 25
!       DO 15 K=1,NINJ
!       KR=NINJP(K)
!       DO 20 L=1,NPTINJ(K)
!       XSEND(L)=TIMINJ(K,L)
!       YSEND(L)=XDTINJ(K,L)
!       ZSEND(L)=TDTINJ(K,L)
!    20 CONTINUE
!       CALL INTERP(3,NPTINJ(K),TIME,XSEND,YSEND,DSRDTW(KR))
!       CALL INTERP(4,NPTINJ(K),TIME,XSEND,ZSEND,TSRDTW(KR))
!       CALL TWENTH(ESRDTW(KR),TSRDTW(KR),PDRYWL,DTDE)
!       TSRDW=TSRDW+DSRDTW(KR)
!    15 CONTINUE
!    25 CONTINUE
!       TINTDW=TINTDW+TSRDW*DTIME
! C.....UPDATE STEAMING RATES FOR NODES WITH WATER PRESENT AT THE START
! C.....OF THE TIMESTEP.
!       NEST=1
!       CALL STEAMER(NEST) 
! C.....NOW CHECK TO SEE IF WATER IS ON THE FLOOR OR IF IT IS BEING 
! C.....INJECTED, OTHERWISE BYPASS THIS ROUTINE.
!       IF(TSRDW.LE.0.D0.AND.XMWAT.LE.0.D0) GO TO 1000
! C...................................................................... 
! C.....GIVEN THE WATER TEMPERATURE AND DEPTH PROFILES, SOLVE THE 
! C.....CONSERVATION OF MASS, MOMENTUM AND ENERGY EQUATIONS FOR THE 
! C.....UPDATED VELOCITY, HEIGHT, AND TEMPERATURE PROFILES. 
!       DTVEL=DTIME/FLOAT(NVELPW)  
! C.....FIRST SAVE BEGINNING OF TIMESTEP WATER DEPTHS, AND ZERO OUT 
! C.....ENTHALPY AND DEPTH INCREMENTS FROM PREVIOUS TIMESTEP.
!       DO 882 K=1,NUMNOD
!       DWATSV(K)=DWATOLD(K)
!       DELVLW(K)=0.D0
!       DDWAT(K)=0.D0
!   882 CONTINUE
! C.....INNER DO LOOP FOR VELOCITY CALULATION SUB-TIMESTEP.
!       DO 2231 KITV=1,NVELPW      
!       IF(KITV.EQ.1) GO TO 2232  
!       DO 2233 KSV=1,NUMNOD      
!       VLWOLD(KSV)=VLW(KSV)      
!       DWATOLD(KSV)=DWAT(KSV)     
!  2233 CONTINUE
!       VLWOLD(NUMNOD+1)=VLW(NUMNOD+1)      
!  2232 CONTINUE
! C.....BEFORE ENTERING LOOP CALCULATE CORD LENGTH AND CURRENT FLOWRATE
! C.....INTO ANY DOWNCOMERS THAT ARE PRESENT.
!       IF(NDOWNC.EQ.0) GO TO 35
!       DO 45 K=1,NDOWNC
!       KR=NDC(K)
!       CORDDC(KR)=0.D0
!       DSRDC(KR)=0.D0
!       DHDC(KR)=0.D0 
!       HTPBCFX=HTOT(KR)+ELEVAT(KR)
!       HEVAL=DWAT(KR)+HTPBCFX
!       IF(HEVAL.LE.ELDCO(KR)) GO TO 45
!       DHDC(KR)=DMIN1(HEVAL-ELDCO(KR),HEVAL-HTPBCFX)
!       DO 30 L=1,NPTDC(K)
!       XSEND(L)=ELDCX(K,L)
!       YSEND(L)=CRDCX(K,L)
!    30 CONTINUE
!       CALL INTERP(2,NPTDC(K),HEVAL,XSEND,YSEND,CORDDC(KR))
!       DSRDC(KR)=PL*DSQRT(2.D0*GRAV)*CORDDC(KR)*DHDC(KR)**1.5D0
!    45 CONTINUE
!    35 CONTINUE
! C.....FINALLY, UPDATE NET WATER VOLUMETRIC INFLUX INTO NODES
! C.....GIVEN THE INJECTION RATE & POSSIBLE STEAMING/DOWNCOMER FLOWS.
!       DO 989 K=1,NUMNOD
!       DSRDTN(K)=(DSRDTW(K)-DSRDC(K)-XMS(K))/PL
!   989 CONTINUE
! C.....INNER ITERATION LOOP POINT FOR CELL VELOCITY/HEIGHT 
! C.....STARTS HERE.
!       NITER=0
!  2711 CONTINUE
! C.....ITERATION LOOP POINT FOR CELL VELOCITY/HEIGHT DETERMINATION...
!       NITER=NITER+1   
!       IF(NITER.GT.NITMAXW) WRITE(2,*) 'WARNING: WATER VELOCITY CONV. FAI
!      1LED, T=',TIME
!       IF(NITER.GT.NITMAXW) GO TO 2712      
! C.....NOW SOLVE THE TDMA PROBLEM FOR THE NEW CELL EDGE VELOCITIES.
!       NUP=NUMNOD+1    
!       DO 5001 K=1,NUP 
!       IF(K.EQ.1) GO TO 6013     
!       IF(K.EQ.NUP) GO TO 6013   
!       GO TO 6014      
!  6013 CONTINUE
!       A(K)=1.D0
!       B(K)=0.D0
!       C(K)=0.D0
!       D(K)=0.D0
!       GO TO 5001      
!  6014 CONTINUE
! C.....FIRST CHECK TO SEE IF THE NODE IS CAPPED IN HEIGHT, IF SO HAS IT
! C.....FROZEN SHUT, AND IN THAT CASE ROUTE TO LOCATION WHERE VELOCITY 
! C.....IS ZEROED AT CELL BOUNDARY. 
!       IF(HCP(K-1)-ELEVAT(K-1)-HTOT(K-1).LE.0.D0) GO TO 5002
!       IF(HCP(K)-ELEVAT(K)-HTOT(K).LE.0.D0) GO TO 5002
! C.....FLOW OPENING EXISTS, SO PROCEED.
!       HMJ=HMINW
!       HMJM1=HMINW     
!       HAJP1=0.D0      
!       IF(K.LE.NUMNOD-1) HAJP1=DWAT(K+1)   
!       HAJ=DWAT(K)     
!       HAJM1=DWAT(K-1) 
!       HAJM2=0.D0      
!       IF(K.GT.2) HAJM2=DWAT(K-2)
!       VJM32=VLW(K-1)  
!       VJM12=VLW(K)    
!       VJP12=VLW(K+1)  
!       ACJM32=ARC(K-1) 
!       ACJM12=ARC(K)   
!       ACJP12=ARC(K+1) 
!       SNJM32=1.D0     
!       IF(VLW(K-1).LT.0.D0) SNJM32=-1.D0   
!       SNJM12=1.D0     
!       IF(VLW(K).LT.0.D0) SNJM12=-1.D0     
!       SNJP12=1.D0     
!       IF(VLW(K+1).LT.0.D0) SNJP12=-1.D0   
! C.....EVALUATE FRICTION COEFFICIENT.      
!       HTFRC=0.5*(DWATOLD(K-1)+DWATOLD(K))
!       IF(HTFRC.LT.HMINW) HTFRC=HMINW      
!       IF(DWATOLD(K-1).GT.0.D0.OR.DWATOLD(K).GT.0.D0) GO TO 2693   
!       FRFAC=0.D0      
!       GO TO 2694      
!  2693 CONTINUE
!       DHJMIN=4.D0*HMINW
!       DHJM1=2.D0*(DWATOLD(K-1)+DWATOLD(K))
!       DHJM1=DMAX1(DHJM1,DHJMIN)
!       VELJM1=ABS(VLW(K))
!       REJM1=DHJM1*VELJM1*RECON
!       RSEND=RSAND
!       IF(NACTIV(K-1).EQ.1.OR.NACTIV(K).EQ.1) RSEND=RCOR
!       CALL FRCCF(DHJM1,REJM1,RSEND,FRCJM1)
!       FRFAC=(FRCJM1*(DXNODE(K)+DXNODE(K-1)))/HTFRC
!  2694 CONTINUE
!       W1=DSRDTN(K)+ACJM12*HAJM1*DMAX1(VJM12,0.D0)+ACJP12*HAJP1*DMAX1(-VJ
!      1P12,0.D0)-ACJM12*HAJ*DMAX1(-VJM12,0.D0)-ACJP12*HAJ*DMAX1(VJP12,0.D
!      20)     
!       AAJ=(W1*DTVEL)/AREA(K)    
!       W2=DSRDTN(K-1)+ACJM32*HAJM2*DMAX1(VJM32,0.D0)+ACJM12*HAJ*DMAX1(-VJ
!      1M12,0.D0)-ACJM32*HAJM1*DMAX1(-VJM32,0.D0)-ACJM12*HAJM1*DMAX1(VJM12
!      2,0.D0) 
!       AAJM1=(W2*DTVEL)/AREA(K-1)
!       HTGJ=DWATOLD(K)+AAJ
!       HTJR=HTGJ-HMJ   
!       HTJR=DMAX1(HTJR,0.D0)     
!       HTGJM1=DWATOLD(K-1)+AAJM1  
!       HTJM1R=HTGJM1-HMJM1
!       HTJM1R=DMAX1(HTJM1R,0.D0) 
!       IF(HTGJ.GT.0.D0.AND.HTGJM1.GT.0.D0) GO TO 8939
!       IF(HTJM1R.LE.0.D0.AND.HTJR.LE.0.D0) GO TO 5002
!  8939 CONTINUE
!       HTVJM1=HTGJM1+ELEVAT(K-1)+HTOT(K-1)
!       HTVJ=HTGJ+ELEVAT(K)+HTOT(K)
!       DELHT=HTVJ-HTVJM1
!       IF(NSUMP(K).EQ.1) GO TO 4525
!       GO TO 5004      
!  4525 CONTINUE
!       HSMPCOMP=HTGJM1+ELEVAT(K-1)+HTOT(K-1)
!       IF(HSMPCOMP.GT.ELEVAT(K)+HTOT(K)) GO TO 5004  
!       IF(HTJR.LE.0.D0) GO TO 5002
!       DELHT=HTJR
!       GO TO 5004      
!  5002 CONTINUE
!       A(K)=1.D0
!       B(K)=0.D0
!       C(K)=0.D0
!       D(K)=-VLW(K)    
!       GO TO 5001      
!  5004 CONTINUE
! C.....CALCULATE TDMA ELEMENTS FOR CASES IN WHICH THERE IS FLOW ACROSS   
! C.....THE CELL BOUNDARIES.      
!       W3=HAJM1*DMAX1(SNJM12,0.D0)-HAJ*DMAX1(-SNJM12,0.D0)     
!       BBJ=(DTVEL*ACJM12*W3)/AREA(K)
!       W4=HAJM2*DMAX1(SNJM32,0.D0)-HAJM1*DMAX1(-SNJM32,0.D0)   
!       BBJM1=(DTVEL*ACJM32*W4)/AREA(K-1)
!       W5=HAJP1*DMAX1(-SNJP12,0.D0)-HAJ*DMAX1(SNJP12,0.D0)     
!       GGJ=(DTVEL*ACJP12*W5)/AREA(K)
!       W6=HAJ*DMAX1(-SNJM12,0.D0)-HAJM1*DMAX1(SNJM12,0.D0)     
!       GGJM1=(DTVEL*ACJM12*W6)/AREA(K-1)
!       DELRJ=DXNODE(K)+DXNODE(K-1)
!       DELXA=DXNODE(K)+DXNODE(K-1)+SNJM12*(DXNODE(K)-DXNODE(K-1))
!       ZWXJ=(DXNODE(K)*(1.D0+SNJM12))/(DELXA*DXNODE(K-1))      
!       EWXJ=(DXNODE(K-1)*(1.D0-SNJM12))/(DELXA*DXNODE(K))      
! C.....EVALUATE THE TDMA COEFFICIENTS.     
!       A(K)=DELRJ/DTVEL+GRAV*(BBJ-GGJM1)+FRFAC*SNJM12*VJM12
!      1+0.5D0*DELRJ*(ZWXJ*(2.D0*VJM12-VJM32)+EWXJ*(VJP12-2.D0*VJM12))    
!       B(K)=-0.5D0*DELRJ*EWXJ*VJM12-GRAV*GGJ   
!       C(K)=0.5D0*DELRJ*ZWXJ*VJM12+GRAV*BBJM1  
!       X1=(DELRJ*(VJM12-VLWOLD(K)))/DTVEL+0.5D0*DELRJ*VJM12*(ZWXJ*(VJM12 
!      1-VJM32)+EWXJ*(VJP12-VJM12))
!       X2=GRAV*DELHT+0.5D0*FRFAC*SNJM12*VJM12*VJM12      
!       D(K)=-(X1+X2)   
!  5001 CONTINUE
! C.....SET UP AND SOLVE THE TDMA PROBLEM FOR THE VELOCITY INCREMENTS.    
!       P(1)=B(1)/A(1)  
!       Q(1)=D(1)/A(1)  
!       DO 5010 KD=2,NUP
!       P(KD)=B(KD)/(A(KD)-C(KD)*P(KD-1))   
!       Q(KD)=(D(KD)+C(KD)*Q(KD-1))/(A(KD)-C(KD)*P(KD-1))
!  5010 CONTINUE
!       DELVLW(NUP)=Q(NUP)
!       DO 5011 KD=1,NUMNOD
!       NARG=NUP-KD     
!       DELVLW(NARG)=P(NARG)*DELVLW(NARG+1)+Q(NARG)   
!  5011 CONTINUE
! C.....CALCULATE NEW VELOCITIES BASED ON VELOCITY INCREMENTS.  
!       DO 5012 KD=1,NUP
!       VLW(KD)=VLW(KD)+DELVLW(KD)
!  5012 CONTINUE
! C.....NOW CHECK MESH TO SEE IF THERE ARE ANY HEIGHT LIMITATIONS ON 
! C.....THE DEBRIS AND ADJUST VELOCITIES TO ACCOUNT ACCORDINGLY.
!       DO 3818 J=1,NUMNOD
!       IF(DWAT(J)+HTOT(J)+ELEVAT(J).LE.HCP(J)) GO TO 3818
!       IF(ELEVAT(J)+HTOT(J).LT.HCP(J)) GO TO 5113
!       VLW(J)=0.D0
!       VLW(J+1)=0.D0
!       DWAT(J)=0.D0
!       GO TO 3818
!  5113 CONTINUE
!       IF(VLW(J).LE.0.D0.AND.VLW(J+1).GE.0.D0) GO TO 3818
!       IF(VLW(J).LT.0.D0.AND.VLW(J+1).LT.0.D0) GO TO 3819
!       IF(VLW(J+1).LT.0.D0) GO TO 4821
! C.....CASE 1 HERE: VJ>0 and VJ+1>0.
!       QJ=0.D0 
!       IF(J.GT.1) QJ=ARC(J)*DWAT(J-1)*VLW(J)
!       QJP1=ARC(J+1)*DWAT(J)*VLW(J+1)
!       IF(QJ.LE.QJP1) GO TO 3818 
!       IF(J.EQ.1) GO TO 3820
!       IF(DWAT(J-1).GE.HCP(J-1)-ELEVAT(J-1)-HTOT(J-1)) GO TO 3820
!       VLW(J)=0.D0
!       IF(DWAT(J-1).GT.0.D0) VLW(J)=QJP1/(DWAT(J-1)*ARC(J))
!       GO TO 3818
!  3820 CONTINUE
!       VLW(J+1)=QJ/((HCP(J)-ELEVAT(J)-HTOT(J))*ARC(J+1))
!       GO TO 3818
!  3819 CONTINUE
! C.....CASE 2 HERE: VJ<0 AND VJ+1<0.
!       QJ=ARC(J)*DABS(VLW(J))*DWAT(J)
!       QJP1=0.D0 
!       IF(J.LT.NUMNOD) QJP1=ARC(J+1)*DABS(VLW(J+1))*DWAT(J+1)
!       IF(QJ.GE.QJP1) GO TO 3818
!       IF(J.EQ.NUMNOD) GO TO 4822
!       IF(DWAT(J+1).GE.HCP(J+1)-ELEVAT(J+1)-HTOT(J+1)) GO TO 4822
!       VLW(J+1)=0.D0
!       IF(DWAT(J+1).GT.0.D0) VLW(J+1)=-QJ/(DWAT(J+1)*ARC(J+1))
!       GO TO 3818
!  4822 CONTINUE
!       VLW(J)=-QJP1/((HCP(J)-ELEVAT(J)-HTOT(J))*ARC(J))
!       GO TO 3818
!  4821 CONTINUE
! C.....CASE 3 HERE: VJ>0 and VJ+1<0.
!       QJ=0.D0
!       IF(J.GT.1) QJ=ARC(J)*VLW(J)*DWAT(J-1)
!       QJP1=0.D0
!       IF(J.LT.NUMNOD) QJP1=ARC(J+1)*DABS(VLW(J+1))*DWAT(J+1)
!       IF(J.EQ.1) GO TO 3824
!       IF(DWAT(J-1).LT.HCP(J-1)-ELEVAT(J-1)-HTOT(J-1)) 
!      1 VLW(J)=-QJP1/((HCP(J)-ELEVAT(J)-HTOT(J))*ARC(J))
!       GO TO 3818
!  3824 CONTINUE
!       IF(J.EQ.NUMNOD) GO TO 3818
!       IF(DWAT(J+1).LT.HCP(J+1)-ELEVAT(J+1)-HTOT(J+1)) 
!      1 VLW(J+1)=QJ/((HCP(J)-ELEVAT(J)-HTOT(J))*ARC(J+1))
!  3818 CONTINUE 
! C.....NOW SOLVE SIMPLIFIED CONSERVATION OF MASS EQUATION TO OBTAIN 
! C.....THE APPROXIMATE HEIGHT DISTRIBUTION.     
!       DO 2611 KND=1,NUMNOD      
!       VJM12=VLW(KND)  
!       VJP12=VLW(KND+1)
!       IF(KND.EQ.1) GO TO 2612   
!       IF(KND.EQ.NUMNOD) GO TO 2613
!       HJM1=DWAT(KND-1)
!       HJ=DWAT(KND)    
!       HJP1=DWAT(KND+1)
!       GO TO 2614      
!  2612 CONTINUE
!       HJM1=0.D0
!       HJ=DWAT(KND)    
!       HJP1=DWAT(KND+1)
!       GO TO 2614      
!  2613 CONTINUE
!       HJM1=DWAT(KND-1)
!       HJ=DWAT(KND)    
!       HJP1=0.D0
!  2614 CONTINUE
!       D1=(AREA(KND)*(HJ-DWATOLD(KND)))/DTVEL
!       D2=ARC(KND)*(HJ*DMAX1(-VJM12,0.D0)-HJM1*DMAX1(VJM12,0.D0))
!       D3=ARC(KND+1)*(HJ*DMAX1(VJP12,0.D0)-HJP1*DMAX1(-VJP12,0.D0))      
!       D4=DSRDTN(KND)
!       D(KND)=-(D1+D2+D3-D4)     
!       C(KND)=ARC(KND)*DMAX1(VJM12,0.D0)   
!       B(KND)=ARC(KND+1)*DMAX1(-VJP12,0.D0)
!       DENOM=0.D0
!       IF(DHDC(KND).GT.0.D0) DENOM=1.D0/DHDC(KND)
!       A(KND)=AREA(KND)/DTVEL+ARC(KND)*DMAX1(-VJM12,0.D0)
!      1 +ARC(KND+1)*DMAX1(VJP12,0.D0)
!      1 +(1.5D0*DENOM*DSRDC(KND))/PL
!  2611 CONTINUE
! C.....FIND APPROXIMATE HEIGHT INCREMENTS. 
!       P(1)=B(1)/A(1)  
!       Q(1)=D(1)/A(1)  
!       DO 2616 KTOP=2,NUMNOD     
!       DENOM=A(KTOP)-C(KTOP)*P(KTOP-1)     
!       P(KTOP)=B(KTOP)/DENOM     
!       Q(KTOP)=(D(KTOP)+C(KTOP)*Q(KTOP-1))/DENOM     
!  2616 CONTINUE
! C.....DO BACKWARDS SUBSTITUTION 
!       DDWAT(NUMNOD)=Q(NUMNOD)   
!       DO 2617 KLP=1,NUMNOD-1    
!       IARG=NUMNOD-KLP 
!       DDWAT(IARG)=P(IARG)*DDWAT(IARG+1)+Q(IARG)     
!  2617 CONTINUE
! C.....FIND ITERATED HEIGHTS.    
!       DO 2818 KND=1,NUMNOD      
!       DWAT(KND)=DWAT(KND)+DDWAT(KND)
!       DWAT(KND)=DMAX1(DWAT(KND),0.D0)     
!  2818 CONTINUE
! C.....CALCULATE VELOCITY CONVERGENCE CRITERIA AFTER PERFORMING
! C.....AT LEAST ONE ITERATION.
!       IF(NITER.EQ.1) GO TO 2711 
!       DVMAX=ABS(DELVLW(1))      
!       DVSUM=DVMAX     
!       DO 3283 KN=2,NUMNOD+1     
!       DABV=ABS(DELVLW(KN))      
!       DVSUM=DVSUM+DABV
!       DVMAX=DMAX1(DABV,DVMAX)   
!  3283 CONTINUE
!       DVAV=DVSUM/FLOAT(NUMNOD+1)
!       IF(DVMAX.LE.DVMXW.AND.DVAV.LE.DAVMXW) GO TO 2712
!       GO TO 2711      
!  2712 CONTINUE
!  2231 CONTINUE
! C.....WITH UPDATED INFORMATION, RESTABLISH WATER TEMP/ENTHALPY
! C.....IF NODE WAS PREVIOUSLY DRY.
!       DO 1033 KN=1,NUMNOD
!       IF(DWAT(KN).LE.0.D0) GO TO 1033     
!       IF(DWATSV(KN).GT.0.D0) GO TO 1033     
!       IF(DSRDTW(KN).LE.0.D0) GO TO 1034   
!       TWAT(KN)=TSRDTW(KN)
!       EWAT(KN)=ESRDTW(KN)
!       GO TO 1033      
!  1034 CONTINUE
!       IF(KN.EQ.1) NLOC=KN+1
!       IF(KN.EQ.NUMNOD) NLOC=KN-1
!       IF(KN.EQ.1.OR.KN.EQ.NUMNOD) GO TO 1035
!       NLOC=KN-1
!       IF(VLW(K+1).LT.0.D0.AND.DWAT(K+1).GT.0.D0) NLOC=KN+1
!  1035 CONTINUE
!       TWAT(KN)=TWAT(NLOC)     
!       EWAT(KN)=EWAT(NLOC)     
!  1033 CONTINUE
! C...................................................................... 
! C.....GIVEN THE WATER VELOCITIES AND ITERATED HEIGHTS, SOLVE THE
! C.....CONSERVATION OF ENERGY EQUATION FOR WATER TEMPERATURE AFTER 
! C.....ZEROING OUT OLD ENTHALPY INCREMENTS.
!       DO 4928 K=1,NUMNOD
!       DEWAT(K)=0.D0 
!  4928 CONTINUE
!       NITEN=0
!  3928 CONTINUE
!       NITEN=NITEN+1   
!       IF(NITEN.GT.NENMXW) WRITE(2,*) 'WARNING: WATER COE CONVERGENCE FAI
!      1LED, T=',TIME
!       IF(NITEN.GT.NENMXW) GO TO 3929      
!       JSEND=1
!       PHJ=0.D0
!       PHEJ=0.D0
!       IF(DWAT(JSEND).LE.0.D0) GO TO 5049
!       ROCJP1=PL      
!       PHJP1=ROCJP1*DWAT(JSEND)  
!       PHEJP1=ROCJP1*DWAT(JSEND)*EWAT(JSEND)
!       GO TO 5050      
!  5049 CONTINUE
!       PHJP1=0.D0      
!       PHEJP1=0.D0     
!  5050 CONTINUE
!       DO 5036 KDR=1,NUMNOD      
!       KSEND=KDR+1     
!       IF(KDR.EQ.NUMNOD) GO TO 5051
!       IF(DWAT(KSEND).LE.0.D0) GO TO 5051
!       PHJM1=PHJ
!       PHEJM1=PHEJ     
!       PHJ=PHJP1
!       PHEJ=PHEJP1     
!       ROCJP1=PL
!       PHJP1=ROCJP1*DWAT(KSEND)  
!       PHEJP1=ROCJP1*DWAT(KSEND)*EWAT(KSEND)
!       GO TO 5052      
!  5051 CONTINUE
!       PHJM1=PHJ
!       PHEJM1=PHEJ     
!       PHJ=PHJP1
!       PHEJ=PHEJP1     
!       PHJP1=0.D0      
!       PHEJP1=0.D0     
!  5052 CONTINUE
!       IF(DWAT(KDR).GT.DFILM) GO TO 5037   
!       A(KDR)=1.D0
!       B(KDR)=0.D0     
!       C(KDR)=0.D0     
!       D(KDR)=0.D0
!       GO TO 5036      
!  5037 CONTINUE
!       PHJM=PL*DWAT(KDR)
! C.....EVALUATE OLD TIMESTEP DENSITY & SPECIFIC HEAT.
!       PHEOLD=0.D0
!       IF(DWATSV(KDR).LE.0.D0) GO TO 5057   
!       PHEOLD=PL*EWATOLD(KDR)*DWATSV(KDR)
!       GO TO 5058      
!  5057 CONTINUE
!       PHEOLD=0.D0     
!  5058 CONTINUE
! C.....ASSIGN VALUES FOR TDMA COEFFICIENT EVALUATION.
!       VJM12=VLW(KDR)  
!       VJP12=VLW(KDR+1)
!       IF(KDR.EQ.1) GO TO 5053   
!       IF(KDR.EQ.NUMNOD) GO TO 5054
!       HJM1=DWAT(KDR-1)
!       HJP1=DWAT(KDR+1)
!       GO TO 5055      
!  5053 CONTINUE
!       HJM1=0.D0
!       HJP1=DWAT(KDR+1)
!       GO TO 5055      
!  5054 CONTINUE
!       HJM1=DWAT(KDR-1)
!       HJP1=0.D0
!  5055 CONTINUE
!       HJ=DWAT(KDR)    
! C.....EVALUATE DERIVATIVE OF WATER TEMPERATURE WITH RESPECT TO ENTHALPY. 
!       CALL EWTEMP(EWAT(KDR),TPASS,PDRYWL,ALPBLK)
! C.....NOW EVALUATE TDMA COEFFICIENTS.
!       HC1=(AREA(KDR)*(PHEJ-PHEOLD))/DTIME
!       HC2=ARC(KDR)*DMAX1(VJM12,0.D0)*PHEJM1
!       HC3=PHEJ*(ARC(KDR)*DMAX1(-VJM12,0.D0)+ARC(KDR+1)*DMAX1(VJP12,0.D0)
!      1)     
!       HC4=ARC(KDR+1)*DMAX1(-VJP12,0.D0)*PHEJP1      
!       HC5=-AREA(KDR)*QWATER(KDR)
!       IF(NJET.GT.0.AND.KDR.EQ.NJETP) HC5=HC5-QJETW
!       HC6=DSRDTW(KDR)*ESRDTW(KDR)
!       HC7=DSRDC(KDR)*EWAT(KDR)
!       HC8=XMS(KDR)*EWL
!       HCJ=HC1-HC2+HC3-HC4+HC5-HC6+HC7+HC8
!       EC1=PHJM*AREA(KDR)/DTIME+PHJ*(ARC(KDR)*DMAX1(-VJM12,0.D0)+ARC(KD
!      1R+1)*DMAX1(VJP12,0.D0))     
!       EC2=AREA(KDR)*FHEAT(KDR)*HWATB(KDR)*ALPBLK
!       EC3=DSRDC(KDR)
!       ECJ=EC1+EC2+EC3
!       FCJ=ARC(KDR)*DMAX1(VJM12,0.D0)*PHJM1
!       GCJ=ARC(KDR+1)*DMAX1(-VJP12,0.D0)*PHJP1
!       A(KDR)=ECJ      
!       B(KDR)=GCJ      
!       C(KDR)=FCJ      
!       D(KDR)=-HCJ     
!  5036 CONTINUE
! C.....GIVEN MATRIX ELEMENTS, SOLVE FOR THE ENTHALPY INCREMENTS USING THE
! C.....TDMA ALGORITHM. 
!       P(1)=B(1)/A(1)  
!       Q(1)=D(1)/A(1)  
!       DO 5061 KPN=2,NUMNOD      
!       P(KPN)=B(KPN)/(A(KPN)-C(KPN)*P(KPN-1))
!       Q(KPN)=(D(KPN)+C(KPN)*Q(KPN-1))/(A(KPN)-C(KPN)*P(KPN-1))
!  5061 CONTINUE
!       DEWAT(NUMNOD)=Q(NUMNOD)  
!       DO 5062 KPN=1,NUMNOD-1    
!       IARG=NUMNOD-KPN 
!       DEWAT(IARG)=P(IARG)*DEWAT(IARG+1)+Q(IARG)   
!  5062 CONTINUE
! C...................................................................... 
! C.....NOW UPDATE WATER ENTHALPY AND TEMPERATURE.    
!       DO 7144 KN=1,NUMNOD
!       IF(DWAT(KN).LE.0.D0) GO TO 4539      
!       IF(EWAT(KN)+DEWAT(KN).GT.EWL) DEWAT(KN)=EWL-EWAT(KN)
!       EWAT(KN)=EWAT(KN)+DEWAT(KN)      
!       CALL EWTEMP(EWAT(KN),TWAT(KN),PDRYWL,DTDE)
!       GO TO 7144      
!  4539 CONTINUE
!       TWAT(KN)=TREF  
!       EWAT(KN)=0.D0  
!  7144 CONTINUE
! C.....NOW CHECK SOLUTION FOR CONVERGENCE.
!       NXSM=1
!       DEMXI=ABS(DEWAT(1))      
!       DESUM=DEMXI     
!       DO 6811 KIT=2,NUMNOD      
!       IF(DWAT(KIT).LE.0.D0) GO TO 6811
!       NXSM=NXSM+1     
!       DEBV=ABS(DEWAT(KIT))     
!       DESUM=DESUM+DEBV
!       DEMXI=DMAX1(DEBV,DEMXI)   
!  6811 CONTINUE
!       DEAV=DESUM/FLOAT(NXSM)    
!       IF(DEMXI.LE.DEMXW.AND.DEAV.LE.DEAVMXW) GO TO 3929
!       GO TO 3928      
!  3929 CONTINUE
! C.....WITH CONVERGED SOLUTION,CHECK TO SEE IF A NODE HAS EFFECTIVELY 
! C.....DRIED OUT AND IF SO, RESET THE DATA.
!       DO 2033 KN=1,NUMNOD
!       IF(DWAT(KN).LE.ZERO.OR.DWAT(KN).GT.DFILM) GO TO 2033
!       DWAT(KN)=ZERO
!       TWAT(KN)=TREF  
!       EWAT(KN)=ZERO
!       IF(VLW(KN).LT.ZERO) VLW(KN)=ZERO
!       IF(VLW(KN+1).GT.ZERO) VLW(KN+1)=ZERO
!  2033 CONTINUE
! C.....WITH THE CONVERGED SOLUTION, UPDATE INTEGRATED QUANTITIES NEEDED
! C.....FOR OVERALL WATER MASS BALANCE BEFORE EXITING.  FIRST GET DOWN-
! C.....COMER FLOWRATE 
!       IF(NDOWNC.EQ.0) GO TO 135
!       TSRDC=0.D0
!       DO 145 K=1,NDOWNC
!       KR=NDC(K)
!       CORDDC(KR)=0.D0
!       DSRDC(KR)=0.D0
!       DHDC(KR)=0.D0 
!       HTPBCFX=HTOT(KR)+ELEVAT(KR)
!       HEVAL=DWAT(KR)+HTPBCFX
!       IF(HEVAL.LE.ELDCO(KR)) GO TO 145
!       DHDC(KR)=DMIN1(HEVAL-ELDCO(KR),HEVAL-HTPBCFX)
!       DO 130 L=1,NPTDC(K)
!       XSEND(L)=ELDCX(K,L)
!       YSEND(L)=CRDCX(K,L)
!   130 CONTINUE
!       CALL INTERP(2,NPTDC(K),HEVAL,XSEND,YSEND,CORDDC(KR))
!       DSRDC(KR)=PL*DSQRT(2.D0*GRAV)*CORDDC(KR)*DHDC(KR)**1.5D0
!       TSRDC=TSRDC+DSRDC(KR)
!   145 CONTINUE
!       TINTDC=TINTDC+TSRDC*DTIME
!   135 CONTINUE
! C.....ALSO UPDATE STEAM PRODUCTION DEPENDING UPON THE AMOUNT OF WATER
! C.....IN THE NODE VS. HEAT TRANSFER.
!       NEST=2
!       CALL STEAMER(NEST)
! C.....CALCULATE TOTAL WATER MASS REMAINING ON DRYWELL FLOOR FOR MASS
! C.....BALANCE.
!       XMWAT=0.D0   
!       XMST=0.D0
!       XQWAT=0.D0
!       DO 388 K=1,NUMNOD
!       XMWAT=XMWAT+PL*DWAT(K)*AREA(K)
!       IF(DWAT(K).GT.0.D0) XQWAT=XQWAT+AREA(K)*QWATER(K)
!       XMST=XMST+XMS(K)
!   388 CONTINUE
!       XQWAT=XQWAT+QJETW
!       XINTS=XINTS+XMST*DTIME
!       EINTW=EINTW+XQWAT*DTIME
! C.....DETERMINE WATER MASS BALANCE FOR OUTPUT AND CHECK.
!       XBALW=(XMWATO+TINTDW-XINTS-TINTDC)-XMWAT
!  1000 CONTINUE
!       RETURN
!       END
! C...................................................................... 
! C.....GIVEN THE SPECIFIC ENTHALPY OF WATER AND THE DRYWELL PRESSURE,
! C.....SUBROUTINE EWTEMP CALCULATES THE TEMPERATURE AND THE DERIVATIVE
! C.....OF THE TEMPERATURE WITH RESPECT TO ENTHALPY.  TEMPERATURE CHANGE
! C.....GOING FROM SATURATED LIQUID TO SATURATED VAPOR IS ASSUMED 
! C.....TO BE 1 C.
! C...................................................................... 
!       SUBROUTINE EWTEMP(E,T,P,DTDE)
!       IMPLICIT DOUBLE PRECISION(A-H,O-Z)
!       REAL(8) KL
!       DATA TREF /273.15D0/
!       CALL CONWAT(TSAT,KL,PL,CL,UL,HLV,EWL,EWV,CWV,SIGMA,P)
!       IF(E.GE.EWL) GO TO 10
!       T=TREF+E/CL
!       DTDE=1.0D0/CL
!       GO TO 30
!    10 CONTINUE
!       IF(E.GT.EWV) GO TO 20
!       T=TSAT+(E-EWL)/HLV
!       DTDE=1.D0/HLV
!       GO TO 30
!    20 CONTINUE
!       T=TSAT+1.D0+(E-EWV)/CWV
!       DTDE=1.D0/CWV
!    30 CONTINUE
!       RETURN
!       END
! C...................................................................... 
! C.....GIVEN THE TEMPERATURE OF WATER AND THE DRYWELL PRESSURE,
! C.....SUBROUTINE TWENTH CALCULATES THE ENTHALPY AND THE DERIVATIVE
! C.....OF THE TEMPERATURE WITH RESPECT TO ENTHALPY.  ENTHALPY CHANGE
! C.....GOING FROM SATURATED LIQUID TO SATURATED VAPOR IS ASSUMED 
! C.....TO BE 1 C.
! C...................................................................... 
!       SUBROUTINE TWENTH(E,T,P,DTDE)
!       IMPLICIT DOUBLE PRECISION(A-H,O-Z)
!       REAL(8) KL
!       DATA TREF /273.15D0/
!       CALL CONWAT(TSAT,KL,PL,CL,UL,HLV,EWL,EWV,CWV,SIGMA,P)
!       IF(T.GE.TSAT) GO TO 10
!       E=CL*(T-TREF)
!       DTDE=1.0D0/CL
!       GO TO 30
!    10 CONTINUE
!       IF(T.GT.TSAT+1.D0) GO TO 20
!       E=EWL+HLV*(T-TSAT)
!       DTDE=1.D0/HLV
!       GO TO 30
!    20 CONTINUE
!       E=EWV+CWV*(T-(TSAT+1.D0))
!       DTDE=1.D0/CWV
!    30 CONTINUE
!       RETURN
!       END
! C...................................................................... 
! C.....SUBROUTINE PLOTWAT SAVES THE WATER INVENTORY DATA IF THE WATER
! C.....INVENTORY MODEL IS BEING USED IN THE CALCULATION.
! C...................................................................... 
!       SUBROUTINE PLOTWAT
!       IMPLICIT DOUBLE PRECISION(A-H,O-Z)
!       COMMON /WATVARS/FCRUST(999),VLW(999),VLWOLD(999),DWAT(999),
!      1DWATOLD(999),EWAT(999),EWATOLD(999),TWAT(999),CORDDC(999),
!      2DSRDC(999),DHDC(999),TSRDC,TINTDC,HWATB(999),TSURFW(999),XMS(999),
!      3XMST,XINTS,ESRDTW(999),TSRDTW(999),DSRDTW(999),TSRDW,TINTDW,
!      4TWATI,ELDCO(999),ELDCX(999,99),CRDCX(999,99),TIMINJ(999,99),
!      5XDTINJ(999,99),TDTINJ(999,99),ELWATI,XMWAT,XMWATO,XBALW,
!      6HDRY(999),EINTW,XMCT(199),XMCDT(16,999),TMPCDT(999),CMPCDT(999),
!      7FDC(999),FCOV(999),FBED(999),FHEAT(999),XFACJ(999),
!      8XMBEDJ(16,999),XMBEDJT(999),PBED,QBED(999),QWATER(999),
!      9QSURFACE(999),QWATERT(999),HBED(999),POROSBED,XMCRDT(16,999),
!      1XMCRT(999),XMBDINT(999),XMT(999)
!       COMMON/PRINTB/ELEVAT(999),ELOLD(999),XDIST(999,999),XBTW(999,999),
!      1TEMP(999,999),ENTHP(999,999),EOLD(999,999),ENBLK(999),EBKOLD(999),
!      2TBULK(999),HITE(16,999),HITOLD(16,999),HTOT(999),HTOLD(999),
!      3HTCFT(999),HTCOEF(999),QFLUXT(999),QFLUXB(999),VEL(999),ELO(999),
!      4VELOLD(999),SRSCOR(16),AREA(999),RAD(999),ARC(999),VOLCN(16),
!      5VOID(999),VGJ(999),ZABLAT(999),ZABOLD(999),DCRUST(999),
!      6DCROLD(999),DABCON(999),DABOLD(999),DFILMT(999),DFOLT(999),
!      7SMFLX(4,999),XLSMF(4,999),TOTVOL,XFACMS(999),XMFLXA,XMCORT,
!      8VCORT,TOTOX,TOTMET,QFLXT,QFLXB,TIME,DTIME,XMCOR(16),VCOR(16),
!      9TCONI,RSAND,HDOWNC,TBOUND,EMISCN,PDRYWL,XDISTO(999),QOXT(999),
!      1XLENSH,XBTWO(999),RCOMP,WDOOR,RSUMP,RSHELL,RPED,TPED,ELSMP,
!      1TENDP(10,999),TFRZSH,TDEBRS,TKDEBR,PDEBR,CPDEBR,ENENDP(10,999),
!      2ENOLDP(10,999),DXVERT,DXSNK,XDSTE(10,999),XBTE(10,999),HXLA(999),
!      3HXLB(999),TSFEB(999),DCRS(999),DCRSLD(999),HCRS(16,999),
!      4HCRSLD(16,999),THETE0(10,999),THETE1(10,999),QSHELL,QSHELE,TSHELI,
!      5SIGOXE(999),FKOXE(999),RINJC,XLSEC,ANGSEC,ANINJC,XLCHAN,WCHNL,
!      6TEFZX(999),TIMSPC(999),DXNODE(999),TNORM(999),FRCSOL(999),
!      7ALPSPR(999),CRAMCON,HINTF,TSHLMX,XFRMX(999),XFROX(999),XFRTX(999),
!      8XMLMX(999),XMLOX(999),XMLTX(999),XTOTX(999),TIMEO,TMAX,EDOWN(999),
!      9HCP(999)
!       COMMON/PRINTR/ QFEH2O,QCRH2O,QZRH2O,QFECO2,QCRCO2,QZRCO2,
!      4XFH2OU,XFCAOH,XFMGCA,XFCACO,XZRMRE,XFEMRE,XCRMRE,XZRORE,XFEORE,   
!      5XCRORE,XMH2O,XMCO2,XMCACO,XMMGCA,XMCAOH,TFWL,TFWS,TBWL,TBWS,      
!      6TMCAL,TMCAS,TCAL,TCAS,TFOS,TFOL,TFMS,TFML,XVISC(28),SVISC(28),    
!      7XMOL(28),FMMOL(28),ROM(28),ROMLIQ(28),AEQM(28,2),BEQM(28,2),
!      8CEQM(28,2),ECL,ECS,ECAL,ECAS,EMCAL,EMCAS,EBWL,EBWS,EFWL,EFWS,    
!      9STEF,GRAV,PI,TCS,TCL,CCL,CCS,RMASSL,WPCC,WPM,WPA,WPCS,ROC,RMASSS,   
!      1ANGSHL,RSLAGL,RSLAGS,HNODT,VFAV,VGAV,QXAV,XWTSS(16),  
!      2TSCS(2),TSCL(2),ESCS(2),ESCL(2),CCSS(2),CCSL(2),ROSTLS,ROSTLL,
!      3XFRGAS,HMINC,TST(99),TSTOP(99),AINTP(99),BINTP(99),DRATIO(999),
!      4XBCN(999),XDCN(999),XBLT(15),ADEC(99),BDEC(99),APOUR(16,99),
!      5BPOUR(16,99),XWTC(14),BWIDTH,THCKCV,TMBOIL,TEBOIL,VFINT,ANGFAN,
!      6ALPMAX,THSHL,XFCABL,XNDMIN,DVMX,DAVMX,DEAVMX,DEMX,TDC,QDCU,QDCUO2,
!      7TSINJ,EINJ,DTINJ,TKINJ,ROEV,CPINJ,SURFT,VSINJ,EMINJ,TSINJO,EINJO,
!      8DTINJO,TKINJO,ROEVO,CPINJO,SURFTO,VSINJO,EMINJO,XLEADE,ARSUM,
!      9DBUBOX,UTRISE,TREMSH,DJET,DFALL,WEBER,FROUDE,XPSAITO,XPEPSTN,
!      1FRAG,XMBEDT,XMBED(16),XLPENT,XLPENA,UJET,UFALL,HFALL,ERPV,
!      2TJETT(99),DJETT(99),HWATP,XDOTJET,DVMXW,DAVMXW,DEMXW,DEAVMXW,
!      3QJETW,XSTMJF,TINTSJF,ESAT,DRDOOR,DRANL,EI,QDCBUO2,QDCBU,
!      4EBEDS,EBEDB
! C.....WRITE OUT DATA RELEVANT TO THE WATER INVENTORY CALCULATION...
!       WRITE(3,10) TIME,TSRDW,TSRDC,XMST,TINTDW,TINTDC,XINTS,XMWAT,
!      1XBALW,XSTMJF,TINTSJF
!    10 FORMAT(E12.5,10(2X,E12.5))
!       RETURN
!       END
! C...................................................................... 
! C.....SUBROUTINE PLOTCQ SAVES END-OF-RUN DEBRIS DISTRIBUTION, 
! C.....TEMPERATURE, AND GEOMETRY DATA IN A FORMAT THAT IS EASY TO 
! C.....INVENTORY MODEL IS BEING USED IN THE CALCULATION.
! C...................................................................... 
!       SUBROUTINE CQSTART
!       IMPLICIT DOUBLE PRECISION(A-H,O-Z)
!       DIMENSION HASIGN(28),BASIGN(28),CASIGN(28)
!       COMMON /WATVARS/FCRUST(999),VLW(999),VLWOLD(999),DWAT(999),
!      1DWATOLD(999),EWAT(999),EWATOLD(999),TWAT(999),CORDDC(999),
!      2DSRDC(999),DHDC(999),TSRDC,TINTDC,HWATB(999),TSURFW(999),XMS(999),
!      3XMST,XINTS,ESRDTW(999),TSRDTW(999),DSRDTW(999),TSRDW,TINTDW,
!      4TWATI,ELDCO(999),ELDCX(999,99),CRDCX(999,99),TIMINJ(999,99),
!      5XDTINJ(999,99),TDTINJ(999,99),ELWATI,XMWAT,XMWATO,XBALW,
!      6HDRY(999),EINTW,XMCT(199),XMCDT(16,999),TMPCDT(999),CMPCDT(999),
!      7FDC(999),FCOV(999),FBED(999),FHEAT(999),XFACJ(999),
!      8XMBEDJ(16,999),XMBEDJT(999),PBED,QBED(999),QWATER(999),
!      9QSURFACE(999),QWATERT(999),HBED(999),POROSBED,XMCRDT(16,999),
!      1XMCRT(999),XMBDINT(999),XMT(999)
!       COMMON/PRINTB/ELEVAT(999),ELOLD(999),XDIST(999,999),XBTW(999,999),
!      1TEMP(999,999),ENTHP(999,999),EOLD(999,999),ENBLK(999),EBKOLD(999),
!      2TBULK(999),HITE(16,999),HITOLD(16,999),HTOT(999),HTOLD(999),
!      3HTCFT(999),HTCOEF(999),QFLUXT(999),QFLUXB(999),VEL(999),ELO(999),
!      4VELOLD(999),SRSCOR(16),AREA(999),RAD(999),ARC(999),VOLCN(16),
!      5VOID(999),VGJ(999),ZABLAT(999),ZABOLD(999),DCRUST(999),
!      6DCROLD(999),DABCON(999),DABOLD(999),DFILMT(999),DFOLT(999),
!      7SMFLX(4,999),XLSMF(4,999),TOTVOL,XFACMS(999),XMFLXA,XMCORT,
!      8VCORT,TOTOX,TOTMET,QFLXT,QFLXB,TIME,DTIME,XMCOR(16),VCOR(16),
!      9TCONI,RSAND,HDOWNC,TBOUND,EMISCN,PDRYWL,XDISTO(999),QOXT(999),
!      1XLENSH,XBTWO(999),RCOMP,WDOOR,RSUMP,RSHELL,RPED,TPED,ELSMP,
!      1TENDP(10,999),TFRZSH,TDEBRS,TKDEBR,PDEBR,CPDEBR,ENENDP(10,999),
!      2ENOLDP(10,999),DXVERT,DXSNK,XDSTE(10,999),XBTE(10,999),HXLA(999),
!      3HXLB(999),TSFEB(999),DCRS(999),DCRSLD(999),HCRS(16,999),
!      4HCRSLD(16,999),THETE0(10,999),THETE1(10,999),QSHELL,QSHELE,TSHELI,
!      5SIGOXE(999),FKOXE(999),RINJC,XLSEC,ANGSEC,ANINJC,XLCHAN,WCHNL,
!      6TEFZX(999),TIMSPC(999),DXNODE(999),TNORM(999),FRCSOL(999),
!      7ALPSPR(999),CRAMCON,HINTF,TSHLMX,XFRMX(999),XFROX(999),XFRTX(999),
!      8XMLMX(999),XMLOX(999),XMLTX(999),XTOTX(999),TIMEO,TMAX,EDOWN(999),
!      9HCP(999)
!       COMMON/PROPI/ NMATC,NMATFI,NMATFF,ICAOH2,ICACO3,IMCCO3,IFH2O,     
!      1IVH2O,ICK2O,IVK2O,INA2O,ITIO2,ISIO2,ICAO,IMGO,IAL2O3,IFEO,IFE2O3, 
!      2IFE3O4,IFE,ICR,INI,IZR,IU,IB4C,IB,ICR2O3,INIO,IUO2,IZRO2,IB2O3,   
!      3NBCINT(999),NODES(999),NUMNOD,IMOX(28),IBAS,ILCS,ILL,NACTIV(999),     
!      4NBFRZM,NBFRZO,NABLFM,NDRNFM,NTYPMT(999,999),NDOOR,NBMADJ,NUMSHV,   
!      5NBSHL(999),NCRSTS(999),NUMSHH,NSKIPE,NACSH,NWAT,NPEND,NBCBOT,
!      6NCRTOP,NBFZOE,NBFZME,NGEOM,NL(999,999),NFRSCT,NLOGSH,NADAB,NINVIS,
!      7NSIMST,NSTEEL,NOVHT,NOVTK,NOVUM,NOVEM,NOVSIG,NPLLOC(999),NBPL,
!      8IXP(999),IYP(999),NVTPE,NSOLTP,NSOLF,NINTF,IFLGA(999),ICTYPE,ICTC,
!      9NPOURS,NSMP,NPED,NDOR,NSHL,NANULS,NSMPCV,NBOIL,NSWALL,NMVER,
!      1NCRTEM,NTHINC,NVELP,NITMAX,NENMAX,NPRINT,NPFREQ,NTIMSPC,NPLFREQ,
!      2NPLTOT,NJET,NJETP,NJETD,NJETND,NODCAP,NVELPW,NITMAXW,NENMXW,
!      3IFLGJ(999),NBEDCQ,ISHELE
!       COMMON/PRINTR/ QFEH2O,QCRH2O,QZRH2O,QFECO2,QCRCO2,QZRCO2,
!      4XFH2OU,XFCAOH,XFMGCA,XFCACO,XZRMRE,XFEMRE,XCRMRE,XZRORE,XFEORE,   
!      5XCRORE,XMH2O,XMCO2,XMCACO,XMMGCA,XMCAOH,TFWL,TFWS,TBWL,TBWS,      
!      6TMCAL,TMCAS,TCAL,TCAS,TFOS,TFOL,TFMS,TFML,XVISC(28),SVISC(28),    
!      7XMOL(28),FMMOL(28),ROM(28),ROMLIQ(28),AEQM(28,2),BEQM(28,2),
!      8CEQM(28,2),ECL,ECS,ECAL,ECAS,EMCAL,EMCAS,EBWL,EBWS,EFWL,EFWS,    
!      9STEF,GRAV,PI,TCS,TCL,CCL,CCS,RMASSL,WPCC,WPM,WPA,WPCS,ROC,RMASSS,   
!      1ANGSHL,RSLAGL,RSLAGS,HNODT,VFAV,VGAV,QXAV,XWTSS(16),  
!      2TSCS(2),TSCL(2),ESCS(2),ESCL(2),CCSS(2),CCSL(2),ROSTLS,ROSTLL,
!      3XFRGAS,HMINC,TST(99),TSTOP(99),AINTP(99),BINTP(99),DRATIO(999),
!      4XBCN(999),XDCN(999),XBLT(15),ADEC(99),BDEC(99),APOUR(16,99),
!      5BPOUR(16,99),XWTC(14),BWIDTH,THCKCV,TMBOIL,TEBOIL,VFINT,ANGFAN,
!      6ALPMAX,THSHL,XFCABL,XNDMIN,DVMX,DAVMX,DEAVMX,DEMX,TDC,QDCU,QDCUO2,
!      7TSINJ,EINJ,DTINJ,TKINJ,ROEV,CPINJ,SURFT,VSINJ,EMINJ,TSINJO,EINJO,
!      8DTINJO,TKINJO,ROEVO,CPINJO,SURFTO,VSINJO,EMINJO,XLEADE,ARSUM,
!      9DBUBOX,UTRISE,TREMSH,DJET,DFALL,WEBER,FROUDE,XPSAITO,XPEPSTN,
!      1FRAG,XMBEDT,XMBED(16),XLPENT,XLPENA,UJET,UFALL,HFALL,ERPV,
!      2TJETT(99),DJETT(99),HWATP,XDOTJET,DVMXW,DAVMXW,DEMXW,DEAVMXW,
!      3QJETW,XSTMJF,TINTSJF,ESAT,DRDOOR,DRANL,EI,QDCBUO2,QDCBU,
!      4EBEDS,EBEDB
!       DATA NCQMAT / 22 /
!       DATA ZERO / 0.D0 /
! C.....DATA ARE WRITTEN TO THE FILE CALLED 'cqinput'
!       OPEN(UNIT=8,FILE='cqinput.dat')
! C.....FORMATS FOR OUTPUTS.
!     1 FORMAT(2(1X,I4),5(1X,E10.4))
!     2 FORMAT(1X,I4,1X,E10.4)
!     3 FORMAT(3(1X,E10.4))
!       WRITE(8,2) NUMNOD,TIME
!       DO 10 K=1,NUMNOD
!       ELP=ELO(K)-DABCON(K)
!       WRITE(8,1) K,NACTIV(K),RAD(K),ARC(K),AREA(K),DXNODE(K),ELP
!       IF(NACTIV(K).EQ.0) GO TO 10
!       WRITE(8,3) TMPCDT(K),CMPCDT(K),XMT(K)
! C.. ..NOW WE HAVE TO REASSIGN MELT ZONE MASSES FROM MS TO CQ FACTORING
! C.. ..IN THE DIFFERENCES IN FORMATING ET Al. THIS IS CURRENTLY DONE BY 
! C.. ..BRUTE FORCE..... 
! C.. ..THIS IS NA2O..
!       HASIGN(1)=ZERO 
!       CASIGN(1)=ZERO 
!       BASIGN(1)=ZERO 
! C... .THIS IS TIO2..
!       HASIGN(2)=ZERO 
!       CASIGN(2)=ZERO 
!       BASIGN(2)=ZERO 
! C.....THIS IS SIO2..
!       HASIGN(3)=WPCS*XMCDT(16,K)
!       CASIGN(3)=WPCS*XMCRDT(16,K)
!       BASIGN(3)=WPCS*XMBEDJ(16,K)
! C.....THIS IS CAO..
!       HASIGN(4)=WPCC*XMCDT(16,K)
!       CASIGN(4)=WPCC*XMCRDT(16,K)
!       BASIGN(4)=WPCC*XMBEDJ(16,K)
! C.....THIS IS MGO..
!       HASIGN(5)=WPM*XMCDT(16,K)
!       CASIGN(5)=WPM*XMCRDT(16,K)
!       BASIGN(5)=WPM*XMBEDJ(16,K)
! C.....THIS IS AL2O3..
!       HASIGN(6)=WPA*XMCDT(16,K)
!       CASIGN(6)=WPA*XMCRDT(16,K)
!       BASIGN(6)=WPA*XMBEDJ(16,K)
! C.....THIS IS FEO..
!       HASIGN(7)=XMCDT(9,K)
!       CASIGN(7)=XMCRDT(9,K)
!       BASIGN(7)=XMBEDJ(9,K)
! C.....THIS IS FE2O3..
!       HASIGN(8)=XMCDT(10,K)
!       CASIGN(8)=XMCRDT(10,K)
!       BASIGN(8)=XMBEDJ(10,K)
! C.....THIS IS FE3O4..
!       HASIGN(9)=XMCDT(11,K)
!       CASIGN(9)=XMCRDT(11,K)
!       BASIGN(9)=XMBEDJ(11,K)
! C.....THIS IS FE..
!       HASIGN(10)=XMCDT(2,K)
!       CASIGN(10)=XMCRDT(2,K)
!       BASIGN(10)=XMBEDJ(2,K)
! C.....THIS IS CR..
!       HASIGN(11)=XMCDT(3,K)
!       CASIGN(11)=XMCRDT(3,K)
!       BASIGN(11)=XMBEDJ(3,K)
! C.....THIS IS NI..
!       HASIGN(12)=XMCDT(4,K)
!       CASIGN(11)=XMCRDT(4,K)
!       BASIGN(12)=XMBEDJ(4,K)
! C.....THIS IS ZR..
!       HASIGN(13)=XMCDT(1,K)
!       CASIGN(13)=XMCRDT(1,K)
!       BASIGN(13)=XMBEDJ(1,K)
! C.....THIS IS ZRO2..
!       HASIGN(14)=XMCDT(8,K)
!       CASIGN(14)=XMCRDT(8,K)
!       BASIGN(14)=XMBEDJ(8,K)
! C.....THIS IS B2O3..
!       HASIGN(15)=XMCDT(14,K)
!       CASIGN(15)=XMCRDT(14,K)
!       BASIGN(15)=XMBEDJ(14,K)
! C.....THIS IS U..
!       HASIGN(16)=XMCDT(6,K)
!       CASIGN(16)=XMCRDT(6,K)
!       BASIGN(16)=XMBEDJ(6,K)
! C.....THIS IS B4C..
!       HASIGN(17)=XMCDT(7,K)
!       CASIGN(17)=XMCRDT(7,K)
!       BASIGN(17)=XMBEDJ(7,K)
! C.....THIS IS SI..
!       HASIGN(18)=ZERO 
!       CASIGN(18)=ZERO 
!       BASIGN(18)=ZERO 
! C.....THIS IS SIC..
!       HASIGN(19)=ZERO 
!       CASIGN(19)=ZERO 
!       BASIGN(19)=ZERO 
! C.....THIS IS CR2O3..
!       HASIGN(20)=XMCDT(12,K)
!       CASIGN(20)=XMCRDT(12,K)
!       BASIGN(20)=XMBEDJ(12,K)
! C.....THIS IS NIO..
!       HASIGN(21)=XMCDT(13,K)
!       CASIGN(21)=XMCRDT(13,K)
!       BASIGN(21)=XMBEDJ(13,K)
! C.....THIS IS UO2..
!       HASIGN(22)=XMCDT(15,K)
!       CASIGN(22)=XMCRDT(15,K)
!       BASIGN(22)=XMBEDJ(15,K)
! C.....NOW WRITE OUT THE DATA.
!       DO 20 KTP=1,NCQMAT
!       WRITE(8,3) HASIGN(KTP),CASIGN(KTP),BASIGN(KTP)
!    20 CONTINUE
!    10 CONTINUE
!       RETURN
!       END
! C...................................................................... 
! C.....SUBROUTINE STEAMER CALCULATES THE STEAMING RATE AT EACH NODE
! C.....LOCATION GIVEN LOCAL CONDITIONS.
! C...................................................................... 
!       SUBROUTINE STEAMER(NEST)
!       IMPLICIT DOUBLE PRECISION(A-H,O-Z)
!       REAL(8) KL
!       COMMON /WATVARS/FCRUST(999),VLW(999),VLWOLD(999),DWAT(999),
!      1DWATOLD(999),EWAT(999),EWATOLD(999),TWAT(999),CORDDC(999),
!      2DSRDC(999),DHDC(999),TSRDC,TINTDC,HWATB(999),TSURFW(999),XMS(999),
!      3XMST,XINTS,ESRDTW(999),TSRDTW(999),DSRDTW(999),TSRDW,TINTDW,
!      4TWATI,ELDCO(999),ELDCX(999,99),CRDCX(999,99),TIMINJ(999,99),
!      5XDTINJ(999,99),TDTINJ(999,99),ELWATI,XMWAT,XMWATO,XBALW,
!      6HDRY(999),EINTW,XMCT(199),XMCDT(16,999),TMPCDT(999),CMPCDT(999),
!      7FDC(999),FCOV(999),FBED(999),FHEAT(999),XFACJ(999),
!      8XMBEDJ(16,999),XMBEDJT(999),PBED,QBED(999),QWATER(999),
!      9QSURFACE(999),QWATERT(999),HBED(999),POROSBED,XMCRDT(16,999),
!      1XMCRT(999),XMBDINT(999),XMT(999)
!       COMMON/PROPI/ NMATC,NMATFI,NMATFF,ICAOH2,ICACO3,IMCCO3,IFH2O,     
!      1IVH2O,ICK2O,IVK2O,INA2O,ITIO2,ISIO2,ICAO,IMGO,IAL2O3,IFEO,IFE2O3, 
!      2IFE3O4,IFE,ICR,INI,IZR,IU,IB4C,IB,ICR2O3,INIO,IUO2,IZRO2,IB2O3,   
!      3NBCINT(999),NODES(999),NUMNOD,IMOX(28),IBAS,ILCS,ILL,NACTIV(999),     
!      4NBFRZM,NBFRZO,NABLFM,NDRNFM,NTYPMT(999,999),NDOOR,NBMADJ,NUMSHV,   
!      5NBSHL(999),NCRSTS(999),NUMSHH,NSKIPE,NACSH,NWAT,NPEND,NBCBOT,
!      6NCRTOP,NBFZOE,NBFZME,NGEOM,NL(999,999),NFRSCT,NLOGSH,NADAB,NINVIS,
!      7NSIMST,NSTEEL,NOVHT,NOVTK,NOVUM,NOVEM,NOVSIG,NPLLOC(999),NBPL,
!      8IXP(999),IYP(999),NVTPE,NSOLTP,NSOLF,NINTF,IFLGA(999),ICTYPE,ICTC,
!      9NPOURS,NSMP,NPED,NDOR,NSHL,NANULS,NSMPCV,NBOIL,NSWALL,NMVER,
!      1NCRTEM,NTHINC,NVELP,NITMAX,NENMAX,NPRINT,NPFREQ,NTIMSPC,NPLFREQ,
!      2NPLTOT,NJET,NJETP,NJETD,NJETND,NODCAP,NVELPW,NITMAXW,NENMXW,
!      3IFLGJ(999),NBEDCQ,ISHELE
!       COMMON/PRINTB/ELEVAT(999),ELOLD(999),XDIST(999,999),XBTW(999,999),
!      1TEMP(999,999),ENTHP(999,999),EOLD(999,999),ENBLK(999),EBKOLD(999),
!      2TBULK(999),HITE(16,999),HITOLD(16,999),HTOT(999),HTOLD(999),
!      3HTCFT(999),HTCOEF(999),QFLUXT(999),QFLUXB(999),VEL(999),ELO(999),
!      4VELOLD(999),SRSCOR(16),AREA(999),RAD(999),ARC(999),VOLCN(16),
!      5VOID(999),VGJ(999),ZABLAT(999),ZABOLD(999),DCRUST(999),
!      6DCROLD(999),DABCON(999),DABOLD(999),DFILMT(999),DFOLT(999),
!      7SMFLX(4,999),XLSMF(4,999),TOTVOL,XFACMS(999),XMFLXA,XMCORT,
!      8VCORT,TOTOX,TOTMET,QFLXT,QFLXB,TIME,DTIME,XMCOR(16),VCOR(16),
!      9TCONI,RSAND,HDOWNC,TBOUND,EMISCN,PDRYWL,XDISTO(999),QOXT(999),
!      1XLENSH,XBTWO(999),RCOMP,WDOOR,RSUMP,RSHELL,RPED,TPED,ELSMP,
!      1TENDP(10,999),TFRZSH,TDEBRS,TKDEBR,PDEBR,CPDEBR,ENENDP(10,999),
!      2ENOLDP(10,999),DXVERT,DXSNK,XDSTE(10,999),XBTE(10,999),HXLA(999),
!      3HXLB(999),TSFEB(999),DCRS(999),DCRSLD(999),HCRS(16,999),
!      4HCRSLD(16,999),THETE0(10,999),THETE1(10,999),QSHELL,QSHELE,TSHELI,
!      5SIGOXE(999),FKOXE(999),RINJC,XLSEC,ANGSEC,ANINJC,XLCHAN,WCHNL,
!      6TEFZX(999),TIMSPC(999),DXNODE(999),TNORM(999),FRCSOL(999),
!      7ALPSPR(999),CRAMCON,HINTF,TSHLMX,XFRMX(999),XFROX(999),XFRTX(999),
!      8XMLMX(999),XMLOX(999),XMLTX(999),XTOTX(999),TIMEO,TMAX,EDOWN(999),
!      9HCP(999)
!       COMMON/PRINTR/ QFEH2O,QCRH2O,QZRH2O,QFECO2,QCRCO2,QZRCO2,
!      4XFH2OU,XFCAOH,XFMGCA,XFCACO,XZRMRE,XFEMRE,XCRMRE,XZRORE,XFEORE,   
!      5XCRORE,XMH2O,XMCO2,XMCACO,XMMGCA,XMCAOH,TFWL,TFWS,TBWL,TBWS,      
!      6TMCAL,TMCAS,TCAL,TCAS,TFOS,TFOL,TFMS,TFML,XVISC(28),SVISC(28),    
!      7XMOL(28),FMMOL(28),ROM(28),ROMLIQ(28),AEQM(28,2),BEQM(28,2),
!      8CEQM(28,2),ECL,ECS,ECAL,ECAS,EMCAL,EMCAS,EBWL,EBWS,EFWL,EFWS,    
!      9STEF,GRAV,PI,TCS,TCL,CCL,CCS,RMASSL,WPCC,WPM,WPA,WPCS,ROC,RMASSS,   
!      1ANGSHL,RSLAGL,RSLAGS,HNODT,VFAV,VGAV,QXAV,XWTSS(16),  
!      2TSCS(2),TSCL(2),ESCS(2),ESCL(2),CCSS(2),CCSL(2),ROSTLS,ROSTLL,
!      3XFRGAS,HMINC,TST(99),TSTOP(99),AINTP(99),BINTP(99),DRATIO(999),
!      4XBCN(999),XDCN(999),XBLT(15),ADEC(99),BDEC(99),APOUR(16,99),
!      5BPOUR(16,99),XWTC(14),BWIDTH,THCKCV,TMBOIL,TEBOIL,VFINT,ANGFAN,
!      6ALPMAX,THSHL,XFCABL,XNDMIN,DVMX,DAVMX,DEAVMX,DEMX,TDC,QDCU,QDCUO2,
!      7TSINJ,EINJ,DTINJ,TKINJ,ROEV,CPINJ,SURFT,VSINJ,EMINJ,TSINJO,EINJO,
!      8DTINJO,TKINJO,ROEVO,CPINJO,SURFTO,VSINJO,EMINJO,XLEADE,ARSUM,
!      9DBUBOX,UTRISE,TREMSH,DJET,DFALL,WEBER,FROUDE,XPSAITO,XPEPSTN,
!      1FRAG,XMBEDT,XMBED(16),XLPENT,XLPENA,UJET,UFALL,HFALL,ERPV,
!      2TJETT(99),DJETT(99),HWATP,XDOTJET,DVMXW,DAVMXW,DEMXW,DEAVMXW,
!      3QJETW,XSTMJF,TINTSJF,ESAT,DRDOOR,DRANL,EI,QDCBUO2,QDCBU,
!      4EBEDS,EBEDB
! C.....FIRST EVALUATE WATER PROPERTIES
!       CALL CONWAT(TSAT,KL,PL,CL,UL,HLV,EWL,EWV,CWV,SIGMA,PDRYWL)
! C.....EVALUATE NODAL STEAM PRODUCTION DEPENDING UPON THE AMOUNT
! C.....OF WATER AVAILABLE IN THE NODE VS. HEAT TRANSFER  
!       ZERO=0.D0
!       ONE=1.D0
!       DO 88 K=1,NUMNOD
!       FHEAT(K)=ONE
!       FCRUST(K)=ONE
!       FBED(K)=ONE
!       FCOV(K)=ZERO
!       FDC(K)=ONE
!       XMS(K)=ZERO
!       QBED(K)=ZERO
!       QSURFACE(K)=ZERO
!       QWATER(K)=ZERO
!       QWATERT(K)=ZERO
! C.....SET LOCAL LIMITING HEAT TRANSFER DATA IF DEBRIS OR PARTICLE
! C.....BED EXISTS.
!       IF(NACTIV(K).EQ.0.AND.NJET.LE.1) GO TO 88
!       IF(NACTIV(K).EQ.1) QSURFACE(K)=HWATB(K)*(TSURFW(K)-TSAT)
!       QWATER(K)=QSURFACE(K)
!       QWATERT(K)=QWATER(K)
!       IF(XMBEDJT(K).GT.ZERO) QBED(K)=(QDCBU*XMBEDJ(6,K)
!      1 +QDCBUO2*XMBEDJ(15,K))/AREA(K) 
!       IF(DWAT(K).LE.ZERO) GO TO 88
! C.....UPDATE BED COVERAGE FRACTION IF ONE EXISTS.....      
!       IF(XMBEDJT(K).LE.ZERO) GO TO 488
!       IF(POROSBED.LE.ZERO) GO TO 488
!       HBED(K)=XMBEDJT(K)/(AREA(K)*(ONE-POROSBED)*PBED)
!       FCOV(K)=DMIN1(DWAT(K)/HBED(K),ONE)
!       FCOV(K)=DMAX1(FCOV(K),ZERO)
!       FDC(K)=POROSBED
!       IF(DWAT(K).GT.HBED(K)) FDC(K)=ONE-(ONE-POROSBED)*(HBED(K)/DWAT(K))
!   488 CONTINUE    
!       QWATER(K)=QSURFACE(K)+FCOV(K)*QBED(K)
!       QWATERT(K)=QWATER(K)
! C.....FIRST SEE IF THIS IS THE END OF TIMESTEP CASE AND IF SO SET 
! C.....STEAMING RATE TO ZERO IF WATER IS SUBCOOLED.
!       IF(NEST.EQ.1) GO TO 89
!       IF(EWAT(K).LT.EWL) GO TO 88
!    89 CONTINUE
! C.....NOW CHECK NODE SOURCE/SINK TERMS FOR MASS AND ENERGY.
!       IF(K.GT.1) GO TO 2390
!       XFLWINL=ZERO
!       XFLWINR=PL*ARC(K+1)*DWAT(K+1)*DMAX1(-VLW(K+1),ZERO)
!       XFLWIN=XFLWINR
!       ESUBL=ZERO
!       ESUBR=XFLWINR*DMAX1(EWL-EWAT(K+1),ZERO)
!       EFLWIN=EWAT(K+1)*XFLWIN
!       XFLWOUT=PL*ARC(K+1)*DWAT(K)*DMAX1(VLW(K+1),ZERO)
!       GO TO 2392
!  2390 CONTINUE
!       IF(K.EQ.NUMNOD) GO TO 2391
!       XFLWINL=PL*ARC(K)*DWAT(K-1)*DMAX1(VLW(K),ZERO)
!       XFLWINR=PL*ARC(K+1)*DWAT(K+1)*DMAX1(-VLW(K+1),ZERO)
!       XFLWIN=XFLWINL+XFLWINR
!       ESUBL=XFLWINL*DMAX1(EWL-EWAT(K-1),ZERO)
!       ESUBR=XFLWINR*DMAX1(EWL-EWAT(K+1),ZERO)
!       EFLWIN=EWAT(K-1)*XFLWINL+EWAT(K+1)*XFLWINR
!       XFLWOUT=PL*(DWAT(K)*ARC(K)*DMAX1(-VLW(K),ZERO)+
!      1 ARC(K+1)*DWAT(K)*DMAX1(VLW(K+1),ZERO))
!       GO TO 2392
!  2391 CONTINUE
!       XFLWINL=PL*ARC(K)*DWAT(K-1)*DMAX1(VLW(K),ZERO)
!       XFLWINR=ZERO
!       XFLWIN=XFLWINL
!       ESUBL=XFLWINL*DMAX1(EWL-EWAT(K-1),ZERO)
!       ESUBR=ZERO
!       EFLWIN=EWAT(K-1)*XFLWIN
!       XFLWOUT=PL*DWAT(K)*ARC(K)*DMAX1(-VLW(K),ZERO)
!  2392 CONTINUE
! C.....DEPENDING UPON LOCAL CONDITIONS, DECIDE IF BOILING IS 
!       QSUBCL=ESUBL+ESUBR+DSRDTW(K)*DMAX1(EWL-ESRDTW(K),ZERO)
!       IF(EWAT(K).GE.EWL) GO TO 178
!       XMOLD=PL*DWATOLD(K)*AREA(K)
!       XMNEW=XMOLD+DTIME*(DSRDTW(K)-DSRDC(K)+XFLWIN-XFLWOUT)
!       EFINAL=(XMOLD*EWATOLD(K)+DTIME*(DSRDTW(K)*ESRDTW(K)+EFLWIN
!      1+QSURFACE(K)*AREA(K)-(XFLWOUT+DSRDC(K))*EWAT(K)))/XMNEW
!       IF(EFINAL.LT.EWL) GO TO 88
!       QSUBCL=(XMNEW*(EWL-EWAT(K)))/DTIME 
!   178 CONTINUE
!       XMDOTS=(QSURFACE(K)*AREA(K)-QSUBCL)/HLV
!       IF(NJET.GT.0.AND.K.EQ.NJETP) XMDOTS=XMDOTS+XSTMJF
!       XMS(K)=XMDOTS
!       XMAVAIL=(PL*DWAT(K)*AREA(K))/DTIME
!       IF(XMDOTS.LE.XMAVAIL) GO TO 88
! C.....BOILING AT NODE IS WATER-LIMITED; UPDATE MASS BALANCE
!       XMS(K)=XMAVAIL
!       QWATER(K)=(HLV*XMAVAIL+QSUBCL)/AREA(K)
!       FHEAT(K)=DMIN1(QWATER(K)/QWATERT(K),ONE)
!       QCRUST=DMAX1(QWATER(K)-FCOV(K)*QBED(K),ZERO)
!       FCRUST(K)=ZERO
!       IF(QWATER(K).GT.ZERO) FCRUST(K)=DMIN1(QCRUST/QWATER(K),ONE)
!       FBED(K)=DMIN1((FCOV(K)*QBED(K))/QWATER(K),ONE)
!    88 CONTINUE
!       RETURN
!       END
